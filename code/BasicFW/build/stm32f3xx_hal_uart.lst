ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_uart.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.UART_EndTxTransfer,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	UART_EndTxTransfer:
  27              	.LFB169:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @file    stm32f3xx_hal_uart.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @verbatim
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                         ##### How to use this driver #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   [..]
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART pins configuration:
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     ##### Callback registration #####
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     ==================================
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and a pointer to the user callback function.
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     weak (surcharged) function.
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and the Callback ID.
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   @endverbatim
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @attention
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ******************************************************************************
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #include "stm32f3xx_hal.h"
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup STM32F3xx_HAL_Driver
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART UART
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief HAL UART module driver
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** ===============================================================================
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in asynchronous mode.
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Baud Rate
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Word Length
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Stop Bit
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Hardware flow control
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Receiver/transmitter modes
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) Over Sampling Method
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) One-Bit Sampling Method
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) data logical level inversion
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX and TX pins swap
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) RX overrun detection disabling
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) DMA disabling on RX error
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) MSB first on communication line
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (++) auto Baud rate detection
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     are available in reference manual).
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 6


 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   following table.
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   Table 1. UART frame format.
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check the parameters */
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 7


 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check UART instance */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 8


 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart             UART handle.
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 9


 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the LIN UART instance */
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the Break detection length parameter */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 10


 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart        UART handle.
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        This parameter can be one of the following values:
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the wake up method parameter */
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 11


 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware */
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspInitCallback(huart);
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the UART Communication parameters */
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 12


 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart == NULL)
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DeInit the low level hardware */
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 13


 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Register a User UART Callback
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart uart handle
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This parameter can be one of the following values:
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (pCallback == NULL)
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_ERROR;
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 14


 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 15


 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     status =  HAL_ERROR;
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return status;
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart uart handle
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This parameter can be one of the following values:
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 16


 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (CallbackID)
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 17


 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default :
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         status =  HAL_ERROR;
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     status =  HAL_ERROR;
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return status;
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### IO operation functions #####
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     and Half duplex data transfers.
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) There are two mode of transfer:
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            after finishing transfer.
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The end of the data processing will be indicated through the
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            using DMA mode.
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Blocking mode API's are :
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive()
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 18


 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Abort()
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         Errors are handled as follows :
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart   UART handle.
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 19


1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be sent.
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *pdata16bits;
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = NULL;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = pData;
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = NULL;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (pdata8bits == NULL)
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 20


1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart   UART handle.
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData   Pointer to data buffer (u8 or u16 data elements).
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size    Amount of data elements (u8 or u16) to be received.
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout Timeout duration.
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *pdata16bits;
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask;
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return  HAL_ERROR;
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tickstart = HAL_GetTick();
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 21


1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = NULL;
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata8bits  = pData;
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = NULL;
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* as long as data have to be received */
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (pdata8bits == NULL)
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount--;
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 22


1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR       = NULL;
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 23


1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR       = NULL;
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 provided through pData.
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be sent.
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 24


1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA error callback */
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA abort callback */
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Set error code to DMA */
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Restore huart->gState to ready */
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_ERROR;
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in the UART CR3 register */
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 25


1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the parity bit (MSB position).
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         of u16 available through pData.
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param pData Pointer to data buffer (u8 or u16 data elements).
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Size  Amount of data elements (u8 or u16) to be received.
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_ERROR;
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA error callback */
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the DMA abort callback */
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the DMA channel */
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Set error code to DMA */
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 26


1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Restore huart->gState to ready */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_ERROR;
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     in the UART CR3 register */
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 27


1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 28


1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 29


1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 30


1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 31


1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Tx transfer counter */
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Set error code to DMA */
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 32


1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset Rx transfer counter */
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      before any call to DMA Abort functions */
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmatx != NULL)
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 33


1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmarx != NULL)
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        Otherwise, set it to NULL */
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 34


1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 0U;
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (abortcplt == 1U)
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear ISR function pointers */
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR = NULL;
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset errorCode */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Discard the received data */
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort complete callback */
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 35


1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx != NULL)
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA TX */
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Tx transfer counter */
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount = 0U;
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear TxISR function pointers */
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR = NULL;
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->gState to Ready */
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Tx transfer counter */
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear TxISR function pointers */
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->gState to Ready */
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 36


1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         This procedure performs following operations :
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - Set handle State to READY
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx != NULL)
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Abort DMA RX */
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Reset Rx transfer counter */
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxXferCount = 0U;
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 37


2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Discard the received data */
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Reset Rx transfer counter */
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RxISR function pointer */
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 38


2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorflags;
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t errorcode;
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If no error occurs */
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE | 
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == 0U)
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (huart->RxISR != NULL)
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxISR(huart);
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* If some errors occur */
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((errorflags != 0U)
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 39


2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Receiver Timeout interrupt occurred ---------------------------------*/
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (((isrflags & USART_ISR_RTOF) != 0U) && ((cr1its & USART_CR1_RTOIE) != 0U))
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_RTO;
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call UART Error Call back function if need be ----------------------------*/
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* UART in mode Receiver --------------------------------------------------*/
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (huart->RxISR != NULL)
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxISR(huart);
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* If Error is to be considered as blocking :
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - Receiver Timeout error in Reception
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - Overrun error in Reception
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           - any error occurs in DMA mode reception
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       */
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       errorcode = huart->ErrorCode;
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         UART_EndRxTransfer(huart);
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           if (huart->hdmarx != NULL)
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Abort DMA RX */
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 40


2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           else
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /* Call user error callback */
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /*Call registered error callback*/
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             huart->ErrorCallback(huart);
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             /*Call legacy weak error callback*/
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           }
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         else
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Call user error callback */
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /*Call registered error callback*/
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCallback(huart);
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /*Call legacy weak error callback*/
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       else
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            Error is notified to user through user error callback */
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /*Call registered error callback*/
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCallback(huart);
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /*Call legacy weak error callback*/
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   } /* End if some error occurs */
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->WakeupCallback(huart);
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 41


2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxISR != NULL)
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxISR(huart);
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 42


2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART error callback.
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 43


2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UNUSED(huart);
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****    */
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART control functions
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****  ===============================================================================
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_ReceiverTimeout_Config() API allows to configure the receiver timeout value on th
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_EnableReceiverTimeout() API enables the receiver timeout feature
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_UART_DisableReceiverTimeout() API disables the receiver timeout feature
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 44


2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Update on the fly the receiver timeout value in RTOR register.
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  TimeoutValue receiver timeout value in number of baud blocks. The timeout
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                     value must be less or equal to 0x0FFFFFFFF.
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_UART_ReceiverTimeout_Config(UART_HandleTypeDef *huart, uint32_t TimeoutValue)
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->RTOR, USART_RTOR_RTO, TimeoutValue);
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver timeout feature.
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_EnableReceiverTimeout(UART_HandleTypeDef *huart)
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Set the USART RTOEN bit */
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable the UART receiver timeout feature.
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                    the configuration information for the specified UART module.
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DisableReceiverTimeout(UART_HandleTypeDef *huart)
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 45


2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Locked */
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_LOCK(huart);
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY;
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear the USART RTOEN bit */
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR2, USART_CR2_RTOEN);
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Process Unlocked */
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UNLOCK(huart);
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_OK;
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return HAL_BUSY;
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 46


2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status.
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear TE and RE bits */
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 47


2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Transmit break characters.
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Send break characters */
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @verbatim
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   ==============================================================================
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     [..]
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     This subsection provides functions allowing to :
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle state.
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (+) Return the UART handle error code
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** @endverbatim
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Return the UART handle state.
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL state
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 48


2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1;
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp2;
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp1 = huart->gState;
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *               the configuration information for the specified UART.
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval UART Error Code
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @}
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @{
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval none
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init the UART Callback settings */
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 49


2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg;
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t brrtemp;
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * to huart->Init.StopBits value */
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Configure
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tmpreg |= huart->Init.OneBitSampling;
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 50


2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       ret = HAL_ERROR;
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     switch (clocksource)
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK1Freq();
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetPCLK2Freq();
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pclk = HAL_RCC_GetSysClockFreq();
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 51


2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         ret = HAL_ERROR;
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       ret = HAL_ERROR;
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear ISR function pointers */
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxISR = NULL;
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return ret;
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure data inversion */
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 52


2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief Check the UART Idle State.
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   tickstart = HAL_GetTick();
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 53


2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until TEACK flag is set */
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout occurred */
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if the Receiver is enabled */
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Wait until REACK flag is set */
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Timeout occurred */
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return HAL_TIMEOUT;
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Initialize the UART State */
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UNLOCK(huart);
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart     UART handle.
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Tickstart Tick start value
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param Timeout   Timeout duration
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval HAL status
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Check for the Timeout */
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         __HAL_UNLOCK(huart);
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 54


2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         return HAL_TIMEOUT;
2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if (READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U)
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Clear Receiver Timeout flag*/
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->gState = HAL_UART_STATE_READY;
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           /* Process Unlocked */
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           __HAL_UNLOCK(huart);
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           return HAL_TIMEOUT;
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return HAL_OK;
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  29              		.loc 1 3032 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
  35              		.loc 1 3034 0
  36 0000 0268     		ldr	r2, [r0]
  37 0002 1368     		ldr	r3, [r2]
  38 0004 23F0C003 		bic	r3, r3, #192
  39 0008 1360     		str	r3, [r2]
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
  40              		.loc 1 3037 0
  41 000a 2023     		movs	r3, #32
  42 000c 4367     		str	r3, [r0, #116]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 55


  43 000e 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE169:
  47              		.section	.text.UART_EndRxTransfer,"ax",%progbits
  48              		.align	2
  49              		.thumb
  50              		.thumb_func
  52              	UART_EndRxTransfer:
  53              	.LFB170:
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart UART handle.
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  54              		.loc 1 3047 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
  59              	.LVL1:
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
  60              		.loc 1 3049 0
  61 0000 0268     		ldr	r2, [r0]
  62 0002 1368     		ldr	r3, [r2]
  63 0004 23F49073 		bic	r3, r3, #288
  64 0008 1360     		str	r3, [r2]
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
  65              		.loc 1 3050 0
  66 000a 0268     		ldr	r2, [r0]
  67 000c 9368     		ldr	r3, [r2, #8]
  68 000e 23F00103 		bic	r3, r3, #1
  69 0012 9360     		str	r3, [r2, #8]
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
  70              		.loc 1 3053 0
  71 0014 2023     		movs	r3, #32
  72 0016 8367     		str	r3, [r0, #120]
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxISR = NULL;
  73              		.loc 1 3056 0
  74 0018 0023     		movs	r3, #0
  75 001a 0366     		str	r3, [r0, #96]
  76 001c 7047     		bx	lr
  77              		.cfi_endproc
  78              	.LFE170:
  80 001e 00BF     		.section	.text.UART_TxISR_8BIT,"ax",%progbits
  81              		.align	2
  82              		.thumb
  83              		.thumb_func
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 56


  85              	UART_TxISR_8BIT:
  86              	.LFB181:
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Circular mode */
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 57


3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* DMA Normal mode */
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (hdma->Init.Mode != DMA_CIRCULAR)
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****        in the UART CR3 register */
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param hdma DMA handle.
3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 58


3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = 0U;
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered error callback*/
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback(huart);
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak error callback*/
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered error callback*/
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCallback(huart);
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak error callback*/
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 59


3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmarx != NULL)
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort complete callback */
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 60


3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->hdmatx != NULL)
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       return;
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Reset errorCode */
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort complete callback */
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 61


3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  hdma DMA handle.
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Discard the received data */
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call user Abort complete callback */
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
  87              		.loc 1 3394 0
  88              		.cfi_startproc
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 62


  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.LVL2:
3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
  93              		.loc 1 3396 0
  94 0000 436F     		ldr	r3, [r0, #116]
  95 0002 212B     		cmp	r3, #33
  96 0004 1CD1     		bne	.L3
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
  97              		.loc 1 3398 0
  98 0006 B0F85230 		ldrh	r3, [r0, #82]
  99 000a 9BB2     		uxth	r3, r3
 100 000c 53B9     		cbnz	r3, .L5
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 101              		.loc 1 3401 0
 102 000e 0268     		ldr	r2, [r0]
 103 0010 1368     		ldr	r3, [r2]
 104 0012 23F08003 		bic	r3, r3, #128
 105 0016 1360     		str	r3, [r2]
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 106              		.loc 1 3404 0
 107 0018 0268     		ldr	r2, [r0]
 108 001a 1368     		ldr	r3, [r2]
 109 001c 43F04003 		orr	r3, r3, #64
 110 0020 1360     		str	r3, [r2]
 111 0022 7047     		bx	lr
 112              	.L5:
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
 113              		.loc 1 3408 0
 114 0024 0368     		ldr	r3, [r0]
 115 0026 C26C     		ldr	r2, [r0, #76]
 116 0028 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 117 002a 1A85     		strh	r2, [r3, #40]	@ movhi
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr++;
 118              		.loc 1 3409 0
 119 002c C36C     		ldr	r3, [r0, #76]
 120 002e 0133     		adds	r3, r3, #1
 121 0030 C364     		str	r3, [r0, #76]
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 122              		.loc 1 3410 0
 123 0032 B0F85230 		ldrh	r3, [r0, #82]
 124 0036 9BB2     		uxth	r3, r3
 125 0038 013B     		subs	r3, r3, #1
 126 003a 9BB2     		uxth	r3, r3
 127 003c A0F85230 		strh	r3, [r0, #82]	@ movhi
 128              	.L3:
 129 0040 7047     		bx	lr
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 63


 130              		.cfi_endproc
 131              	.LFE181:
 133 0042 00BF     		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 134              		.align	2
 135              		.thumb
 136              		.thumb_func
 138              	UART_TxISR_16BIT:
 139              	.LFB182:
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 140              		.loc 1 3423 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 145              	.LVL3:
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *tmp;
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 146              		.loc 1 3427 0
 147 0000 436F     		ldr	r3, [r0, #116]
 148 0002 212B     		cmp	r3, #33
 149 0004 1ED1     		bne	.L6
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 150              		.loc 1 3429 0
 151 0006 B0F85230 		ldrh	r3, [r0, #82]
 152 000a 9BB2     		uxth	r3, r3
 153 000c 53B9     		cbnz	r3, .L8
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 154              		.loc 1 3432 0
 155 000e 0268     		ldr	r2, [r0]
 156 0010 1368     		ldr	r3, [r2]
 157 0012 23F08003 		bic	r3, r3, #128
 158 0016 1360     		str	r3, [r2]
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 159              		.loc 1 3435 0
 160 0018 0268     		ldr	r2, [r0]
 161 001a 1368     		ldr	r3, [r2]
 162 001c 43F04003 		orr	r3, r3, #64
 163 0020 1360     		str	r3, [r2]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 64


 164 0022 7047     		bx	lr
 165              	.L8:
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     else
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 166              		.loc 1 3439 0
 167 0024 C36C     		ldr	r3, [r0, #76]
 168              	.LVL4:
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 169              		.loc 1 3440 0
 170 0026 0268     		ldr	r2, [r0]
 171 0028 1B88     		ldrh	r3, [r3]
 172              	.LVL5:
 173 002a C3F30803 		ubfx	r3, r3, #0, #9
 174 002e 1385     		strh	r3, [r2, #40]	@ movhi
 175              	.LVL6:
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 176              		.loc 1 3441 0
 177 0030 C36C     		ldr	r3, [r0, #76]
 178 0032 0233     		adds	r3, r3, #2
 179 0034 C364     		str	r3, [r0, #76]
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->TxXferCount--;
 180              		.loc 1 3442 0
 181 0036 B0F85230 		ldrh	r3, [r0, #82]
 182 003a 9BB2     		uxth	r3, r3
 183 003c 013B     		subs	r3, r3, #1
 184 003e 9BB2     		uxth	r3, r3
 185 0040 A0F85230 		strh	r3, [r0, #82]	@ movhi
 186              	.L6:
 187 0044 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE182:
 191 0046 00BF     		.section	.text.HAL_UART_MspInit,"ax",%progbits
 192              		.align	2
 193              		.weak	HAL_UART_MspInit
 194              		.thumb
 195              		.thumb_func
 197              	HAL_UART_MspInit:
 198              	.LFB128:
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 199              		.loc 1 650 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              		@ link register save eliminated.
 204              	.LVL7:
 205 0000 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE128:
 209 0002 00BF     		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 210              		.align	2
 211              		.weak	HAL_UART_MspDeInit
 212              		.thumb
 213              		.thumb_func
 215              	HAL_UART_MspDeInit:
 216              	.LFB129:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 65


 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 217              		.loc 1 665 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222              	.LVL8:
 223 0000 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE129:
 227 0002 00BF     		.section	.text.HAL_UART_DeInit,"ax",%progbits
 228              		.align	2
 229              		.global	HAL_UART_DeInit
 230              		.thumb
 231              		.thumb_func
 233              	HAL_UART_DeInit:
 234              	.LFB127:
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 235              		.loc 1 605 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              	.LVL9:
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 240              		.loc 1 607 0
 241 0000 C0B1     		cbz	r0, .L13
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 242              		.loc 1 605 0
 243 0002 38B5     		push	{r3, r4, r5, lr}
 244              	.LCFI0:
 245              		.cfi_def_cfa_offset 16
 246              		.cfi_offset 3, -16
 247              		.cfi_offset 4, -12
 248              		.cfi_offset 5, -8
 249              		.cfi_offset 14, -4
 250 0004 0446     		mov	r4, r0
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 251              		.loc 1 615 0
 252 0006 2423     		movs	r3, #36
 253 0008 4367     		str	r3, [r0, #116]
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 254              		.loc 1 617 0
 255 000a 0268     		ldr	r2, [r0]
 256 000c 1368     		ldr	r3, [r2]
 257 000e 23F00103 		bic	r3, r3, #1
 258 0012 1360     		str	r3, [r2]
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 259              		.loc 1 619 0
 260 0014 0368     		ldr	r3, [r0]
 261 0016 0025     		movs	r5, #0
 262 0018 1D60     		str	r5, [r3]
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 263              		.loc 1 620 0
 264 001a 0368     		ldr	r3, [r0]
 265 001c 5D60     		str	r5, [r3, #4]
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 266              		.loc 1 621 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 66


 267 001e 0368     		ldr	r3, [r0]
 268 0020 9D60     		str	r5, [r3, #8]
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 269              		.loc 1 632 0
 270 0022 FFF7FEFF 		bl	HAL_UART_MspDeInit
 271              	.LVL10:
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 272              		.loc 1 635 0
 273 0026 E567     		str	r5, [r4, #124]
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 274              		.loc 1 636 0
 275 0028 6567     		str	r5, [r4, #116]
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 276              		.loc 1 637 0
 277 002a A567     		str	r5, [r4, #120]
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 278              		.loc 1 639 0
 279 002c 84F87050 		strb	r5, [r4, #112]
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 280              		.loc 1 641 0
 281 0030 2846     		mov	r0, r5
 282 0032 38BD     		pop	{r3, r4, r5, pc}
 283              	.LVL11:
 284              	.L13:
 285              	.LCFI1:
 286              		.cfi_def_cfa_offset 0
 287              		.cfi_restore 3
 288              		.cfi_restore 4
 289              		.cfi_restore 5
 290              		.cfi_restore 14
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 291              		.loc 1 609 0
 292 0034 0120     		movs	r0, #1
 293              	.LVL12:
 294 0036 7047     		bx	lr
 295              		.cfi_endproc
 296              	.LFE127:
 298              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 299              		.align	2
 300              		.global	HAL_UART_Transmit_IT
 301              		.thumb
 302              		.thumb_func
 304              	HAL_UART_Transmit_IT:
 305              	.LFB132:
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 306              		.loc 1 1175 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 0
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 310              		@ link register save eliminated.
 311              	.LVL13:
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 312              		.loc 1 1177 0
 313 0000 436F     		ldr	r3, [r0, #116]
 314 0002 202B     		cmp	r3, #32
 315 0004 27D1     		bne	.L20
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 67


 316              		.loc 1 1179 0
 317 0006 41B3     		cbz	r1, .L21
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 318              		.loc 1 1179 0 is_stmt 0 discriminator 1
 319 0008 4AB3     		cbz	r2, .L22
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 320              		.loc 1 1184 0 is_stmt 1
 321 000a 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 322 000e 012B     		cmp	r3, #1
 323 0010 27D0     		beq	.L23
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 324              		.loc 1 1184 0 is_stmt 0 discriminator 2
 325 0012 0123     		movs	r3, #1
 326 0014 80F87030 		strb	r3, [r0, #112]
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
 327              		.loc 1 1186 0 is_stmt 1 discriminator 2
 328 0018 C164     		str	r1, [r0, #76]
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 329              		.loc 1 1187 0 discriminator 2
 330 001a A0F85020 		strh	r2, [r0, #80]	@ movhi
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR       = NULL;
 331              		.loc 1 1188 0 discriminator 2
 332 001e A0F85220 		strh	r2, [r0, #82]	@ movhi
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 333              		.loc 1 1189 0 discriminator 2
 334 0022 0023     		movs	r3, #0
 335 0024 4366     		str	r3, [r0, #100]
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 336              		.loc 1 1191 0 discriminator 2
 337 0026 C367     		str	r3, [r0, #124]
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 338              		.loc 1 1192 0 discriminator 2
 339 0028 2123     		movs	r3, #33
 340 002a 4367     		str	r3, [r0, #116]
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 341              		.loc 1 1195 0 discriminator 2
 342 002c 8368     		ldr	r3, [r0, #8]
 343 002e B3F5805F 		cmp	r3, #4096
 344 0032 04D1     		bne	.L18
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 345              		.loc 1 1195 0 is_stmt 0 discriminator 1
 346 0034 0369     		ldr	r3, [r0, #16]
 347 0036 13B9     		cbnz	r3, .L18
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 348              		.loc 1 1197 0 is_stmt 1
 349 0038 0B4B     		ldr	r3, .L24
 350 003a 4366     		str	r3, [r0, #100]
 351 003c 01E0     		b	.L19
 352              	.L18:
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 353              		.loc 1 1201 0
 354 003e 0B4B     		ldr	r3, .L24+4
 355 0040 4366     		str	r3, [r0, #100]
 356              	.L19:
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 357              		.loc 1 1204 0
 358 0042 0023     		movs	r3, #0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 68


 359 0044 80F87030 		strb	r3, [r0, #112]
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 360              		.loc 1 1207 0
 361 0048 0168     		ldr	r1, [r0]
 362              	.LVL14:
 363 004a 0A68     		ldr	r2, [r1]
 364              	.LVL15:
 365 004c 42F08002 		orr	r2, r2, #128
 366 0050 0A60     		str	r2, [r1]
 367              	.LVL16:
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 368              		.loc 1 1209 0
 369 0052 1846     		mov	r0, r3
 370              	.LVL17:
 371 0054 7047     		bx	lr
 372              	.LVL18:
 373              	.L20:
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 374              		.loc 1 1213 0
 375 0056 0220     		movs	r0, #2
 376              	.LVL19:
 377 0058 7047     		bx	lr
 378              	.LVL20:
 379              	.L21:
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 380              		.loc 1 1181 0
 381 005a 0120     		movs	r0, #1
 382              	.LVL21:
 383 005c 7047     		bx	lr
 384              	.LVL22:
 385              	.L22:
 386 005e 0120     		movs	r0, #1
 387              	.LVL23:
 388 0060 7047     		bx	lr
 389              	.LVL24:
 390              	.L23:
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 391              		.loc 1 1184 0
 392 0062 0220     		movs	r0, #2
 393              	.LVL25:
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 394              		.loc 1 1215 0
 395 0064 7047     		bx	lr
 396              	.L25:
 397 0066 00BF     		.align	2
 398              	.L24:
 399 0068 00000000 		.word	UART_TxISR_16BIT
 400 006c 00000000 		.word	UART_TxISR_8BIT
 401              		.cfi_endproc
 402              	.LFE132:
 404              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 405              		.align	2
 406              		.global	HAL_UART_Receive_IT
 407              		.thumb
 408              		.thumb_func
 410              	HAL_UART_Receive_IT:
 411              	.LFB133:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 69


1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 412              		.loc 1 1228 0
 413              		.cfi_startproc
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416              		@ link register save eliminated.
 417              	.LVL26:
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 418              		.loc 1 1230 0
 419 0000 836F     		ldr	r3, [r0, #120]
 420 0002 202B     		cmp	r3, #32
 421 0004 59D1     		bne	.L37
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 422              		.loc 1 1232 0
 423 0006 0029     		cmp	r1, #0
 424 0008 59D0     		beq	.L38
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 425              		.loc 1 1232 0 is_stmt 0 discriminator 1
 426 000a 002A     		cmp	r2, #0
 427 000c 59D0     		beq	.L39
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 428              		.loc 1 1237 0 is_stmt 1
 429 000e 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 430 0012 012B     		cmp	r3, #1
 431 0014 57D0     		beq	.L40
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 432              		.loc 1 1237 0 is_stmt 0 discriminator 2
 433 0016 0123     		movs	r3, #1
 434 0018 80F87030 		strb	r3, [r0, #112]
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize  = Size;
 435              		.loc 1 1239 0 is_stmt 1 discriminator 2
 436 001c 4165     		str	r1, [r0, #84]
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 437              		.loc 1 1240 0 discriminator 2
 438 001e A0F85820 		strh	r2, [r0, #88]	@ movhi
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxISR       = NULL;
 439              		.loc 1 1241 0 discriminator 2
 440 0022 A0F85A20 		strh	r2, [r0, #90]	@ movhi
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 441              		.loc 1 1242 0 discriminator 2
 442 0026 0023     		movs	r3, #0
 443 0028 0366     		str	r3, [r0, #96]
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 444              		.loc 1 1245 0 discriminator 2
 445 002a 8368     		ldr	r3, [r0, #8]
 446 002c B3F5805F 		cmp	r3, #4096
 447 0030 0AD1     		bne	.L28
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 448              		.loc 1 1245 0 is_stmt 0 discriminator 1
 449 0032 0369     		ldr	r3, [r0, #16]
 450 0034 23B9     		cbnz	r3, .L29
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 451              		.loc 1 1245 0 discriminator 3
 452 0036 40F2FF13 		movw	r3, #511
 453 003a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 454 003e 1EE0     		b	.L30
 455              	.L29:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 70


1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 456              		.loc 1 1245 0 discriminator 4
 457 0040 FF23     		movs	r3, #255
 458 0042 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 459 0046 1AE0     		b	.L30
 460              	.L28:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 461              		.loc 1 1245 0 discriminator 2
 462 0048 4BB9     		cbnz	r3, .L31
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 463              		.loc 1 1245 0 discriminator 5
 464 004a 0369     		ldr	r3, [r0, #16]
 465 004c 1BB9     		cbnz	r3, .L32
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 466              		.loc 1 1245 0 discriminator 7
 467 004e FF23     		movs	r3, #255
 468 0050 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 469 0054 13E0     		b	.L30
 470              	.L32:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 471              		.loc 1 1245 0 discriminator 8
 472 0056 7F23     		movs	r3, #127
 473 0058 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 474 005c 0FE0     		b	.L30
 475              	.L31:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 476              		.loc 1 1245 0 discriminator 6
 477 005e B3F1805F 		cmp	r3, #268435456
 478 0062 09D1     		bne	.L33
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 479              		.loc 1 1245 0 discriminator 9
 480 0064 0369     		ldr	r3, [r0, #16]
 481 0066 1BB9     		cbnz	r3, .L34
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 482              		.loc 1 1245 0 discriminator 11
 483 0068 7F23     		movs	r3, #127
 484 006a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 485 006e 06E0     		b	.L30
 486              	.L34:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 487              		.loc 1 1245 0 discriminator 12
 488 0070 3F23     		movs	r3, #63
 489 0072 A0F85C30 		strh	r3, [r0, #92]	@ movhi
 490 0076 02E0     		b	.L30
 491              	.L33:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 492              		.loc 1 1245 0 discriminator 10
 493 0078 0023     		movs	r3, #0
 494 007a A0F85C30 		strh	r3, [r0, #92]	@ movhi
 495              	.L30:
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 496              		.loc 1 1247 0 is_stmt 1
 497 007e 0023     		movs	r3, #0
 498 0080 C367     		str	r3, [r0, #124]
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 499              		.loc 1 1248 0
 500 0082 2223     		movs	r3, #34
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 71


 501 0084 8367     		str	r3, [r0, #120]
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 502              		.loc 1 1251 0
 503 0086 0268     		ldr	r2, [r0]
 504              	.LVL27:
 505 0088 9368     		ldr	r3, [r2, #8]
 506 008a 43F00103 		orr	r3, r3, #1
 507 008e 9360     		str	r3, [r2, #8]
 508              	.LVL28:
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 509              		.loc 1 1254 0
 510 0090 8368     		ldr	r3, [r0, #8]
 511 0092 B3F5805F 		cmp	r3, #4096
 512 0096 04D1     		bne	.L35
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 513              		.loc 1 1254 0 is_stmt 0 discriminator 1
 514 0098 0369     		ldr	r3, [r0, #16]
 515 009a 13B9     		cbnz	r3, .L35
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 516              		.loc 1 1256 0 is_stmt 1
 517 009c 0B4B     		ldr	r3, .L41
 518 009e 0366     		str	r3, [r0, #96]
 519 00a0 01E0     		b	.L36
 520              	.L35:
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 521              		.loc 1 1260 0
 522 00a2 0B4B     		ldr	r3, .L41+4
 523 00a4 0366     		str	r3, [r0, #96]
 524              	.L36:
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 525              		.loc 1 1263 0
 526 00a6 0023     		movs	r3, #0
 527 00a8 80F87030 		strb	r3, [r0, #112]
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 528              		.loc 1 1266 0
 529 00ac 0168     		ldr	r1, [r0]
 530              	.LVL29:
 531 00ae 0A68     		ldr	r2, [r1]
 532 00b0 42F49072 		orr	r2, r2, #288
 533 00b4 0A60     		str	r2, [r1]
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 534              		.loc 1 1268 0
 535 00b6 1846     		mov	r0, r3
 536              	.LVL30:
 537 00b8 7047     		bx	lr
 538              	.LVL31:
 539              	.L37:
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 540              		.loc 1 1272 0
 541 00ba 0220     		movs	r0, #2
 542              	.LVL32:
 543 00bc 7047     		bx	lr
 544              	.LVL33:
 545              	.L38:
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 546              		.loc 1 1234 0
 547 00be 0120     		movs	r0, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 72


 548              	.LVL34:
 549 00c0 7047     		bx	lr
 550              	.LVL35:
 551              	.L39:
 552 00c2 0120     		movs	r0, #1
 553              	.LVL36:
 554 00c4 7047     		bx	lr
 555              	.LVL37:
 556              	.L40:
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 557              		.loc 1 1237 0
 558 00c6 0220     		movs	r0, #2
 559              	.LVL38:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 560              		.loc 1 1274 0
 561 00c8 7047     		bx	lr
 562              	.L42:
 563 00ca 00BF     		.align	2
 564              	.L41:
 565 00cc 00000000 		.word	UART_RxISR_16BIT
 566 00d0 00000000 		.word	UART_RxISR_8BIT
 567              		.cfi_endproc
 568              	.LFE133:
 570              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 571              		.align	2
 572              		.global	HAL_UART_Transmit_DMA
 573              		.thumb
 574              		.thumb_func
 576              	HAL_UART_Transmit_DMA:
 577              	.LFB134:
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
 578              		.loc 1 1287 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              	.LVL39:
 583 0000 10B5     		push	{r4, lr}
 584              	.LCFI2:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 4, -8
 587              		.cfi_offset 14, -4
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 588              		.loc 1 1289 0
 589 0002 446F     		ldr	r4, [r0, #116]
 590 0004 202C     		cmp	r4, #32
 591 0006 3ED1     		bne	.L46
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 592              		.loc 1 1291 0
 593 0008 0029     		cmp	r1, #0
 594 000a 3ED0     		beq	.L47
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 595              		.loc 1 1291 0 is_stmt 0 discriminator 1
 596 000c 002A     		cmp	r2, #0
 597 000e 3ED0     		beq	.L48
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 598              		.loc 1 1296 0 is_stmt 1
 599 0010 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 73


 600 0014 012B     		cmp	r3, #1
 601 0016 3CD0     		beq	.L49
 602 0018 1346     		mov	r3, r2
 603 001a 0446     		mov	r4, r0
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 604              		.loc 1 1296 0 is_stmt 0 discriminator 2
 605 001c 0122     		movs	r2, #1
 606              	.LVL40:
 607 001e 80F87020 		strb	r2, [r0, #112]
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferSize  = Size;
 608              		.loc 1 1298 0 is_stmt 1 discriminator 2
 609 0022 C164     		str	r1, [r0, #76]
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 610              		.loc 1 1299 0 discriminator 2
 611 0024 A0F85030 		strh	r3, [r0, #80]	@ movhi
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 612              		.loc 1 1300 0 discriminator 2
 613 0028 A0F85230 		strh	r3, [r0, #82]	@ movhi
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 614              		.loc 1 1302 0 discriminator 2
 615 002c 0022     		movs	r2, #0
 616 002e C267     		str	r2, [r0, #124]
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 617              		.loc 1 1303 0 discriminator 2
 618 0030 2122     		movs	r2, #33
 619 0032 4267     		str	r2, [r0, #116]
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 620              		.loc 1 1305 0 discriminator 2
 621 0034 826E     		ldr	r2, [r0, #104]
 622 0036 D2B1     		cbz	r2, .L45
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 623              		.loc 1 1308 0
 624 0038 1749     		ldr	r1, .L51
 625              	.LVL41:
 626 003a 9162     		str	r1, [r2, #40]
 627              	.LVL42:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 628              		.loc 1 1311 0
 629 003c 826E     		ldr	r2, [r0, #104]
 630 003e 1749     		ldr	r1, .L51+4
 631 0040 D162     		str	r1, [r2, #44]
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 632              		.loc 1 1314 0
 633 0042 826E     		ldr	r2, [r0, #104]
 634 0044 1649     		ldr	r1, .L51+8
 635 0046 1163     		str	r1, [r2, #48]
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 636              		.loc 1 1317 0
 637 0048 826E     		ldr	r2, [r0, #104]
 638 004a 0021     		movs	r1, #0
 639 004c 5163     		str	r1, [r2, #52]
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 640              		.loc 1 1320 0
 641 004e 0268     		ldr	r2, [r0]
 642 0050 2832     		adds	r2, r2, #40
 643 0052 C16C     		ldr	r1, [r0, #76]
 644 0054 806E     		ldr	r0, [r0, #104]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 74


 645              	.LVL43:
 646 0056 FFF7FEFF 		bl	HAL_DMA_Start_IT
 647              	.LVL44:
 648 005a 40B1     		cbz	r0, .L45
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 649              		.loc 1 1323 0
 650 005c 1023     		movs	r3, #16
 651 005e E367     		str	r3, [r4, #124]
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 652              		.loc 1 1325 0
 653 0060 0023     		movs	r3, #0
 654 0062 84F87030 		strb	r3, [r4, #112]
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 655              		.loc 1 1328 0
 656 0066 2023     		movs	r3, #32
 657 0068 6367     		str	r3, [r4, #116]
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 658              		.loc 1 1330 0
 659 006a 0120     		movs	r0, #1
 660 006c 10BD     		pop	{r4, pc}
 661              	.LVL45:
 662              	.L45:
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 663              		.loc 1 1334 0
 664 006e 2368     		ldr	r3, [r4]
 665 0070 4022     		movs	r2, #64
 666 0072 1A62     		str	r2, [r3, #32]
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 667              		.loc 1 1336 0
 668 0074 0020     		movs	r0, #0
 669 0076 84F87000 		strb	r0, [r4, #112]
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 670              		.loc 1 1340 0
 671 007a 2268     		ldr	r2, [r4]
 672 007c 9368     		ldr	r3, [r2, #8]
 673 007e 43F08003 		orr	r3, r3, #128
 674 0082 9360     		str	r3, [r2, #8]
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 675              		.loc 1 1342 0
 676 0084 10BD     		pop	{r4, pc}
 677              	.LVL46:
 678              	.L46:
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 679              		.loc 1 1346 0
 680 0086 0220     		movs	r0, #2
 681              	.LVL47:
 682 0088 10BD     		pop	{r4, pc}
 683              	.LVL48:
 684              	.L47:
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 685              		.loc 1 1293 0
 686 008a 0120     		movs	r0, #1
 687              	.LVL49:
 688 008c 10BD     		pop	{r4, pc}
 689              	.LVL50:
 690              	.L48:
 691 008e 0120     		movs	r0, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 75


 692              	.LVL51:
 693 0090 10BD     		pop	{r4, pc}
 694              	.LVL52:
 695              	.L49:
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 696              		.loc 1 1296 0
 697 0092 0220     		movs	r0, #2
 698              	.LVL53:
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 699              		.loc 1 1348 0
 700 0094 10BD     		pop	{r4, pc}
 701              	.L52:
 702 0096 00BF     		.align	2
 703              	.L51:
 704 0098 00000000 		.word	UART_DMATransmitCplt
 705 009c 00000000 		.word	UART_DMATxHalfCplt
 706 00a0 00000000 		.word	UART_DMAError
 707              		.cfi_endproc
 708              	.LFE134:
 710              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 711              		.align	2
 712              		.global	HAL_UART_Receive_DMA
 713              		.thumb
 714              		.thumb_func
 716              	HAL_UART_Receive_DMA:
 717              	.LFB135:
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
 718              		.loc 1 1363 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              	.LVL54:
 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI3:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 728              		.loc 1 1365 0
 729 0002 846F     		ldr	r4, [r0, #120]
 730 0004 202C     		cmp	r4, #32
 731 0006 43D1     		bne	.L56
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 732              		.loc 1 1367 0
 733 0008 0029     		cmp	r1, #0
 734 000a 43D0     		beq	.L57
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 735              		.loc 1 1367 0 is_stmt 0 discriminator 1
 736 000c 002A     		cmp	r2, #0
 737 000e 43D0     		beq	.L58
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 738              		.loc 1 1372 0 is_stmt 1
 739 0010 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 740 0014 012B     		cmp	r3, #1
 741 0016 41D0     		beq	.L59
 742 0018 1346     		mov	r3, r2
 743 001a 0446     		mov	r4, r0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 76


1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 744              		.loc 1 1372 0 is_stmt 0 discriminator 2
 745 001c 0122     		movs	r2, #1
 746              	.LVL55:
 747 001e 80F87020 		strb	r2, [r0, #112]
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferSize = Size;
 748              		.loc 1 1374 0 is_stmt 1 discriminator 2
 749 0022 4165     		str	r1, [r0, #84]
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 750              		.loc 1 1375 0 discriminator 2
 751 0024 A0F85830 		strh	r3, [r0, #88]	@ movhi
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 752              		.loc 1 1377 0 discriminator 2
 753 0028 0022     		movs	r2, #0
 754 002a C267     		str	r2, [r0, #124]
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 755              		.loc 1 1378 0 discriminator 2
 756 002c 2222     		movs	r2, #34
 757 002e 8267     		str	r2, [r0, #120]
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 758              		.loc 1 1380 0 discriminator 2
 759 0030 C26E     		ldr	r2, [r0, #108]
 760 0032 D2B1     		cbz	r2, .L55
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 761              		.loc 1 1383 0
 762 0034 1A49     		ldr	r1, .L61
 763              	.LVL56:
 764 0036 9162     		str	r1, [r2, #40]
 765              	.LVL57:
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 766              		.loc 1 1386 0
 767 0038 C26E     		ldr	r2, [r0, #108]
 768 003a 1A49     		ldr	r1, .L61+4
 769 003c D162     		str	r1, [r2, #44]
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 770              		.loc 1 1389 0
 771 003e C26E     		ldr	r2, [r0, #108]
 772 0040 1949     		ldr	r1, .L61+8
 773 0042 1163     		str	r1, [r2, #48]
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 774              		.loc 1 1392 0
 775 0044 C26E     		ldr	r2, [r0, #108]
 776 0046 0021     		movs	r1, #0
 777 0048 5163     		str	r1, [r2, #52]
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 778              		.loc 1 1395 0
 779 004a 0168     		ldr	r1, [r0]
 780 004c 426D     		ldr	r2, [r0, #84]
 781 004e 2431     		adds	r1, r1, #36
 782 0050 C06E     		ldr	r0, [r0, #108]
 783              	.LVL58:
 784 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 785              	.LVL59:
 786 0056 40B1     		cbz	r0, .L55
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 787              		.loc 1 1398 0
 788 0058 1023     		movs	r3, #16
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 77


 789 005a E367     		str	r3, [r4, #124]
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 790              		.loc 1 1400 0
 791 005c 0023     		movs	r3, #0
 792 005e 84F87030 		strb	r3, [r4, #112]
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 793              		.loc 1 1403 0
 794 0062 2023     		movs	r3, #32
 795 0064 6367     		str	r3, [r4, #116]
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 796              		.loc 1 1405 0
 797 0066 0120     		movs	r0, #1
 798 0068 10BD     		pop	{r4, pc}
 799              	.LVL60:
 800              	.L55:
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 801              		.loc 1 1408 0
 802 006a 0020     		movs	r0, #0
 803 006c 84F87000 		strb	r0, [r4, #112]
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 804              		.loc 1 1411 0
 805 0070 2268     		ldr	r2, [r4]
 806 0072 1368     		ldr	r3, [r2]
 807 0074 43F48073 		orr	r3, r3, #256
 808 0078 1360     		str	r3, [r2]
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 809              		.loc 1 1414 0
 810 007a 2268     		ldr	r2, [r4]
 811 007c 9368     		ldr	r3, [r2, #8]
 812 007e 43F00103 		orr	r3, r3, #1
 813 0082 9360     		str	r3, [r2, #8]
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 814              		.loc 1 1418 0
 815 0084 2268     		ldr	r2, [r4]
 816 0086 9368     		ldr	r3, [r2, #8]
 817 0088 43F04003 		orr	r3, r3, #64
 818 008c 9360     		str	r3, [r2, #8]
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 819              		.loc 1 1420 0
 820 008e 10BD     		pop	{r4, pc}
 821              	.LVL61:
 822              	.L56:
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 823              		.loc 1 1424 0
 824 0090 0220     		movs	r0, #2
 825              	.LVL62:
 826 0092 10BD     		pop	{r4, pc}
 827              	.LVL63:
 828              	.L57:
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 829              		.loc 1 1369 0
 830 0094 0120     		movs	r0, #1
 831              	.LVL64:
 832 0096 10BD     		pop	{r4, pc}
 833              	.LVL65:
 834              	.L58:
 835 0098 0120     		movs	r0, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 78


 836              	.LVL66:
 837 009a 10BD     		pop	{r4, pc}
 838              	.LVL67:
 839              	.L59:
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 840              		.loc 1 1372 0
 841 009c 0220     		movs	r0, #2
 842              	.LVL68:
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 843              		.loc 1 1426 0
 844 009e 10BD     		pop	{r4, pc}
 845              	.L62:
 846              		.align	2
 847              	.L61:
 848 00a0 00000000 		.word	UART_DMAReceiveCplt
 849 00a4 00000000 		.word	UART_DMARxHalfCplt
 850 00a8 00000000 		.word	UART_DMAError
 851              		.cfi_endproc
 852              	.LFE135:
 854              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 855              		.align	2
 856              		.global	HAL_UART_DMAPause
 857              		.thumb
 858              		.thumb_func
 860              	HAL_UART_DMAPause:
 861              	.LFB136:
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 862              		.loc 1 1434 0
 863              		.cfi_startproc
 864              		@ args = 0, pretend = 0, frame = 0
 865              		@ frame_needed = 0, uses_anonymous_args = 0
 866              		@ link register save eliminated.
 867              	.LVL69:
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 868              		.loc 1 1435 0
 869 0000 416F     		ldr	r1, [r0, #116]
 870              	.LVL70:
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 871              		.loc 1 1436 0
 872 0002 826F     		ldr	r2, [r0, #120]
 873              	.LVL71:
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 874              		.loc 1 1438 0
 875 0004 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 876 0008 012B     		cmp	r3, #1
 877 000a 28D0     		beq	.L67
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 878              		.loc 1 1434 0 discriminator 2
 879 000c 10B4     		push	{r4}
 880              	.LCFI4:
 881              		.cfi_def_cfa_offset 4
 882              		.cfi_offset 4, -4
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 883              		.loc 1 1438 0 discriminator 2
 884 000e 0123     		movs	r3, #1
 885 0010 80F87030 		strb	r3, [r0, #112]
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 79


 886              		.loc 1 1440 0 discriminator 2
 887 0014 0368     		ldr	r3, [r0]
 888 0016 9C68     		ldr	r4, [r3, #8]
 889 0018 14F0800F 		tst	r4, #128
 890 001c 05D0     		beq	.L65
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 891              		.loc 1 1440 0 is_stmt 0 discriminator 1
 892 001e 2129     		cmp	r1, #33
 893 0020 03D1     		bne	.L65
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 894              		.loc 1 1444 0 is_stmt 1
 895 0022 9968     		ldr	r1, [r3, #8]
 896              	.LVL72:
 897 0024 21F08001 		bic	r1, r1, #128
 898 0028 9960     		str	r1, [r3, #8]
 899              	.L65:
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 900              		.loc 1 1446 0
 901 002a 0368     		ldr	r3, [r0]
 902 002c 9968     		ldr	r1, [r3, #8]
 903 002e 11F0400F 		tst	r1, #64
 904 0032 0FD0     		beq	.L66
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 905              		.loc 1 1446 0 is_stmt 0 discriminator 1
 906 0034 222A     		cmp	r2, #34
 907 0036 0DD1     		bne	.L66
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 908              		.loc 1 1450 0 is_stmt 1
 909 0038 1A68     		ldr	r2, [r3]
 910              	.LVL73:
 911 003a 22F48072 		bic	r2, r2, #256
 912 003e 1A60     		str	r2, [r3]
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 913              		.loc 1 1451 0
 914 0040 0268     		ldr	r2, [r0]
 915 0042 9368     		ldr	r3, [r2, #8]
 916 0044 23F00103 		bic	r3, r3, #1
 917 0048 9360     		str	r3, [r2, #8]
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 918              		.loc 1 1454 0
 919 004a 0268     		ldr	r2, [r0]
 920 004c 9368     		ldr	r3, [r2, #8]
 921 004e 23F04003 		bic	r3, r3, #64
 922 0052 9360     		str	r3, [r2, #8]
 923              	.L66:
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 924              		.loc 1 1457 0
 925 0054 0023     		movs	r3, #0
 926 0056 80F87030 		strb	r3, [r0, #112]
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 927              		.loc 1 1459 0
 928 005a 1846     		mov	r0, r3
 929              	.LVL74:
 930 005c 01E0     		b	.L64
 931              	.LVL75:
 932              	.L67:
 933              	.LCFI5:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 80


 934              		.cfi_def_cfa_offset 0
 935              		.cfi_restore 4
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 936              		.loc 1 1438 0
 937 005e 0220     		movs	r0, #2
 938              	.LVL76:
 939 0060 7047     		bx	lr
 940              	.LVL77:
 941              	.L64:
 942              	.LCFI6:
 943              		.cfi_def_cfa_offset 4
 944              		.cfi_offset 4, -4
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 945              		.loc 1 1460 0
 946 0062 5DF8044B 		ldr	r4, [sp], #4
 947              	.LCFI7:
 948              		.cfi_restore 4
 949              		.cfi_def_cfa_offset 0
 950 0066 7047     		bx	lr
 951              		.cfi_endproc
 952              	.LFE136:
 954              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 955              		.align	2
 956              		.global	HAL_UART_DMAResume
 957              		.thumb
 958              		.thumb_func
 960              	HAL_UART_DMAResume:
 961              	.LFB137:
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 962              		.loc 1 1468 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 0
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              		@ link register save eliminated.
 967              	.LVL78:
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 968              		.loc 1 1469 0
 969 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 970 0004 012B     		cmp	r3, #1
 971 0006 24D0     		beq	.L74
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 972              		.loc 1 1469 0 is_stmt 0 discriminator 2
 973 0008 0123     		movs	r3, #1
 974 000a 80F87030 		strb	r3, [r0, #112]
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 975              		.loc 1 1471 0 is_stmt 1 discriminator 2
 976 000e 436F     		ldr	r3, [r0, #116]
 977 0010 212B     		cmp	r3, #33
 978 0012 04D1     		bne	.L72
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 979              		.loc 1 1474 0
 980 0014 0268     		ldr	r2, [r0]
 981 0016 9368     		ldr	r3, [r2, #8]
 982 0018 43F08003 		orr	r3, r3, #128
 983 001c 9360     		str	r3, [r2, #8]
 984              	.L72:
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 81


 985              		.loc 1 1476 0
 986 001e 836F     		ldr	r3, [r0, #120]
 987 0020 222B     		cmp	r3, #34
 988 0022 11D1     		bne	.L73
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 989              		.loc 1 1479 0
 990 0024 0368     		ldr	r3, [r0]
 991 0026 0822     		movs	r2, #8
 992 0028 1A62     		str	r2, [r3, #32]
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 993              		.loc 1 1482 0
 994 002a 0268     		ldr	r2, [r0]
 995 002c 1368     		ldr	r3, [r2]
 996 002e 43F48073 		orr	r3, r3, #256
 997 0032 1360     		str	r3, [r2]
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 998              		.loc 1 1483 0
 999 0034 0268     		ldr	r2, [r0]
 1000 0036 9368     		ldr	r3, [r2, #8]
 1001 0038 43F00103 		orr	r3, r3, #1
 1002 003c 9360     		str	r3, [r2, #8]
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1003              		.loc 1 1486 0
 1004 003e 0268     		ldr	r2, [r0]
 1005 0040 9368     		ldr	r3, [r2, #8]
 1006 0042 43F04003 		orr	r3, r3, #64
 1007 0046 9360     		str	r3, [r2, #8]
 1008              	.L73:
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1009              		.loc 1 1489 0
 1010 0048 0023     		movs	r3, #0
 1011 004a 80F87030 		strb	r3, [r0, #112]
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1012              		.loc 1 1491 0
 1013 004e 1846     		mov	r0, r3
 1014              	.LVL79:
 1015 0050 7047     		bx	lr
 1016              	.LVL80:
 1017              	.L74:
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1018              		.loc 1 1469 0
 1019 0052 0220     		movs	r0, #2
 1020              	.LVL81:
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1021              		.loc 1 1492 0
 1022 0054 7047     		bx	lr
 1023              		.cfi_endproc
 1024              	.LFE137:
 1026 0056 00BF     		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 1027              		.align	2
 1028              		.global	HAL_UART_DMAStop
 1029              		.thumb
 1030              		.thumb_func
 1032              	HAL_UART_DMAStop:
 1033              	.LFB138:
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
 1034              		.loc 1 1500 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 82


 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 0
 1037              		@ frame_needed = 0, uses_anonymous_args = 0
 1038              	.LVL82:
 1039 0000 38B5     		push	{r3, r4, r5, lr}
 1040              	.LCFI8:
 1041              		.cfi_def_cfa_offset 16
 1042              		.cfi_offset 3, -16
 1043              		.cfi_offset 4, -12
 1044              		.cfi_offset 5, -8
 1045              		.cfi_offset 14, -4
 1046 0002 0446     		mov	r4, r0
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1047              		.loc 1 1508 0
 1048 0004 416F     		ldr	r1, [r0, #116]
 1049              	.LVL83:
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1050              		.loc 1 1509 0
 1051 0006 856F     		ldr	r5, [r0, #120]
 1052              	.LVL84:
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1053              		.loc 1 1512 0
 1054 0008 0368     		ldr	r3, [r0]
 1055 000a 9A68     		ldr	r2, [r3, #8]
 1056 000c 12F0800F 		tst	r2, #128
 1057 0010 16D0     		beq	.L76
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1058              		.loc 1 1512 0 is_stmt 0 discriminator 1
 1059 0012 2129     		cmp	r1, #33
 1060 0014 14D1     		bne	.L76
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1061              		.loc 1 1515 0 is_stmt 1
 1062 0016 9A68     		ldr	r2, [r3, #8]
 1063 0018 22F08002 		bic	r2, r2, #128
 1064 001c 9A60     		str	r2, [r3, #8]
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1065              		.loc 1 1518 0
 1066 001e 806E     		ldr	r0, [r0, #104]
 1067              	.LVL85:
 1068 0020 58B1     		cbz	r0, .L77
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1069              		.loc 1 1520 0
 1070 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 1071              	.LVL86:
 1072 0026 40B1     		cbz	r0, .L77
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1073              		.loc 1 1522 0
 1074 0028 A06E     		ldr	r0, [r4, #104]
 1075 002a FFF7FEFF 		bl	HAL_DMA_GetError
 1076              	.LVL87:
 1077 002e 2028     		cmp	r0, #32
 1078 0030 03D1     		bne	.L77
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1079              		.loc 1 1525 0
 1080 0032 1023     		movs	r3, #16
 1081 0034 E367     		str	r3, [r4, #124]
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 83


 1082              		.loc 1 1527 0
 1083 0036 0320     		movs	r0, #3
 1084 0038 38BD     		pop	{r3, r4, r5, pc}
 1085              	.LVL88:
 1086              	.L77:
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1087              		.loc 1 1532 0
 1088 003a 2046     		mov	r0, r4
 1089 003c FFF7FEFF 		bl	UART_EndTxTransfer
 1090              	.LVL89:
 1091              	.L76:
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1092              		.loc 1 1536 0
 1093 0040 2368     		ldr	r3, [r4]
 1094 0042 9A68     		ldr	r2, [r3, #8]
 1095 0044 12F0400F 		tst	r2, #64
 1096 0048 18D0     		beq	.L80
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1097              		.loc 1 1536 0 is_stmt 0 discriminator 1
 1098 004a 222D     		cmp	r5, #34
 1099 004c 18D1     		bne	.L81
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1100              		.loc 1 1539 0 is_stmt 1
 1101 004e 9A68     		ldr	r2, [r3, #8]
 1102 0050 22F04002 		bic	r2, r2, #64
 1103 0054 9A60     		str	r2, [r3, #8]
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1104              		.loc 1 1542 0
 1105 0056 E06E     		ldr	r0, [r4, #108]
 1106 0058 58B1     		cbz	r0, .L79
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1107              		.loc 1 1544 0
 1108 005a FFF7FEFF 		bl	HAL_DMA_Abort
 1109              	.LVL90:
 1110 005e 40B1     		cbz	r0, .L79
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1111              		.loc 1 1546 0
 1112 0060 E06E     		ldr	r0, [r4, #108]
 1113 0062 FFF7FEFF 		bl	HAL_DMA_GetError
 1114              	.LVL91:
 1115 0066 2028     		cmp	r0, #32
 1116 0068 03D1     		bne	.L79
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1117              		.loc 1 1549 0
 1118 006a 1023     		movs	r3, #16
 1119 006c E367     		str	r3, [r4, #124]
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1120              		.loc 1 1551 0
 1121 006e 0320     		movs	r0, #3
 1122 0070 38BD     		pop	{r3, r4, r5, pc}
 1123              	.LVL92:
 1124              	.L79:
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1125              		.loc 1 1556 0
 1126 0072 2046     		mov	r0, r4
 1127 0074 FFF7FEFF 		bl	UART_EndRxTransfer
 1128              	.LVL93:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 84


1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 1129              		.loc 1 1559 0
 1130 0078 0020     		movs	r0, #0
 1131 007a 38BD     		pop	{r3, r4, r5, pc}
 1132              	.LVL94:
 1133              	.L80:
 1134 007c 0020     		movs	r0, #0
 1135 007e 38BD     		pop	{r3, r4, r5, pc}
 1136              	.LVL95:
 1137              	.L81:
 1138 0080 0020     		movs	r0, #0
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1139              		.loc 1 1560 0
 1140 0082 38BD     		pop	{r3, r4, r5, pc}
 1141              		.cfi_endproc
 1142              	.LFE138:
 1144              		.section	.text.HAL_UART_Abort,"ax",%progbits
 1145              		.align	2
 1146              		.global	HAL_UART_Abort
 1147              		.thumb
 1148              		.thumb_func
 1150              	HAL_UART_Abort:
 1151              	.LFB139:
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1152              		.loc 1 1575 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              	.LVL96:
 1157 0000 10B5     		push	{r4, lr}
 1158              	.LCFI9:
 1159              		.cfi_def_cfa_offset 8
 1160              		.cfi_offset 4, -8
 1161              		.cfi_offset 14, -4
 1162 0002 0446     		mov	r4, r0
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1163              		.loc 1 1577 0
 1164 0004 0268     		ldr	r2, [r0]
 1165 0006 1368     		ldr	r3, [r2]
 1166 0008 23F4F073 		bic	r3, r3, #480
 1167 000c 1360     		str	r3, [r2]
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1168              		.loc 1 1578 0
 1169 000e 0268     		ldr	r2, [r0]
 1170 0010 9368     		ldr	r3, [r2, #8]
 1171 0012 23F00103 		bic	r3, r3, #1
 1172 0016 9360     		str	r3, [r2, #8]
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1173              		.loc 1 1581 0
 1174 0018 0368     		ldr	r3, [r0]
 1175 001a 9A68     		ldr	r2, [r3, #8]
 1176 001c 12F0800F 		tst	r2, #128
 1177 0020 14D0     		beq	.L84
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1178              		.loc 1 1583 0
 1179 0022 9A68     		ldr	r2, [r3, #8]
 1180 0024 22F08002 		bic	r2, r2, #128
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 85


 1181 0028 9A60     		str	r2, [r3, #8]
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1182              		.loc 1 1586 0
 1183 002a 836E     		ldr	r3, [r0, #104]
 1184 002c 73B1     		cbz	r3, .L84
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1185              		.loc 1 1590 0
 1186 002e 0022     		movs	r2, #0
 1187 0030 5A63     		str	r2, [r3, #52]
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1188              		.loc 1 1592 0
 1189 0032 806E     		ldr	r0, [r0, #104]
 1190              	.LVL97:
 1191 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1192              	.LVL98:
 1193 0038 40B1     		cbz	r0, .L84
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1194              		.loc 1 1594 0
 1195 003a A06E     		ldr	r0, [r4, #104]
 1196 003c FFF7FEFF 		bl	HAL_DMA_GetError
 1197              	.LVL99:
 1198 0040 2028     		cmp	r0, #32
 1199 0042 03D1     		bne	.L84
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1200              		.loc 1 1597 0
 1201 0044 1023     		movs	r3, #16
 1202 0046 E367     		str	r3, [r4, #124]
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1203              		.loc 1 1599 0
 1204 0048 0320     		movs	r0, #3
 1205 004a 10BD     		pop	{r4, pc}
 1206              	.LVL100:
 1207              	.L84:
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1208              		.loc 1 1606 0
 1209 004c 2368     		ldr	r3, [r4]
 1210 004e 9A68     		ldr	r2, [r3, #8]
 1211 0050 12F0400F 		tst	r2, #64
 1212 0054 14D0     		beq	.L86
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1213              		.loc 1 1608 0
 1214 0056 9A68     		ldr	r2, [r3, #8]
 1215 0058 22F04002 		bic	r2, r2, #64
 1216 005c 9A60     		str	r2, [r3, #8]
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1217              		.loc 1 1611 0
 1218 005e E36E     		ldr	r3, [r4, #108]
 1219 0060 73B1     		cbz	r3, .L86
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1220              		.loc 1 1615 0
 1221 0062 0022     		movs	r2, #0
 1222 0064 5A63     		str	r2, [r3, #52]
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1223              		.loc 1 1617 0
 1224 0066 E06E     		ldr	r0, [r4, #108]
 1225 0068 FFF7FEFF 		bl	HAL_DMA_Abort
 1226              	.LVL101:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 86


 1227 006c 40B1     		cbz	r0, .L86
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1228              		.loc 1 1619 0
 1229 006e E06E     		ldr	r0, [r4, #108]
 1230 0070 FFF7FEFF 		bl	HAL_DMA_GetError
 1231              	.LVL102:
 1232 0074 2028     		cmp	r0, #32
 1233 0076 03D1     		bne	.L86
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1234              		.loc 1 1622 0
 1235 0078 1023     		movs	r3, #16
 1236 007a E367     		str	r3, [r4, #124]
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1237              		.loc 1 1624 0
 1238 007c 0320     		movs	r0, #3
 1239 007e 10BD     		pop	{r4, pc}
 1240              	.LVL103:
 1241              	.L86:
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 1242              		.loc 1 1631 0
 1243 0080 0020     		movs	r0, #0
 1244 0082 A4F85200 		strh	r0, [r4, #82]	@ movhi
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1245              		.loc 1 1632 0
 1246 0086 A4F85A00 		strh	r0, [r4, #90]	@ movhi
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1247              		.loc 1 1635 0
 1248 008a 2368     		ldr	r3, [r4]
 1249 008c 0F22     		movs	r2, #15
 1250 008e 1A62     		str	r2, [r3, #32]
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1251              		.loc 1 1639 0
 1252 0090 2268     		ldr	r2, [r4]
 1253 0092 9369     		ldr	r3, [r2, #24]
 1254 0094 43F00803 		orr	r3, r3, #8
 1255 0098 9361     		str	r3, [r2, #24]
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 1256              		.loc 1 1642 0
 1257 009a 2023     		movs	r3, #32
 1258 009c 6367     		str	r3, [r4, #116]
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1259              		.loc 1 1643 0
 1260 009e A367     		str	r3, [r4, #120]
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1261              		.loc 1 1645 0
 1262 00a0 E067     		str	r0, [r4, #124]
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1263              		.loc 1 1648 0
 1264 00a2 10BD     		pop	{r4, pc}
 1265              		.cfi_endproc
 1266              	.LFE139:
 1268              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 1269              		.align	2
 1270              		.global	HAL_UART_AbortTransmit
 1271              		.thumb
 1272              		.thumb_func
 1274              	HAL_UART_AbortTransmit:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 87


 1275              	.LFB140:
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
 1276              		.loc 1 1663 0
 1277              		.cfi_startproc
 1278              		@ args = 0, pretend = 0, frame = 0
 1279              		@ frame_needed = 0, uses_anonymous_args = 0
 1280              	.LVL104:
 1281 0000 10B5     		push	{r4, lr}
 1282              	.LCFI10:
 1283              		.cfi_def_cfa_offset 8
 1284              		.cfi_offset 4, -8
 1285              		.cfi_offset 14, -4
 1286 0002 0446     		mov	r4, r0
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1287              		.loc 1 1665 0
 1288 0004 0268     		ldr	r2, [r0]
 1289 0006 1368     		ldr	r3, [r2]
 1290 0008 23F0C003 		bic	r3, r3, #192
 1291 000c 1360     		str	r3, [r2]
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1292              		.loc 1 1668 0
 1293 000e 0368     		ldr	r3, [r0]
 1294 0010 9A68     		ldr	r2, [r3, #8]
 1295 0012 12F0800F 		tst	r2, #128
 1296 0016 14D0     		beq	.L89
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1297              		.loc 1 1670 0
 1298 0018 9A68     		ldr	r2, [r3, #8]
 1299 001a 22F08002 		bic	r2, r2, #128
 1300 001e 9A60     		str	r2, [r3, #8]
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1301              		.loc 1 1673 0
 1302 0020 836E     		ldr	r3, [r0, #104]
 1303 0022 73B1     		cbz	r3, .L89
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1304              		.loc 1 1677 0
 1305 0024 0022     		movs	r2, #0
 1306 0026 5A63     		str	r2, [r3, #52]
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1307              		.loc 1 1679 0
 1308 0028 806E     		ldr	r0, [r0, #104]
 1309              	.LVL105:
 1310 002a FFF7FEFF 		bl	HAL_DMA_Abort
 1311              	.LVL106:
 1312 002e 40B1     		cbz	r0, .L89
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1313              		.loc 1 1681 0
 1314 0030 A06E     		ldr	r0, [r4, #104]
 1315 0032 FFF7FEFF 		bl	HAL_DMA_GetError
 1316              	.LVL107:
 1317 0036 2028     		cmp	r0, #32
 1318 0038 03D1     		bne	.L89
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1319              		.loc 1 1684 0
 1320 003a 1023     		movs	r3, #16
 1321 003c E367     		str	r3, [r4, #124]
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 88


 1322              		.loc 1 1686 0
 1323 003e 0320     		movs	r0, #3
 1324 0040 10BD     		pop	{r4, pc}
 1325              	.LVL108:
 1326              	.L89:
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1327              		.loc 1 1693 0
 1328 0042 0020     		movs	r0, #0
 1329 0044 A4F85200 		strh	r0, [r4, #82]	@ movhi
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1330              		.loc 1 1697 0
 1331 0048 2023     		movs	r3, #32
 1332 004a 6367     		str	r3, [r4, #116]
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1333              		.loc 1 1700 0
 1334 004c 10BD     		pop	{r4, pc}
 1335              		.cfi_endproc
 1336              	.LFE140:
 1338 004e 00BF     		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 1339              		.align	2
 1340              		.global	HAL_UART_AbortReceive
 1341              		.thumb
 1342              		.thumb_func
 1344              	HAL_UART_AbortReceive:
 1345              	.LFB141:
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 1346              		.loc 1 1715 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 0
 1349              		@ frame_needed = 0, uses_anonymous_args = 0
 1350              	.LVL109:
 1351 0000 10B5     		push	{r4, lr}
 1352              	.LCFI11:
 1353              		.cfi_def_cfa_offset 8
 1354              		.cfi_offset 4, -8
 1355              		.cfi_offset 14, -4
 1356 0002 0446     		mov	r4, r0
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1357              		.loc 1 1717 0
 1358 0004 0268     		ldr	r2, [r0]
 1359 0006 1368     		ldr	r3, [r2]
 1360 0008 23F49073 		bic	r3, r3, #288
 1361 000c 1360     		str	r3, [r2]
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1362              		.loc 1 1718 0
 1363 000e 0268     		ldr	r2, [r0]
 1364 0010 9368     		ldr	r3, [r2, #8]
 1365 0012 23F00103 		bic	r3, r3, #1
 1366 0016 9360     		str	r3, [r2, #8]
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1367              		.loc 1 1721 0
 1368 0018 0368     		ldr	r3, [r0]
 1369 001a 9A68     		ldr	r2, [r3, #8]
 1370 001c 12F0400F 		tst	r2, #64
 1371 0020 14D0     		beq	.L93
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1372              		.loc 1 1723 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 89


 1373 0022 9A68     		ldr	r2, [r3, #8]
 1374 0024 22F04002 		bic	r2, r2, #64
 1375 0028 9A60     		str	r2, [r3, #8]
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1376              		.loc 1 1726 0
 1377 002a C36E     		ldr	r3, [r0, #108]
 1378 002c 73B1     		cbz	r3, .L93
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1379              		.loc 1 1730 0
 1380 002e 0022     		movs	r2, #0
 1381 0030 5A63     		str	r2, [r3, #52]
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1382              		.loc 1 1732 0
 1383 0032 C06E     		ldr	r0, [r0, #108]
 1384              	.LVL110:
 1385 0034 FFF7FEFF 		bl	HAL_DMA_Abort
 1386              	.LVL111:
 1387 0038 40B1     		cbz	r0, .L93
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 1388              		.loc 1 1734 0
 1389 003a E06E     		ldr	r0, [r4, #108]
 1390 003c FFF7FEFF 		bl	HAL_DMA_GetError
 1391              	.LVL112:
 1392 0040 2028     		cmp	r0, #32
 1393 0042 03D1     		bne	.L93
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1394              		.loc 1 1737 0
 1395 0044 1023     		movs	r3, #16
 1396 0046 E367     		str	r3, [r4, #124]
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 1397              		.loc 1 1739 0
 1398 0048 0320     		movs	r0, #3
 1399 004a 10BD     		pop	{r4, pc}
 1400              	.LVL113:
 1401              	.L93:
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1402              		.loc 1 1746 0
 1403 004c 0020     		movs	r0, #0
 1404 004e A4F85A00 		strh	r0, [r4, #90]	@ movhi
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1405              		.loc 1 1749 0
 1406 0052 2368     		ldr	r3, [r4]
 1407 0054 0F22     		movs	r2, #15
 1408 0056 1A62     		str	r2, [r3, #32]
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1409              		.loc 1 1752 0
 1410 0058 2268     		ldr	r2, [r4]
 1411 005a 9369     		ldr	r3, [r2, #24]
 1412 005c 43F00803 		orr	r3, r3, #8
 1413 0060 9361     		str	r3, [r2, #24]
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1414              		.loc 1 1755 0
 1415 0062 2023     		movs	r3, #32
 1416 0064 A367     		str	r3, [r4, #120]
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1417              		.loc 1 1758 0
 1418 0066 10BD     		pop	{r4, pc}
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 90


 1419              		.cfi_endproc
 1420              	.LFE141:
 1422              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 1423              		.align	2
 1424              		.weak	HAL_UART_TxCpltCallback
 1425              		.thumb
 1426              		.thumb_func
 1428              	HAL_UART_TxCpltCallback:
 1429              	.LFB146:
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1430              		.loc 1 2286 0
 1431              		.cfi_startproc
 1432              		@ args = 0, pretend = 0, frame = 0
 1433              		@ frame_needed = 0, uses_anonymous_args = 0
 1434              		@ link register save eliminated.
 1435              	.LVL114:
 1436 0000 7047     		bx	lr
 1437              		.cfi_endproc
 1438              	.LFE146:
 1440 0002 00BF     		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 1441              		.align	2
 1442              		.thumb
 1443              		.thumb_func
 1445              	UART_DMATransmitCplt:
 1446              	.LFB171:
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1447              		.loc 1 3066 0
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 0
 1450              		@ frame_needed = 0, uses_anonymous_args = 0
 1451              	.LVL115:
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1452              		.loc 1 3066 0
 1453 0000 08B5     		push	{r3, lr}
 1454              	.LCFI12:
 1455              		.cfi_def_cfa_offset 8
 1456              		.cfi_offset 3, -8
 1457              		.cfi_offset 14, -4
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1458              		.loc 1 3067 0
 1459 0002 436A     		ldr	r3, [r0, #36]
 1460              	.LVL116:
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1461              		.loc 1 3070 0
 1462 0004 8269     		ldr	r2, [r0, #24]
 1463 0006 202A     		cmp	r2, #32
 1464 0008 0DD0     		beq	.L98
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1465              		.loc 1 3072 0
 1466 000a 0022     		movs	r2, #0
 1467 000c A3F85220 		strh	r2, [r3, #82]	@ movhi
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1468              		.loc 1 3076 0
 1469 0010 1968     		ldr	r1, [r3]
 1470 0012 8A68     		ldr	r2, [r1, #8]
 1471 0014 22F08002 		bic	r2, r2, #128
 1472 0018 8A60     		str	r2, [r1, #8]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 91


3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1473              		.loc 1 3079 0
 1474 001a 1A68     		ldr	r2, [r3]
 1475 001c 1368     		ldr	r3, [r2]
 1476              	.LVL117:
 1477 001e 43F04003 		orr	r3, r3, #64
 1478 0022 1360     		str	r3, [r2]
 1479 0024 08BD     		pop	{r3, pc}
 1480              	.LVL118:
 1481              	.L98:
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1482              		.loc 1 3089 0
 1483 0026 1846     		mov	r0, r3
 1484              	.LVL119:
 1485 0028 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1486              	.LVL120:
 1487 002c 08BD     		pop	{r3, pc}
 1488              		.cfi_endproc
 1489              	.LFE171:
 1491 002e 00BF     		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 1492              		.align	2
 1493              		.thumb
 1494              		.thumb_func
 1496              	UART_EndTransmit_IT:
 1497              	.LFB183:
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1498              		.loc 1 3455 0
 1499              		.cfi_startproc
 1500              		@ args = 0, pretend = 0, frame = 0
 1501              		@ frame_needed = 0, uses_anonymous_args = 0
 1502              	.LVL121:
 1503 0000 08B5     		push	{r3, lr}
 1504              	.LCFI13:
 1505              		.cfi_def_cfa_offset 8
 1506              		.cfi_offset 3, -8
 1507              		.cfi_offset 14, -4
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 1508              		.loc 1 3457 0
 1509 0002 0168     		ldr	r1, [r0]
 1510 0004 0A68     		ldr	r2, [r1]
 1511 0006 22F04002 		bic	r2, r2, #64
 1512 000a 0A60     		str	r2, [r1]
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 92


3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 1513              		.loc 1 3460 0
 1514 000c 2022     		movs	r2, #32
 1515 000e 4267     		str	r2, [r0, #116]
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
 1516              		.loc 1 3463 0
 1517 0010 0022     		movs	r2, #0
 1518 0012 4266     		str	r2, [r0, #100]
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 1519              		.loc 1 3470 0
 1520 0014 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 1521              	.LVL122:
 1522 0018 08BD     		pop	{r3, pc}
 1523              		.cfi_endproc
 1524              	.LFE183:
 1526 001a 00BF     		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 1527              		.align	2
 1528              		.weak	HAL_UART_TxHalfCpltCallback
 1529              		.thumb
 1530              		.thumb_func
 1532              	HAL_UART_TxHalfCpltCallback:
 1533              	.LFB147:
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1534              		.loc 1 2301 0
 1535              		.cfi_startproc
 1536              		@ args = 0, pretend = 0, frame = 0
 1537              		@ frame_needed = 0, uses_anonymous_args = 0
 1538              		@ link register save eliminated.
 1539              	.LVL123:
 1540 0000 7047     		bx	lr
 1541              		.cfi_endproc
 1542              	.LFE147:
 1544 0002 00BF     		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 1545              		.align	2
 1546              		.thumb
 1547              		.thumb_func
 1549              	UART_DMATxHalfCplt:
 1550              	.LFB172:
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1551              		.loc 1 3100 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 0
 1554              		@ frame_needed = 0, uses_anonymous_args = 0
 1555              	.LVL124:
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1556              		.loc 1 3100 0
 1557 0000 08B5     		push	{r3, lr}
 1558              	.LCFI14:
 1559              		.cfi_def_cfa_offset 8
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 93


 1560              		.cfi_offset 3, -8
 1561              		.cfi_offset 14, -4
 1562              	.LVL125:
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1563              		.loc 1 3108 0
 1564 0002 406A     		ldr	r0, [r0, #36]
 1565              	.LVL126:
 1566 0004 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
 1567              	.LVL127:
 1568 0008 08BD     		pop	{r3, pc}
 1569              		.cfi_endproc
 1570              	.LFE172:
 1572 000a 00BF     		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 1573              		.align	2
 1574              		.weak	HAL_UART_RxCpltCallback
 1575              		.thumb
 1576              		.thumb_func
 1578              	HAL_UART_RxCpltCallback:
 1579              	.LFB148:
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1580              		.loc 1 2316 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 0, uses_anonymous_args = 0
 1584              		@ link register save eliminated.
 1585              	.LVL128:
 1586 0000 7047     		bx	lr
 1587              		.cfi_endproc
 1588              	.LFE148:
 1590 0002 00BF     		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 1591              		.align	2
 1592              		.thumb
 1593              		.thumb_func
 1595              	UART_RxISR_8BIT:
 1596              	.LFB184:
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1597              		.loc 1 3480 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 0
 1600              		@ frame_needed = 0, uses_anonymous_args = 0
 1601              	.LVL129:
 1602              		.loc 1 3480 0
 1603 0000 08B5     		push	{r3, lr}
 1604              	.LCFI15:
 1605              		.cfi_def_cfa_offset 8
 1606              		.cfi_offset 3, -8
 1607              		.cfi_offset 14, -4
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 94


 1608              		.loc 1 3481 0
 1609 0002 B0F85C20 		ldrh	r2, [r0, #92]
 1610              	.LVL130:
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1611              		.loc 1 3485 0
 1612 0006 836F     		ldr	r3, [r0, #120]
 1613 0008 222B     		cmp	r3, #34
 1614 000a 24D1     		bne	.L108
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1615              		.loc 1 3487 0
 1616 000c 0368     		ldr	r3, [r0]
 1617 000e 9B8C     		ldrh	r3, [r3, #36]
 1618              	.LVL131:
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 1619              		.loc 1 3488 0
 1620 0010 416D     		ldr	r1, [r0, #84]
 1621 0012 D2B2     		uxtb	r2, r2
 1622              	.LVL132:
 1623 0014 1A40     		ands	r2, r2, r3
 1624 0016 0A70     		strb	r2, [r1]
 1625              	.LVL133:
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr++;
 1626              		.loc 1 3489 0
 1627 0018 436D     		ldr	r3, [r0, #84]
 1628              	.LVL134:
 1629 001a 0133     		adds	r3, r3, #1
 1630 001c 4365     		str	r3, [r0, #84]
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
 1631              		.loc 1 3490 0
 1632 001e B0F85A30 		ldrh	r3, [r0, #90]
 1633 0022 9BB2     		uxth	r3, r3
 1634 0024 013B     		subs	r3, r3, #1
 1635 0026 9BB2     		uxth	r3, r3
 1636 0028 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 1637              		.loc 1 3492 0
 1638 002c B0F85A30 		ldrh	r3, [r0, #90]
 1639 0030 9BB2     		uxth	r3, r3
 1640 0032 ABB9     		cbnz	r3, .L107
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1641              		.loc 1 3495 0
 1642 0034 0268     		ldr	r2, [r0]
 1643 0036 1368     		ldr	r3, [r2]
 1644 0038 23F49073 		bic	r3, r3, #288
 1645 003c 1360     		str	r3, [r2]
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1646              		.loc 1 3498 0
 1647 003e 0268     		ldr	r2, [r0]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 95


 1648 0040 9368     		ldr	r3, [r2, #8]
 1649 0042 23F00103 		bic	r3, r3, #1
 1650 0046 9360     		str	r3, [r2, #8]
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1651              		.loc 1 3501 0
 1652 0048 2023     		movs	r3, #32
 1653 004a 8367     		str	r3, [r0, #120]
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = NULL;
 1654              		.loc 1 3504 0
 1655 004c 0023     		movs	r3, #0
 1656 004e 0366     		str	r3, [r0, #96]
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1657              		.loc 1 3511 0
 1658 0050 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1659              	.LVL135:
 1660 0054 08BD     		pop	{r3, pc}
 1661              	.LVL136:
 1662              	.L108:
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1663              		.loc 1 3518 0
 1664 0056 0268     		ldr	r2, [r0]
 1665              	.LVL137:
 1666 0058 9369     		ldr	r3, [r2, #24]
 1667 005a 43F00803 		orr	r3, r3, #8
 1668 005e 9361     		str	r3, [r2, #24]
 1669              	.LVL138:
 1670              	.L107:
 1671 0060 08BD     		pop	{r3, pc}
 1672              		.cfi_endproc
 1673              	.LFE184:
 1675 0062 00BF     		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 1676              		.align	2
 1677              		.thumb
 1678              		.thumb_func
 1680              	UART_RxISR_16BIT:
 1681              	.LFB185:
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 96


3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @param huart UART handle.
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   * @retval None
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   */
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** {
 1682              		.loc 1 3530 0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 0
 1685              		@ frame_needed = 0, uses_anonymous_args = 0
 1686              	.LVL139:
 1687 0000 08B5     		push	{r3, lr}
 1688              	.LCFI16:
 1689              		.cfi_def_cfa_offset 8
 1690              		.cfi_offset 3, -8
 1691              		.cfi_offset 14, -4
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t *tmp;
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 1692              		.loc 1 3532 0
 1693 0002 B0F85C20 		ldrh	r2, [r0, #92]
 1694              	.LVL140:
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint16_t  uhdata;
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 1695              		.loc 1 3536 0
 1696 0006 836F     		ldr	r3, [r0, #120]
 1697 0008 222B     		cmp	r3, #34
 1698 000a 23D1     		bne	.L112
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 1699              		.loc 1 3538 0
 1700 000c 0368     		ldr	r3, [r0]
 1701 000e 9B8C     		ldrh	r3, [r3, #36]
 1702              	.LVL141:
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
 1703              		.loc 1 3539 0
 1704 0010 416D     		ldr	r1, [r0, #84]
 1705              	.LVL142:
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 1706              		.loc 1 3540 0
 1707 0012 1A40     		ands	r2, r2, r3
 1708              	.LVL143:
 1709 0014 0A80     		strh	r2, [r1]	@ movhi
 1710              	.LVL144:
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 1711              		.loc 1 3541 0
 1712 0016 436D     		ldr	r3, [r0, #84]
 1713              	.LVL145:
 1714 0018 0233     		adds	r3, r3, #2
 1715 001a 4365     		str	r3, [r0, #84]
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount--;
 1716              		.loc 1 3542 0
 1717 001c B0F85A30 		ldrh	r3, [r0, #90]
 1718 0020 9BB2     		uxth	r3, r3
 1719 0022 013B     		subs	r3, r3, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 97


 1720 0024 9BB2     		uxth	r3, r3
 1721 0026 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 1722              		.loc 1 3544 0
 1723 002a B0F85A30 		ldrh	r3, [r0, #90]
 1724 002e 9BB2     		uxth	r3, r3
 1725 0030 ABB9     		cbnz	r3, .L111
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 1726              		.loc 1 3547 0
 1727 0032 0268     		ldr	r2, [r0]
 1728 0034 1368     		ldr	r3, [r2]
 1729 0036 23F49073 		bic	r3, r3, #288
 1730 003a 1360     		str	r3, [r2]
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1731              		.loc 1 3550 0
 1732 003c 0268     		ldr	r2, [r0]
 1733 003e 9368     		ldr	r3, [r2, #8]
 1734 0040 23F00103 		bic	r3, r3, #1
 1735 0044 9360     		str	r3, [r2, #8]
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 1736              		.loc 1 3553 0
 1737 0046 2023     		movs	r3, #32
 1738 0048 8367     		str	r3, [r0, #120]
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /* Clear RxISR function pointer */
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxISR = NULL;
 1739              		.loc 1 3556 0
 1740 004a 0023     		movs	r3, #0
 1741 004c 0366     		str	r3, [r0, #96]
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #else
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 1742              		.loc 1 3563 0
 1743 004e FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1744              	.LVL146:
 1745 0052 08BD     		pop	{r3, pc}
 1746              	.LVL147:
 1747              	.L112:
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   else
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 1748              		.loc 1 3570 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 98


 1749 0054 0268     		ldr	r2, [r0]
 1750              	.LVL148:
 1751 0056 9369     		ldr	r3, [r2, #24]
 1752 0058 43F00803 		orr	r3, r3, #8
 1753 005c 9361     		str	r3, [r2, #24]
 1754              	.LVL149:
 1755              	.L111:
 1756 005e 08BD     		pop	{r3, pc}
 1757              		.cfi_endproc
 1758              	.LFE185:
 1760              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 1761              		.align	2
 1762              		.thumb
 1763              		.thumb_func
 1765              	UART_DMAReceiveCplt:
 1766              	.LFB173:
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1767              		.loc 1 3118 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 0
 1770              		@ frame_needed = 0, uses_anonymous_args = 0
 1771              	.LVL150:
 1772 0000 08B5     		push	{r3, lr}
 1773              	.LCFI17:
 1774              		.cfi_def_cfa_offset 8
 1775              		.cfi_offset 3, -8
 1776              		.cfi_offset 14, -4
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1777              		.loc 1 3119 0
 1778 0002 436A     		ldr	r3, [r0, #36]
 1779              	.LVL151:
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1780              		.loc 1 3122 0
 1781 0004 8269     		ldr	r2, [r0, #24]
 1782 0006 202A     		cmp	r2, #32
 1783 0008 13D0     		beq	.L116
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1784              		.loc 1 3124 0
 1785 000a 0022     		movs	r2, #0
 1786 000c A3F85A20 		strh	r2, [r3, #90]	@ movhi
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1787              		.loc 1 3127 0
 1788 0010 1968     		ldr	r1, [r3]
 1789 0012 0A68     		ldr	r2, [r1]
 1790 0014 22F48072 		bic	r2, r2, #256
 1791 0018 0A60     		str	r2, [r1]
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1792              		.loc 1 3128 0
 1793 001a 1968     		ldr	r1, [r3]
 1794 001c 8A68     		ldr	r2, [r1, #8]
 1795 001e 22F00102 		bic	r2, r2, #1
 1796 0022 8A60     		str	r2, [r1, #8]
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1797              		.loc 1 3132 0
 1798 0024 1968     		ldr	r1, [r3]
 1799 0026 8A68     		ldr	r2, [r1, #8]
 1800 0028 22F04002 		bic	r2, r2, #64
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 99


 1801 002c 8A60     		str	r2, [r1, #8]
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1802              		.loc 1 3135 0
 1803 002e 2022     		movs	r2, #32
 1804 0030 9A67     		str	r2, [r3, #120]
 1805              	.L116:
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1806              		.loc 1 3143 0
 1807 0032 1846     		mov	r0, r3
 1808              	.LVL152:
 1809 0034 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 1810              	.LVL153:
 1811 0038 08BD     		pop	{r3, pc}
 1812              		.cfi_endproc
 1813              	.LFE173:
 1815 003a 00BF     		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 1816              		.align	2
 1817              		.weak	HAL_UART_RxHalfCpltCallback
 1818              		.thumb
 1819              		.thumb_func
 1821              	HAL_UART_RxHalfCpltCallback:
 1822              	.LFB149:
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1823              		.loc 1 2331 0
 1824              		.cfi_startproc
 1825              		@ args = 0, pretend = 0, frame = 0
 1826              		@ frame_needed = 0, uses_anonymous_args = 0
 1827              		@ link register save eliminated.
 1828              	.LVL154:
 1829 0000 7047     		bx	lr
 1830              		.cfi_endproc
 1831              	.LFE149:
 1833 0002 00BF     		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 1834              		.align	2
 1835              		.thumb
 1836              		.thumb_func
 1838              	UART_DMARxHalfCplt:
 1839              	.LFB174:
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1840              		.loc 1 3153 0
 1841              		.cfi_startproc
 1842              		@ args = 0, pretend = 0, frame = 0
 1843              		@ frame_needed = 0, uses_anonymous_args = 0
 1844              	.LVL155:
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1845              		.loc 1 3153 0
 1846 0000 08B5     		push	{r3, lr}
 1847              	.LCFI18:
 1848              		.cfi_def_cfa_offset 8
 1849              		.cfi_offset 3, -8
 1850              		.cfi_offset 14, -4
 1851              	.LVL156:
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1852              		.loc 1 3161 0
 1853 0002 406A     		ldr	r0, [r0, #36]
 1854              	.LVL157:
 1855 0004 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 100


 1856              	.LVL158:
 1857 0008 08BD     		pop	{r3, pc}
 1858              		.cfi_endproc
 1859              	.LFE174:
 1861 000a 00BF     		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 1862              		.align	2
 1863              		.weak	HAL_UART_ErrorCallback
 1864              		.thumb
 1865              		.thumb_func
 1867              	HAL_UART_ErrorCallback:
 1868              	.LFB150:
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 1869              		.loc 1 2346 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 0
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873              		@ link register save eliminated.
 1874              	.LVL159:
 1875 0000 7047     		bx	lr
 1876              		.cfi_endproc
 1877              	.LFE150:
 1879 0002 00BF     		.section	.text.UART_DMAError,"ax",%progbits
 1880              		.align	2
 1881              		.thumb
 1882              		.thumb_func
 1884              	UART_DMAError:
 1885              	.LFB175:
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1886              		.loc 1 3171 0
 1887              		.cfi_startproc
 1888              		@ args = 0, pretend = 0, frame = 0
 1889              		@ frame_needed = 0, uses_anonymous_args = 0
 1890              	.LVL160:
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 1891              		.loc 1 3171 0
 1892 0000 38B5     		push	{r3, r4, r5, lr}
 1893              	.LCFI19:
 1894              		.cfi_def_cfa_offset 16
 1895              		.cfi_offset 3, -16
 1896              		.cfi_offset 4, -12
 1897              		.cfi_offset 5, -8
 1898              		.cfi_offset 14, -4
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1899              		.loc 1 3172 0
 1900 0002 446A     		ldr	r4, [r0, #36]
 1901              	.LVL161:
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 1902              		.loc 1 3174 0
 1903 0004 626F     		ldr	r2, [r4, #116]
 1904              	.LVL162:
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1905              		.loc 1 3175 0
 1906 0006 A56F     		ldr	r5, [r4, #120]
 1907              	.LVL163:
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1908              		.loc 1 3178 0
 1909 0008 2368     		ldr	r3, [r4]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 101


 1910 000a 9B68     		ldr	r3, [r3, #8]
 1911 000c 13F0800F 		tst	r3, #128
 1912 0010 07D0     		beq	.L123
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
 1913              		.loc 1 3178 0 is_stmt 0 discriminator 1
 1914 0012 212A     		cmp	r2, #33
 1915 0014 05D1     		bne	.L123
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 1916              		.loc 1 3181 0 is_stmt 1
 1917 0016 0023     		movs	r3, #0
 1918 0018 A4F85230 		strh	r3, [r4, #82]	@ movhi
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1919              		.loc 1 3182 0
 1920 001c 2046     		mov	r0, r4
 1921              	.LVL164:
 1922 001e FFF7FEFF 		bl	UART_EndTxTransfer
 1923              	.LVL165:
 1924              	.L123:
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1925              		.loc 1 3186 0
 1926 0022 2368     		ldr	r3, [r4]
 1927 0024 9B68     		ldr	r3, [r3, #8]
 1928 0026 13F0400F 		tst	r3, #64
 1929 002a 07D0     		beq	.L124
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
 1930              		.loc 1 3186 0 is_stmt 0 discriminator 1
 1931 002c 222D     		cmp	r5, #34
 1932 002e 05D1     		bne	.L124
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 1933              		.loc 1 3189 0 is_stmt 1
 1934 0030 0023     		movs	r3, #0
 1935 0032 A4F85A30 		strh	r3, [r4, #90]	@ movhi
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 1936              		.loc 1 3190 0
 1937 0036 2046     		mov	r0, r4
 1938 0038 FFF7FEFF 		bl	UART_EndRxTransfer
 1939              	.LVL166:
 1940              	.L124:
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1941              		.loc 1 3193 0
 1942 003c E36F     		ldr	r3, [r4, #124]
 1943 003e 43F01003 		orr	r3, r3, #16
 1944 0042 E367     		str	r3, [r4, #124]
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 1945              		.loc 1 3200 0
 1946 0044 2046     		mov	r0, r4
 1947 0046 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 1948              	.LVL167:
 1949 004a 38BD     		pop	{r3, r4, r5, pc}
 1950              		.cfi_endproc
 1951              	.LFE175:
 1953              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 1954              		.align	2
 1955              		.global	HAL_UART_IRQHandler
 1956              		.thumb
 1957              		.thumb_func
 1959              	HAL_UART_IRQHandler:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 102


 1960              	.LFB145:
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 1961              		.loc 1 2082 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 0
 1964              		@ frame_needed = 0, uses_anonymous_args = 0
 1965              	.LVL168:
 1966 0000 38B5     		push	{r3, r4, r5, lr}
 1967              	.LCFI20:
 1968              		.cfi_def_cfa_offset 16
 1969              		.cfi_offset 3, -16
 1970              		.cfi_offset 4, -12
 1971              		.cfi_offset 5, -8
 1972              		.cfi_offset 14, -4
 1973 0002 0446     		mov	r4, r0
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 1974              		.loc 1 2083 0
 1975 0004 0168     		ldr	r1, [r0]
 1976 0006 CB69     		ldr	r3, [r1, #28]
 1977              	.LVL169:
2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 1978              		.loc 1 2084 0
 1979 0008 0868     		ldr	r0, [r1]
 1980              	.LVL170:
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 1981              		.loc 1 2085 0
 1982 000a 8D68     		ldr	r5, [r1, #8]
 1983              	.LVL171:
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (errorflags == 0U)
 1984              		.loc 1 2091 0
 1985 000c 40F60F02 		movw	r2, #2063
 1986              	.LVL172:
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 1987              		.loc 1 2092 0
 1988 0010 1A40     		ands	r2, r3, r2
 1989              	.LVL173:
 1990 0012 0CD1     		bne	.L127
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
 1991              		.loc 1 2095 0
 1992 0014 13F0200F 		tst	r3, #32
 1993 0018 09D0     		beq	.L127
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 1994              		.loc 1 2096 0
 1995 001a 10F0200F 		tst	r0, #32
 1996 001e 06D0     		beq	.L127
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 1997              		.loc 1 2098 0
 1998 0020 236E     		ldr	r3, [r4, #96]
 1999              	.LVL174:
 2000 0022 002B     		cmp	r3, #0
 2001 0024 00F0A480 		beq	.L126
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2002              		.loc 1 2100 0
 2003 0028 2046     		mov	r0, r4
 2004              	.LVL175:
 2005 002a 9847     		blx	r3
 2006              	.LVL176:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 103


 2007 002c 38BD     		pop	{r3, r4, r5, pc}
 2008              	.LVL177:
 2009              	.L127:
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 2010              		.loc 1 2107 0
 2011 002e 002A     		cmp	r2, #0
 2012 0030 7DD0     		beq	.L129
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 2013              		.loc 1 2108 0
 2014 0032 15F00102 		ands	r2, r5, #1
 2015              	.LVL178:
 2016 0036 02D1     		bne	.L130
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2017              		.loc 1 2109 0
 2018 0038 10F4907F 		tst	r0, #288
 2019 003c 77D0     		beq	.L129
 2020              	.L130:
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2021              		.loc 1 2112 0
 2022 003e 13F0010F 		tst	r3, #1
 2023 0042 07D0     		beq	.L131
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2024              		.loc 1 2112 0 is_stmt 0 discriminator 1
 2025 0044 10F4807F 		tst	r0, #256
 2026 0048 04D0     		beq	.L131
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2027              		.loc 1 2114 0 is_stmt 1
 2028 004a 0125     		movs	r5, #1
 2029              	.LVL179:
 2030 004c 0D62     		str	r5, [r1, #32]
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2031              		.loc 1 2116 0
 2032 004e E16F     		ldr	r1, [r4, #124]
 2033 0050 2943     		orrs	r1, r1, r5
 2034 0052 E167     		str	r1, [r4, #124]
 2035              	.L131:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2036              		.loc 1 2120 0
 2037 0054 13F0020F 		tst	r3, #2
 2038 0058 07D0     		beq	.L132
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2039              		.loc 1 2120 0 is_stmt 0 discriminator 1
 2040 005a 32B1     		cbz	r2, .L132
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2041              		.loc 1 2122 0 is_stmt 1
 2042 005c 2168     		ldr	r1, [r4]
 2043 005e 0225     		movs	r5, #2
 2044 0060 0D62     		str	r5, [r1, #32]
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2045              		.loc 1 2124 0
 2046 0062 E16F     		ldr	r1, [r4, #124]
 2047 0064 41F00401 		orr	r1, r1, #4
 2048 0068 E167     		str	r1, [r4, #124]
 2049              	.L132:
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2050              		.loc 1 2128 0
 2051 006a 13F0040F 		tst	r3, #4
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 104


 2052 006e 07D0     		beq	.L133
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2053              		.loc 1 2128 0 is_stmt 0 discriminator 1
 2054 0070 32B1     		cbz	r2, .L133
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2055              		.loc 1 2130 0 is_stmt 1
 2056 0072 2168     		ldr	r1, [r4]
 2057 0074 0425     		movs	r5, #4
 2058 0076 0D62     		str	r5, [r1, #32]
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2059              		.loc 1 2132 0
 2060 0078 E16F     		ldr	r1, [r4, #124]
 2061 007a 41F00201 		orr	r1, r1, #2
 2062 007e E167     		str	r1, [r4, #124]
 2063              	.L133:
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 2064              		.loc 1 2136 0
 2065 0080 13F0080F 		tst	r3, #8
 2066 0084 09D0     		beq	.L134
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2067              		.loc 1 2137 0
 2068 0086 10F0200F 		tst	r0, #32
 2069 008a 00D1     		bne	.L135
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 2070              		.loc 1 2137 0 is_stmt 0 discriminator 1
 2071 008c 2AB1     		cbz	r2, .L134
 2072              	.L135:
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2073              		.loc 1 2140 0 is_stmt 1
 2074 008e 2268     		ldr	r2, [r4]
 2075 0090 0821     		movs	r1, #8
 2076 0092 1162     		str	r1, [r2, #32]
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2077              		.loc 1 2142 0
 2078 0094 E26F     		ldr	r2, [r4, #124]
 2079 0096 0A43     		orrs	r2, r2, r1
 2080 0098 E267     		str	r2, [r4, #124]
 2081              	.L134:
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2082              		.loc 1 2146 0
 2083 009a 13F4006F 		tst	r3, #2048
 2084 009e 0AD0     		beq	.L136
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2085              		.loc 1 2146 0 is_stmt 0 discriminator 1
 2086 00a0 10F0806F 		tst	r0, #67108864
 2087 00a4 07D0     		beq	.L136
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2088              		.loc 1 2148 0 is_stmt 1
 2089 00a6 2268     		ldr	r2, [r4]
 2090 00a8 4FF40061 		mov	r1, #2048
 2091 00ac 1162     		str	r1, [r2, #32]
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2092              		.loc 1 2150 0
 2093 00ae E26F     		ldr	r2, [r4, #124]
 2094 00b0 42F02002 		orr	r2, r2, #32
 2095 00b4 E267     		str	r2, [r4, #124]
 2096              	.L136:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 105


2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2097              		.loc 1 2154 0
 2098 00b6 E26F     		ldr	r2, [r4, #124]
 2099 00b8 002A     		cmp	r2, #0
 2100 00ba 59D0     		beq	.L126
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 2101              		.loc 1 2157 0
 2102 00bc 13F0200F 		tst	r3, #32
 2103 00c0 06D0     		beq	.L137
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2104              		.loc 1 2158 0
 2105 00c2 10F0200F 		tst	r0, #32
 2106 00c6 03D0     		beq	.L137
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 2107              		.loc 1 2160 0
 2108 00c8 236E     		ldr	r3, [r4, #96]
 2109              	.LVL180:
 2110 00ca 0BB1     		cbz	r3, .L137
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 2111              		.loc 1 2162 0
 2112 00cc 2046     		mov	r0, r4
 2113              	.LVL181:
 2114 00ce 9847     		blx	r3
 2115              	.LVL182:
 2116              	.L137:
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 2117              		.loc 1 2171 0
 2118 00d0 E26F     		ldr	r2, [r4, #124]
 2119              	.LVL183:
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2120              		.loc 1 2172 0
 2121 00d2 2368     		ldr	r3, [r4]
 2122 00d4 9B68     		ldr	r3, [r3, #8]
 2123 00d6 13F0400F 		tst	r3, #64
 2124 00da 02D1     		bne	.L138
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           ((errorcode & (HAL_UART_ERROR_RTO | HAL_UART_ERROR_ORE)) != 0U))
 2125              		.loc 1 2172 0 is_stmt 0 discriminator 1
 2126 00dc 12F0280F 		tst	r2, #40
 2127 00e0 1FD0     		beq	.L139
 2128              	.L138:
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2129              		.loc 1 2178 0 is_stmt 1
 2130 00e2 2046     		mov	r0, r4
 2131 00e4 FFF7FEFF 		bl	UART_EndRxTransfer
 2132              	.LVL184:
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 2133              		.loc 1 2181 0
 2134 00e8 2368     		ldr	r3, [r4]
 2135 00ea 9A68     		ldr	r2, [r3, #8]
 2136 00ec 12F0400F 		tst	r2, #64
 2137 00f0 13D0     		beq	.L140
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2138              		.loc 1 2183 0
 2139 00f2 9A68     		ldr	r2, [r3, #8]
 2140 00f4 22F04002 		bic	r2, r2, #64
 2141 00f8 9A60     		str	r2, [r3, #8]
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 106


 2142              		.loc 1 2186 0
 2143 00fa E36E     		ldr	r3, [r4, #108]
 2144 00fc 4BB1     		cbz	r3, .L141
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2145              		.loc 1 2190 0
 2146 00fe 1D4A     		ldr	r2, .L145
 2147 0100 5A63     		str	r2, [r3, #52]
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             {
 2148              		.loc 1 2193 0
 2149 0102 E06E     		ldr	r0, [r4, #108]
 2150 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2151              	.LVL185:
 2152 0108 90B3     		cbz	r0, .L126
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****             }
 2153              		.loc 1 2196 0
 2154 010a E06E     		ldr	r0, [r4, #108]
 2155 010c 436B     		ldr	r3, [r0, #52]
 2156 010e 9847     		blx	r3
 2157              	.LVL186:
 2158 0110 38BD     		pop	{r3, r4, r5, pc}
 2159              	.LVL187:
 2160              	.L141:
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2161              		.loc 1 2207 0
 2162 0112 2046     		mov	r0, r4
 2163 0114 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2164              	.LVL188:
 2165 0118 38BD     		pop	{r3, r4, r5, pc}
 2166              	.LVL189:
 2167              	.L140:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2168              		.loc 1 2220 0
 2169 011a 2046     		mov	r0, r4
 2170 011c FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2171              	.LVL190:
 2172 0120 38BD     		pop	{r3, r4, r5, pc}
 2173              	.LVL191:
 2174              	.L139:
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2175              		.loc 1 2233 0
 2176 0122 2046     		mov	r0, r4
 2177 0124 FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2178              	.LVL192:
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2179              		.loc 1 2235 0
 2180 0128 0023     		movs	r3, #0
 2181 012a E367     		str	r3, [r4, #124]
 2182 012c 38BD     		pop	{r3, r4, r5, pc}
 2183              	.LVL193:
 2184              	.L129:
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2185              		.loc 1 2243 0
 2186 012e 13F4801F 		tst	r3, #1048576
 2187 0132 09D0     		beq	.L142
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2188              		.loc 1 2243 0 is_stmt 0 discriminator 1
 2189 0134 15F4800F 		tst	r5, #4194304
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 107


 2190 0138 06D0     		beq	.L142
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2191              		.loc 1 2245 0 is_stmt 1
 2192 013a 4FF48013 		mov	r3, #1048576
 2193              	.LVL194:
 2194 013e 0B62     		str	r3, [r1, #32]
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2195              		.loc 1 2255 0
 2196 0140 2046     		mov	r0, r4
 2197              	.LVL195:
 2198 0142 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
 2199              	.LVL196:
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2200              		.loc 1 2257 0
 2201 0146 38BD     		pop	{r3, r4, r5, pc}
 2202              	.LVL197:
 2203              	.L142:
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 2204              		.loc 1 2261 0
 2205 0148 13F0800F 		tst	r3, #128
 2206 014c 07D0     		beq	.L143
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2207              		.loc 1 2262 0
 2208 014e 10F0800F 		tst	r0, #128
 2209 0152 04D0     		beq	.L143
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2210              		.loc 1 2264 0
 2211 0154 636E     		ldr	r3, [r4, #100]
 2212              	.LVL198:
 2213 0156 5BB1     		cbz	r3, .L126
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2214              		.loc 1 2266 0
 2215 0158 2046     		mov	r0, r4
 2216              	.LVL199:
 2217 015a 9847     		blx	r3
 2218              	.LVL200:
 2219 015c 38BD     		pop	{r3, r4, r5, pc}
 2220              	.LVL201:
 2221              	.L143:
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2222              		.loc 1 2272 0
 2223 015e 13F0400F 		tst	r3, #64
 2224 0162 05D0     		beq	.L126
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2225              		.loc 1 2272 0 is_stmt 0 discriminator 1
 2226 0164 10F0400F 		tst	r0, #64
 2227 0168 02D0     		beq	.L126
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     return;
 2228              		.loc 1 2274 0 is_stmt 1
 2229 016a 2046     		mov	r0, r4
 2230              	.LVL202:
 2231 016c FFF7FEFF 		bl	UART_EndTransmit_IT
 2232              	.LVL203:
 2233              	.L126:
 2234 0170 38BD     		pop	{r3, r4, r5, pc}
 2235              	.LVL204:
 2236              	.L146:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 108


 2237 0172 00BF     		.align	2
 2238              	.L145:
 2239 0174 00000000 		.word	UART_DMAAbortOnError
 2240              		.cfi_endproc
 2241              	.LFE145:
 2243              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 2244              		.align	2
 2245              		.thumb
 2246              		.thumb_func
 2248              	UART_DMAAbortOnError:
 2249              	.LFB176:
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2250              		.loc 1 3211 0
 2251              		.cfi_startproc
 2252              		@ args = 0, pretend = 0, frame = 0
 2253              		@ frame_needed = 0, uses_anonymous_args = 0
 2254              	.LVL205:
 2255 0000 08B5     		push	{r3, lr}
 2256              	.LCFI21:
 2257              		.cfi_def_cfa_offset 8
 2258              		.cfi_offset 3, -8
 2259              		.cfi_offset 14, -4
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2260              		.loc 1 3212 0
 2261 0002 406A     		ldr	r0, [r0, #36]
 2262              	.LVL206:
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2263              		.loc 1 3213 0
 2264 0004 0023     		movs	r3, #0
 2265 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2266              		.loc 1 3214 0
 2267 000a A0F85230 		strh	r3, [r0, #82]	@ movhi
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2268              		.loc 1 3221 0
 2269 000e FFF7FEFF 		bl	HAL_UART_ErrorCallback
 2270              	.LVL207:
 2271 0012 08BD     		pop	{r3, pc}
 2272              		.cfi_endproc
 2273              	.LFE176:
 2275              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 2276              		.align	2
 2277              		.weak	HAL_UART_AbortCpltCallback
 2278              		.thumb
 2279              		.thumb_func
 2281              	HAL_UART_AbortCpltCallback:
 2282              	.LFB151:
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2283              		.loc 1 2361 0
 2284              		.cfi_startproc
 2285              		@ args = 0, pretend = 0, frame = 0
 2286              		@ frame_needed = 0, uses_anonymous_args = 0
 2287              		@ link register save eliminated.
 2288              	.LVL208:
 2289 0000 7047     		bx	lr
 2290              		.cfi_endproc
 2291              	.LFE151:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 109


 2293 0002 00BF     		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2294              		.align	2
 2295              		.global	HAL_UART_Abort_IT
 2296              		.thumb
 2297              		.thumb_func
 2299              	HAL_UART_Abort_IT:
 2300              	.LFB142:
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2301              		.loc 1 1775 0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 0
 2304              		@ frame_needed = 0, uses_anonymous_args = 0
 2305              	.LVL209:
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2306              		.loc 1 1775 0
 2307 0000 10B5     		push	{r4, lr}
 2308              	.LCFI22:
 2309              		.cfi_def_cfa_offset 8
 2310              		.cfi_offset 4, -8
 2311              		.cfi_offset 14, -4
 2312 0002 0446     		mov	r4, r0
 2313              	.LVL210:
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2314              		.loc 1 1779 0
 2315 0004 0268     		ldr	r2, [r0]
 2316 0006 1368     		ldr	r3, [r2]
 2317 0008 23F4F073 		bic	r3, r3, #480
 2318 000c 1360     		str	r3, [r2]
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2319              		.loc 1 1780 0
 2320 000e 0268     		ldr	r2, [r0]
 2321 0010 9368     		ldr	r3, [r2, #8]
 2322 0012 23F00103 		bic	r3, r3, #1
 2323 0016 9360     		str	r3, [r2, #8]
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2324              		.loc 1 1785 0
 2325 0018 836E     		ldr	r3, [r0, #104]
 2326 001a 4BB1     		cbz	r3, .L151
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2327              		.loc 1 1789 0
 2328 001c 0268     		ldr	r2, [r0]
 2329 001e 9268     		ldr	r2, [r2, #8]
 2330 0020 12F0800F 		tst	r2, #128
 2331 0024 02D0     		beq	.L152
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2332              		.loc 1 1791 0
 2333 0026 2B4A     		ldr	r2, .L163
 2334 0028 5A63     		str	r2, [r3, #52]
 2335 002a 01E0     		b	.L151
 2336              	.L152:
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2337              		.loc 1 1795 0
 2338 002c 0022     		movs	r2, #0
 2339 002e 5A63     		str	r2, [r3, #52]
 2340              	.L151:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2341              		.loc 1 1799 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 110


 2342 0030 E36E     		ldr	r3, [r4, #108]
 2343 0032 4BB1     		cbz	r3, .L153
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2344              		.loc 1 1803 0
 2345 0034 2268     		ldr	r2, [r4]
 2346 0036 9268     		ldr	r2, [r2, #8]
 2347 0038 12F0400F 		tst	r2, #64
 2348 003c 02D0     		beq	.L154
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2349              		.loc 1 1805 0
 2350 003e 264A     		ldr	r2, .L163+4
 2351 0040 5A63     		str	r2, [r3, #52]
 2352 0042 01E0     		b	.L153
 2353              	.L154:
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 2354              		.loc 1 1809 0
 2355 0044 0022     		movs	r2, #0
 2356 0046 5A63     		str	r2, [r3, #52]
 2357              	.L153:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2358              		.loc 1 1814 0
 2359 0048 2368     		ldr	r3, [r4]
 2360 004a 9A68     		ldr	r2, [r3, #8]
 2361 004c 12F0800F 		tst	r2, #128
 2362 0050 0DD0     		beq	.L158
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2363              		.loc 1 1817 0
 2364 0052 9A68     		ldr	r2, [r3, #8]
 2365 0054 22F08002 		bic	r2, r2, #128
 2366 0058 9A60     		str	r2, [r3, #8]
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2367              		.loc 1 1820 0
 2368 005a A06E     		ldr	r0, [r4, #104]
 2369              	.LVL211:
 2370 005c 48B1     		cbz	r0, .L159
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2371              		.loc 1 1826 0
 2372 005e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2373              	.LVL212:
 2374 0062 40B1     		cbz	r0, .L160
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2375              		.loc 1 1828 0
 2376 0064 A36E     		ldr	r3, [r4, #104]
 2377 0066 0022     		movs	r2, #0
 2378 0068 5A63     		str	r2, [r3, #52]
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2379              		.loc 1 1776 0
 2380 006a 0122     		movs	r2, #1
 2381 006c 04E0     		b	.L155
 2382              	.LVL213:
 2383              	.L158:
 2384 006e 0122     		movs	r2, #1
 2385 0070 02E0     		b	.L155
 2386              	.LVL214:
 2387              	.L159:
 2388 0072 0122     		movs	r2, #1
 2389 0074 00E0     		b	.L155
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 111


 2390              	.L160:
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2391              		.loc 1 1832 0
 2392 0076 0022     		movs	r2, #0
 2393              	.L155:
 2394              	.LVL215:
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2395              		.loc 1 1838 0
 2396 0078 2368     		ldr	r3, [r4]
 2397 007a 9968     		ldr	r1, [r3, #8]
 2398 007c 11F0400F 		tst	r1, #64
 2399 0080 0ED0     		beq	.L156
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2400              		.loc 1 1840 0
 2401 0082 9968     		ldr	r1, [r3, #8]
 2402 0084 21F04001 		bic	r1, r1, #64
 2403 0088 9960     		str	r1, [r3, #8]
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2404              		.loc 1 1843 0
 2405 008a E06E     		ldr	r0, [r4, #108]
 2406 008c 40B1     		cbz	r0, .L156
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2407              		.loc 1 1849 0
 2408 008e FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2409              	.LVL216:
 2410 0092 20B1     		cbz	r0, .L161
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         abortcplt = 1U;
 2411              		.loc 1 1851 0
 2412 0094 E36E     		ldr	r3, [r4, #108]
 2413 0096 0022     		movs	r2, #0
 2414 0098 5A63     		str	r2, [r3, #52]
 2415              	.LVL217:
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2416              		.loc 1 1852 0
 2417 009a 0122     		movs	r2, #1
 2418 009c 00E0     		b	.L156
 2419              	.LVL218:
 2420              	.L161:
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2421              		.loc 1 1856 0
 2422 009e 0022     		movs	r2, #0
 2423              	.L156:
 2424              	.LVL219:
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2425              		.loc 1 1862 0
 2426 00a0 AAB1     		cbz	r2, .L157
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = 0U;
 2427              		.loc 1 1865 0
 2428 00a2 0023     		movs	r3, #0
 2429 00a4 A4F85230 		strh	r3, [r4, #82]	@ movhi
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2430              		.loc 1 1866 0
 2431 00a8 A4F85A30 		strh	r3, [r4, #90]	@ movhi
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxISR = NULL;
 2432              		.loc 1 1869 0
 2433 00ac 2366     		str	r3, [r4, #96]
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 112


 2434              		.loc 1 1870 0
 2435 00ae 6366     		str	r3, [r4, #100]
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2436              		.loc 1 1873 0
 2437 00b0 E367     		str	r3, [r4, #124]
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2438              		.loc 1 1876 0
 2439 00b2 2368     		ldr	r3, [r4]
 2440 00b4 0F22     		movs	r2, #15
 2441              	.LVL220:
 2442 00b6 1A62     		str	r2, [r3, #32]
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2443              		.loc 1 1880 0
 2444 00b8 2268     		ldr	r2, [r4]
 2445 00ba 9369     		ldr	r3, [r2, #24]
 2446 00bc 43F00803 		orr	r3, r3, #8
 2447 00c0 9361     		str	r3, [r2, #24]
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2448              		.loc 1 1883 0
 2449 00c2 2023     		movs	r3, #32
 2450 00c4 6367     		str	r3, [r4, #116]
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2451              		.loc 1 1884 0
 2452 00c6 A367     		str	r3, [r4, #120]
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2453              		.loc 1 1892 0
 2454 00c8 2046     		mov	r0, r4
 2455 00ca FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2456              	.LVL221:
 2457              	.L157:
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2458              		.loc 1 1897 0
 2459 00ce 0020     		movs	r0, #0
 2460 00d0 10BD     		pop	{r4, pc}
 2461              	.LVL222:
 2462              	.L164:
 2463 00d2 00BF     		.align	2
 2464              	.L163:
 2465 00d4 00000000 		.word	UART_DMATxAbortCallback
 2466 00d8 00000000 		.word	UART_DMARxAbortCallback
 2467              		.cfi_endproc
 2468              	.LFE142:
 2470              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 2471              		.align	2
 2472              		.thumb
 2473              		.thumb_func
 2475              	UART_DMARxAbortCallback:
 2476              	.LFB178:
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2477              		.loc 1 3283 0
 2478              		.cfi_startproc
 2479              		@ args = 0, pretend = 0, frame = 0
 2480              		@ frame_needed = 0, uses_anonymous_args = 0
 2481              	.LVL223:
 2482 0000 08B5     		push	{r3, lr}
 2483              	.LCFI23:
 2484              		.cfi_def_cfa_offset 8
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 113


 2485              		.cfi_offset 3, -8
 2486              		.cfi_offset 14, -4
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2487              		.loc 1 3284 0
 2488 0002 406A     		ldr	r0, [r0, #36]
 2489              	.LVL224:
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2490              		.loc 1 3286 0
 2491 0004 C36E     		ldr	r3, [r0, #108]
 2492 0006 0022     		movs	r2, #0
 2493 0008 5A63     		str	r2, [r3, #52]
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2494              		.loc 1 3289 0
 2495 000a 836E     		ldr	r3, [r0, #104]
 2496 000c 0BB1     		cbz	r3, .L166
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2497              		.loc 1 3291 0
 2498 000e 5B6B     		ldr	r3, [r3, #52]
 2499 0010 93B9     		cbnz	r3, .L165
 2500              	.L166:
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2501              		.loc 1 3298 0
 2502 0012 0023     		movs	r3, #0
 2503 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2504              		.loc 1 3299 0
 2505 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2506              		.loc 1 3302 0
 2507 001c C367     		str	r3, [r0, #124]
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2508              		.loc 1 3305 0
 2509 001e 0368     		ldr	r3, [r0]
 2510 0020 0F22     		movs	r2, #15
 2511 0022 1A62     		str	r2, [r3, #32]
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2512              		.loc 1 3308 0
 2513 0024 0268     		ldr	r2, [r0]
 2514 0026 9369     		ldr	r3, [r2, #24]
 2515 0028 43F00803 		orr	r3, r3, #8
 2516 002c 9361     		str	r3, [r2, #24]
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2517              		.loc 1 3311 0
 2518 002e 2023     		movs	r3, #32
 2519 0030 4367     		str	r3, [r0, #116]
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2520              		.loc 1 3312 0
 2521 0032 8367     		str	r3, [r0, #120]
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2522              		.loc 1 3320 0
 2523 0034 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2524              	.LVL225:
 2525              	.L165:
 2526 0038 08BD     		pop	{r3, pc}
 2527              		.cfi_endproc
 2528              	.LFE178:
 2530 003a 00BF     		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 114


 2531              		.align	2
 2532              		.thumb
 2533              		.thumb_func
 2535              	UART_DMATxAbortCallback:
 2536              	.LFB177:
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2537              		.loc 1 3234 0
 2538              		.cfi_startproc
 2539              		@ args = 0, pretend = 0, frame = 0
 2540              		@ frame_needed = 0, uses_anonymous_args = 0
 2541              	.LVL226:
 2542 0000 08B5     		push	{r3, lr}
 2543              	.LCFI24:
 2544              		.cfi_def_cfa_offset 8
 2545              		.cfi_offset 3, -8
 2546              		.cfi_offset 14, -4
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2547              		.loc 1 3235 0
 2548 0002 406A     		ldr	r0, [r0, #36]
 2549              	.LVL227:
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2550              		.loc 1 3237 0
 2551 0004 836E     		ldr	r3, [r0, #104]
 2552 0006 0022     		movs	r2, #0
 2553 0008 5A63     		str	r2, [r3, #52]
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2554              		.loc 1 3240 0
 2555 000a C36E     		ldr	r3, [r0, #108]
 2556 000c 0BB1     		cbz	r3, .L170
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2557              		.loc 1 3242 0
 2558 000e 5B6B     		ldr	r3, [r3, #52]
 2559 0010 6BB9     		cbnz	r3, .L169
 2560              	.L170:
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2561              		.loc 1 3249 0
 2562 0012 0023     		movs	r3, #0
 2563 0014 A0F85230 		strh	r3, [r0, #82]	@ movhi
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2564              		.loc 1 3250 0
 2565 0018 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2566              		.loc 1 3253 0
 2567 001c C367     		str	r3, [r0, #124]
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2568              		.loc 1 3256 0
 2569 001e 0368     		ldr	r3, [r0]
 2570 0020 0F22     		movs	r2, #15
 2571 0022 1A62     		str	r2, [r3, #32]
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2572              		.loc 1 3260 0
 2573 0024 2023     		movs	r3, #32
 2574 0026 4367     		str	r3, [r0, #116]
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2575              		.loc 1 3261 0
 2576 0028 8367     		str	r3, [r0, #120]
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 115


 2577              		.loc 1 3269 0
 2578 002a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 2579              	.LVL228:
 2580              	.L169:
 2581 002e 08BD     		pop	{r3, pc}
 2582              		.cfi_endproc
 2583              	.LFE177:
 2585              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 2586              		.align	2
 2587              		.weak	HAL_UART_AbortTransmitCpltCallback
 2588              		.thumb
 2589              		.thumb_func
 2591              	HAL_UART_AbortTransmitCpltCallback:
 2592              	.LFB152:
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2593              		.loc 1 2376 0
 2594              		.cfi_startproc
 2595              		@ args = 0, pretend = 0, frame = 0
 2596              		@ frame_needed = 0, uses_anonymous_args = 0
 2597              		@ link register save eliminated.
 2598              	.LVL229:
 2599 0000 7047     		bx	lr
 2600              		.cfi_endproc
 2601              	.LFE152:
 2603 0002 00BF     		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 2604              		.align	2
 2605              		.global	HAL_UART_AbortTransmit_IT
 2606              		.thumb
 2607              		.thumb_func
 2609              	HAL_UART_AbortTransmit_IT:
 2610              	.LFB143:
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
 2611              		.loc 1 1914 0
 2612              		.cfi_startproc
 2613              		@ args = 0, pretend = 0, frame = 0
 2614              		@ frame_needed = 0, uses_anonymous_args = 0
 2615              	.LVL230:
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable interrupts */
 2616              		.loc 1 1914 0
 2617 0000 10B5     		push	{r4, lr}
 2618              	.LCFI25:
 2619              		.cfi_def_cfa_offset 8
 2620              		.cfi_offset 4, -8
 2621              		.cfi_offset 14, -4
 2622 0002 0446     		mov	r4, r0
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2623              		.loc 1 1916 0
 2624 0004 0268     		ldr	r2, [r0]
 2625 0006 1368     		ldr	r3, [r2]
 2626 0008 23F0C003 		bic	r3, r3, #192
 2627 000c 1360     		str	r3, [r2]
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2628              		.loc 1 1919 0
 2629 000e 0368     		ldr	r3, [r0]
 2630 0010 9A68     		ldr	r2, [r3, #8]
 2631 0012 12F0800F 		tst	r2, #128
 2632 0016 18D0     		beq	.L175
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 116


1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2633              		.loc 1 1921 0
 2634 0018 9A68     		ldr	r2, [r3, #8]
 2635 001a 22F08002 		bic	r2, r2, #128
 2636 001e 9A60     		str	r2, [r3, #8]
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2637              		.loc 1 1924 0
 2638 0020 836E     		ldr	r3, [r0, #104]
 2639 0022 4BB1     		cbz	r3, .L176
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2640              		.loc 1 1928 0
 2641 0024 0E4A     		ldr	r2, .L179
 2642 0026 5A63     		str	r2, [r3, #52]
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2643              		.loc 1 1931 0
 2644 0028 806E     		ldr	r0, [r0, #104]
 2645              	.LVL231:
 2646 002a FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2647              	.LVL232:
 2648 002e A0B1     		cbz	r0, .L177
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2649              		.loc 1 1934 0
 2650 0030 A06E     		ldr	r0, [r4, #104]
 2651 0032 436B     		ldr	r3, [r0, #52]
 2652 0034 9847     		blx	r3
 2653              	.LVL233:
 2654 0036 10E0     		b	.L177
 2655              	.LVL234:
 2656              	.L176:
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2657              		.loc 1 1940 0
 2658 0038 0023     		movs	r3, #0
 2659 003a A0F85230 		strh	r3, [r0, #82]	@ movhi
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2660              		.loc 1 1943 0
 2661 003e 4366     		str	r3, [r0, #100]
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2662              		.loc 1 1946 0
 2663 0040 2023     		movs	r3, #32
 2664 0042 4367     		str	r3, [r0, #116]
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2665              		.loc 1 1954 0
 2666 0044 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2667              	.LVL235:
 2668 0048 07E0     		b	.L177
 2669              	.LVL236:
 2670              	.L175:
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2671              		.loc 1 1961 0
 2672 004a 0023     		movs	r3, #0
 2673 004c A0F85230 		strh	r3, [r0, #82]	@ movhi
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2674              		.loc 1 1964 0
 2675 0050 4366     		str	r3, [r0, #100]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2676              		.loc 1 1968 0
 2677 0052 2023     		movs	r3, #32
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 117


 2678 0054 4367     		str	r3, [r0, #116]
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2679              		.loc 1 1976 0
 2680 0056 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2681              	.LVL237:
 2682              	.L177:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2683              		.loc 1 1981 0
 2684 005a 0020     		movs	r0, #0
 2685 005c 10BD     		pop	{r4, pc}
 2686              	.LVL238:
 2687              	.L180:
 2688 005e 00BF     		.align	2
 2689              	.L179:
 2690 0060 00000000 		.word	UART_DMATxOnlyAbortCallback
 2691              		.cfi_endproc
 2692              	.LFE143:
 2694              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 2695              		.align	2
 2696              		.thumb
 2697              		.thumb_func
 2699              	UART_DMATxOnlyAbortCallback:
 2700              	.LFB179:
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 2701              		.loc 1 3334 0
 2702              		.cfi_startproc
 2703              		@ args = 0, pretend = 0, frame = 0
 2704              		@ frame_needed = 0, uses_anonymous_args = 0
 2705              	.LVL239:
 2706 0000 08B5     		push	{r3, lr}
 2707              	.LCFI26:
 2708              		.cfi_def_cfa_offset 8
 2709              		.cfi_offset 3, -8
 2710              		.cfi_offset 14, -4
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2711              		.loc 1 3335 0
 2712 0002 406A     		ldr	r0, [r0, #36]
 2713              	.LVL240:
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2714              		.loc 1 3337 0
 2715 0004 0023     		movs	r3, #0
 2716 0006 A0F85230 		strh	r3, [r0, #82]	@ movhi
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2717              		.loc 1 3341 0
 2718 000a 2023     		movs	r3, #32
 2719 000c 4367     		str	r3, [r0, #116]
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2720              		.loc 1 3349 0
 2721 000e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 2722              	.LVL241:
 2723 0012 08BD     		pop	{r3, pc}
 2724              		.cfi_endproc
 2725              	.LFE179:
 2727              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 2728              		.align	2
 2729              		.weak	HAL_UART_AbortReceiveCpltCallback
 2730              		.thumb
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 118


 2731              		.thumb_func
 2733              	HAL_UART_AbortReceiveCpltCallback:
 2734              	.LFB153:
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 2735              		.loc 1 2391 0
 2736              		.cfi_startproc
 2737              		@ args = 0, pretend = 0, frame = 0
 2738              		@ frame_needed = 0, uses_anonymous_args = 0
 2739              		@ link register save eliminated.
 2740              	.LVL242:
 2741 0000 7047     		bx	lr
 2742              		.cfi_endproc
 2743              	.LFE153:
 2745 0002 00BF     		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 2746              		.align	2
 2747              		.global	HAL_UART_AbortReceive_IT
 2748              		.thumb
 2749              		.thumb_func
 2751              	HAL_UART_AbortReceive_IT:
 2752              	.LFB144:
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2753              		.loc 1 1998 0
 2754              		.cfi_startproc
 2755              		@ args = 0, pretend = 0, frame = 0
 2756              		@ frame_needed = 0, uses_anonymous_args = 0
 2757              	.LVL243:
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
 2758              		.loc 1 1998 0
 2759 0000 10B5     		push	{r4, lr}
 2760              	.LCFI27:
 2761              		.cfi_def_cfa_offset 8
 2762              		.cfi_offset 4, -8
 2763              		.cfi_offset 14, -4
 2764 0002 0446     		mov	r4, r0
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2765              		.loc 1 2000 0
 2766 0004 0268     		ldr	r2, [r0]
 2767 0006 1368     		ldr	r3, [r2]
 2768 0008 23F49073 		bic	r3, r3, #288
 2769 000c 1360     		str	r3, [r2]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2770              		.loc 1 2001 0
 2771 000e 0268     		ldr	r2, [r0]
 2772 0010 9368     		ldr	r3, [r2, #8]
 2773 0012 23F00103 		bic	r3, r3, #1
 2774 0016 9360     		str	r3, [r2, #8]
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2775              		.loc 1 2004 0
 2776 0018 0368     		ldr	r3, [r0]
 2777 001a 9A68     		ldr	r2, [r3, #8]
 2778 001c 12F0400F 		tst	r2, #64
 2779 0020 20D0     		beq	.L185
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2780              		.loc 1 2006 0
 2781 0022 9A68     		ldr	r2, [r3, #8]
 2782 0024 22F04002 		bic	r2, r2, #64
 2783 0028 9A60     		str	r2, [r3, #8]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 119


2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 2784              		.loc 1 2009 0
 2785 002a C36E     		ldr	r3, [r0, #108]
 2786 002c 4BB1     		cbz	r3, .L186
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2787              		.loc 1 2013 0
 2788 002e 134A     		ldr	r2, .L189
 2789 0030 5A63     		str	r2, [r3, #52]
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 2790              		.loc 1 2016 0
 2791 0032 C06E     		ldr	r0, [r0, #108]
 2792              	.LVL244:
 2793 0034 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 2794              	.LVL245:
 2795 0038 F0B1     		cbz	r0, .L187
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 2796              		.loc 1 2019 0
 2797 003a E06E     		ldr	r0, [r4, #108]
 2798 003c 436B     		ldr	r3, [r0, #52]
 2799 003e 9847     		blx	r3
 2800              	.LVL246:
 2801 0040 1AE0     		b	.L187
 2802              	.LVL247:
 2803              	.L186:
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2804              		.loc 1 2025 0
 2805 0042 0023     		movs	r3, #0
 2806 0044 A0F85A30 		strh	r3, [r0, #90]	@ movhi
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2807              		.loc 1 2028 0
 2808 0048 4365     		str	r3, [r0, #84]
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2809              		.loc 1 2031 0
 2810 004a 0368     		ldr	r3, [r0]
 2811 004c 0F22     		movs	r2, #15
 2812 004e 1A62     		str	r2, [r3, #32]
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2813              		.loc 1 2034 0
 2814 0050 0268     		ldr	r2, [r0]
 2815 0052 9369     		ldr	r3, [r2, #24]
 2816 0054 43F00803 		orr	r3, r3, #8
 2817 0058 9361     		str	r3, [r2, #24]
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2818              		.loc 1 2037 0
 2819 005a 2023     		movs	r3, #32
 2820 005c 8367     		str	r3, [r0, #120]
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2821              		.loc 1 2045 0
 2822 005e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2823              	.LVL248:
 2824 0062 09E0     		b	.L187
 2825              	.LVL249:
 2826              	.L185:
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2827              		.loc 1 2052 0
 2828 0064 0022     		movs	r2, #0
 2829 0066 A0F85A20 		strh	r2, [r0, #90]	@ movhi
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 120


2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2830              		.loc 1 2055 0
 2831 006a 4265     		str	r2, [r0, #84]
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2832              		.loc 1 2058 0
 2833 006c 0F22     		movs	r2, #15
 2834 006e 1A62     		str	r2, [r3, #32]
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2835              		.loc 1 2061 0
 2836 0070 2023     		movs	r3, #32
 2837 0072 8367     		str	r3, [r0, #120]
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2838              		.loc 1 2069 0
 2839 0074 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2840              	.LVL250:
 2841              	.L187:
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2842              		.loc 1 2074 0
 2843 0078 0020     		movs	r0, #0
 2844 007a 10BD     		pop	{r4, pc}
 2845              	.LVL251:
 2846              	.L190:
 2847              		.align	2
 2848              	.L189:
 2849 007c 00000000 		.word	UART_DMARxOnlyAbortCallback
 2850              		.cfi_endproc
 2851              	.LFE144:
 2853              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 2854              		.align	2
 2855              		.thumb
 2856              		.thumb_func
 2858              	UART_DMARxOnlyAbortCallback:
 2859              	.LFB180:
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 2860              		.loc 1 3362 0
 2861              		.cfi_startproc
 2862              		@ args = 0, pretend = 0, frame = 0
 2863              		@ frame_needed = 0, uses_anonymous_args = 0
 2864              	.LVL252:
 2865 0000 08B5     		push	{r3, lr}
 2866              	.LCFI28:
 2867              		.cfi_def_cfa_offset 8
 2868              		.cfi_offset 3, -8
 2869              		.cfi_offset 14, -4
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2870              		.loc 1 3363 0
 2871 0002 406A     		ldr	r0, [r0, #36]
 2872              	.LVL253:
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2873              		.loc 1 3365 0
 2874 0004 0023     		movs	r3, #0
 2875 0006 A0F85A30 		strh	r3, [r0, #90]	@ movhi
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2876              		.loc 1 3368 0
 2877 000a 0368     		ldr	r3, [r0]
 2878 000c 0F22     		movs	r2, #15
 2879 000e 1A62     		str	r2, [r3, #32]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 121


3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2880              		.loc 1 3371 0
 2881 0010 0268     		ldr	r2, [r0]
 2882 0012 9369     		ldr	r3, [r2, #24]
 2883 0014 43F00803 		orr	r3, r3, #8
 2884 0018 9361     		str	r3, [r2, #24]
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2885              		.loc 1 3374 0
 2886 001a 2023     		movs	r3, #32
 2887 001c 8367     		str	r3, [r0, #120]
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 2888              		.loc 1 3382 0
 2889 001e FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 2890              	.LVL254:
 2891 0022 08BD     		pop	{r3, pc}
 2892              		.cfi_endproc
 2893              	.LFE180:
 2895              		.section	.text.HAL_UART_ReceiverTimeout_Config,"ax",%progbits
 2896              		.align	2
 2897              		.global	HAL_UART_ReceiverTimeout_Config
 2898              		.thumb
 2899              		.thumb_func
 2901              	HAL_UART_ReceiverTimeout_Config:
 2902              	.LFB154:
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   assert_param(IS_UART_RECEIVER_TIMEOUT_VALUE(TimeoutValue));
 2903              		.loc 1 2438 0
 2904              		.cfi_startproc
 2905              		@ args = 0, pretend = 0, frame = 0
 2906              		@ frame_needed = 0, uses_anonymous_args = 0
 2907              		@ link register save eliminated.
 2908              	.LVL255:
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 2909              		.loc 1 2440 0
 2910 0000 0268     		ldr	r2, [r0]
 2911 0002 5369     		ldr	r3, [r2, #20]
 2912 0004 03F07F43 		and	r3, r3, #-16777216
 2913 0008 1943     		orrs	r1, r1, r3
 2914              	.LVL256:
 2915 000a 5161     		str	r1, [r2, #20]
 2916 000c 7047     		bx	lr
 2917              		.cfi_endproc
 2918              	.LFE154:
 2920 000e 00BF     		.section	.text.HAL_UART_EnableReceiverTimeout,"ax",%progbits
 2921              		.align	2
 2922              		.global	HAL_UART_EnableReceiverTimeout
 2923              		.thumb
 2924              		.thumb_func
 2926              	HAL_UART_EnableReceiverTimeout:
 2927              	.LFB155:
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 2928              		.loc 1 2450 0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 0
 2931              		@ frame_needed = 0, uses_anonymous_args = 0
 2932              		@ link register save eliminated.
 2933              	.LVL257:
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 122


 2934              		.loc 1 2451 0
 2935 0000 436F     		ldr	r3, [r0, #116]
 2936 0002 202B     		cmp	r3, #32
 2937 0004 14D1     		bne	.L196
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2938              		.loc 1 2454 0
 2939 0006 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2940 000a 012B     		cmp	r3, #1
 2941 000c 12D0     		beq	.L197
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2942              		.loc 1 2454 0 is_stmt 0 discriminator 2
 2943 000e 0123     		movs	r3, #1
 2944 0010 80F87030 		strb	r3, [r0, #112]
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2945              		.loc 1 2456 0 is_stmt 1 discriminator 2
 2946 0014 2423     		movs	r3, #36
 2947 0016 4367     		str	r3, [r0, #116]
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2948              		.loc 1 2459 0 discriminator 2
 2949 0018 0268     		ldr	r2, [r0]
 2950 001a 5368     		ldr	r3, [r2, #4]
 2951 001c 43F40003 		orr	r3, r3, #8388608
 2952 0020 5360     		str	r3, [r2, #4]
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2953              		.loc 1 2461 0 discriminator 2
 2954 0022 2023     		movs	r3, #32
 2955 0024 4367     		str	r3, [r0, #116]
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2956              		.loc 1 2464 0 discriminator 2
 2957 0026 0023     		movs	r3, #0
 2958 0028 80F87030 		strb	r3, [r0, #112]
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2959              		.loc 1 2466 0 discriminator 2
 2960 002c 1846     		mov	r0, r3
 2961              	.LVL258:
 2962 002e 7047     		bx	lr
 2963              	.LVL259:
 2964              	.L196:
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 2965              		.loc 1 2470 0
 2966 0030 0220     		movs	r0, #2
 2967              	.LVL260:
 2968 0032 7047     		bx	lr
 2969              	.LVL261:
 2970              	.L197:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2971              		.loc 1 2454 0
 2972 0034 0220     		movs	r0, #2
 2973              	.LVL262:
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2974              		.loc 1 2472 0
 2975 0036 7047     		bx	lr
 2976              		.cfi_endproc
 2977              	.LFE155:
 2979              		.section	.text.HAL_UART_DisableReceiverTimeout,"ax",%progbits
 2980              		.align	2
 2981              		.global	HAL_UART_DisableReceiverTimeout
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 123


 2982              		.thumb
 2983              		.thumb_func
 2985              	HAL_UART_DisableReceiverTimeout:
 2986              	.LFB156:
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 2987              		.loc 1 2481 0
 2988              		.cfi_startproc
 2989              		@ args = 0, pretend = 0, frame = 0
 2990              		@ frame_needed = 0, uses_anonymous_args = 0
 2991              		@ link register save eliminated.
 2992              	.LVL263:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 2993              		.loc 1 2482 0
 2994 0000 436F     		ldr	r3, [r0, #116]
 2995 0002 202B     		cmp	r3, #32
 2996 0004 14D1     		bne	.L200
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 2997              		.loc 1 2485 0
 2998 0006 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 2999 000a 012B     		cmp	r3, #1
 3000 000c 12D0     		beq	.L201
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3001              		.loc 1 2485 0 is_stmt 0 discriminator 2
 3002 000e 0123     		movs	r3, #1
 3003 0010 80F87030 		strb	r3, [r0, #112]
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3004              		.loc 1 2487 0 is_stmt 1 discriminator 2
 3005 0014 2423     		movs	r3, #36
 3006 0016 4367     		str	r3, [r0, #116]
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3007              		.loc 1 2490 0 discriminator 2
 3008 0018 0268     		ldr	r2, [r0]
 3009 001a 5368     		ldr	r3, [r2, #4]
 3010 001c 23F40003 		bic	r3, r3, #8388608
 3011 0020 5360     		str	r3, [r2, #4]
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3012              		.loc 1 2492 0 discriminator 2
 3013 0022 2023     		movs	r3, #32
 3014 0024 4367     		str	r3, [r0, #116]
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3015              		.loc 1 2495 0 discriminator 2
 3016 0026 0023     		movs	r3, #0
 3017 0028 80F87030 		strb	r3, [r0, #112]
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3018              		.loc 1 2497 0 discriminator 2
 3019 002c 1846     		mov	r0, r3
 3020              	.LVL264:
 3021 002e 7047     		bx	lr
 3022              	.LVL265:
 3023              	.L200:
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3024              		.loc 1 2501 0
 3025 0030 0220     		movs	r0, #2
 3026              	.LVL266:
 3027 0032 7047     		bx	lr
 3028              	.LVL267:
 3029              	.L201:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 124


2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3030              		.loc 1 2485 0
 3031 0034 0220     		movs	r0, #2
 3032              	.LVL268:
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3033              		.loc 1 2503 0
 3034 0036 7047     		bx	lr
 3035              		.cfi_endproc
 3036              	.LFE156:
 3038              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 3039              		.align	2
 3040              		.global	HAL_MultiProcessor_EnterMuteMode
 3041              		.thumb
 3042              		.thumb_func
 3044              	HAL_MultiProcessor_EnterMuteMode:
 3045              	.LFB159:
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 3046              		.loc 1 2552 0
 3047              		.cfi_startproc
 3048              		@ args = 0, pretend = 0, frame = 0
 3049              		@ frame_needed = 0, uses_anonymous_args = 0
 3050              		@ link register save eliminated.
 3051              	.LVL269:
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3052              		.loc 1 2553 0
 3053 0000 0268     		ldr	r2, [r0]
 3054 0002 9369     		ldr	r3, [r2, #24]
 3055 0004 43F00403 		orr	r3, r3, #4
 3056 0008 9361     		str	r3, [r2, #24]
 3057 000a 7047     		bx	lr
 3058              		.cfi_endproc
 3059              	.LFE159:
 3061              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 3062              		.align	2
 3063              		.global	HAL_HalfDuplex_EnableTransmitter
 3064              		.thumb
 3065              		.thumb_func
 3067              	HAL_HalfDuplex_EnableTransmitter:
 3068              	.LFB160:
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3069              		.loc 1 2562 0
 3070              		.cfi_startproc
 3071              		@ args = 0, pretend = 0, frame = 0
 3072              		@ frame_needed = 0, uses_anonymous_args = 0
 3073              		@ link register save eliminated.
 3074              	.LVL270:
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3075              		.loc 1 2563 0
 3076 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3077 0004 012B     		cmp	r3, #1
 3078 0006 15D0     		beq	.L205
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3079              		.loc 1 2563 0 is_stmt 0 discriminator 2
 3080 0008 0123     		movs	r3, #1
 3081 000a 80F87030 		strb	r3, [r0, #112]
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3082              		.loc 1 2564 0 is_stmt 1 discriminator 2
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 125


 3083 000e 2423     		movs	r3, #36
 3084 0010 4367     		str	r3, [r0, #116]
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3085              		.loc 1 2567 0 discriminator 2
 3086 0012 0268     		ldr	r2, [r0]
 3087 0014 1368     		ldr	r3, [r2]
 3088 0016 23F00C03 		bic	r3, r3, #12
 3089 001a 1360     		str	r3, [r2]
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3090              		.loc 1 2570 0 discriminator 2
 3091 001c 0268     		ldr	r2, [r0]
 3092 001e 1368     		ldr	r3, [r2]
 3093 0020 43F00803 		orr	r3, r3, #8
 3094 0024 1360     		str	r3, [r2]
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3095              		.loc 1 2572 0 discriminator 2
 3096 0026 2023     		movs	r3, #32
 3097 0028 4367     		str	r3, [r0, #116]
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3098              		.loc 1 2574 0 discriminator 2
 3099 002a 0023     		movs	r3, #0
 3100 002c 80F87030 		strb	r3, [r0, #112]
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3101              		.loc 1 2576 0 discriminator 2
 3102 0030 1846     		mov	r0, r3
 3103              	.LVL271:
 3104 0032 7047     		bx	lr
 3105              	.LVL272:
 3106              	.L205:
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3107              		.loc 1 2563 0
 3108 0034 0220     		movs	r0, #2
 3109              	.LVL273:
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3110              		.loc 1 2577 0
 3111 0036 7047     		bx	lr
 3112              		.cfi_endproc
 3113              	.LFE160:
 3115              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 3116              		.align	2
 3117              		.global	HAL_HalfDuplex_EnableReceiver
 3118              		.thumb
 3119              		.thumb_func
 3121              	HAL_HalfDuplex_EnableReceiver:
 3122              	.LFB161:
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 3123              		.loc 1 2585 0
 3124              		.cfi_startproc
 3125              		@ args = 0, pretend = 0, frame = 0
 3126              		@ frame_needed = 0, uses_anonymous_args = 0
 3127              		@ link register save eliminated.
 3128              	.LVL274:
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3129              		.loc 1 2586 0
 3130 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3131 0004 012B     		cmp	r3, #1
 3132 0006 15D0     		beq	.L208
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 126


2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3133              		.loc 1 2586 0 is_stmt 0 discriminator 2
 3134 0008 0123     		movs	r3, #1
 3135 000a 80F87030 		strb	r3, [r0, #112]
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3136              		.loc 1 2587 0 is_stmt 1 discriminator 2
 3137 000e 2423     		movs	r3, #36
 3138 0010 4367     		str	r3, [r0, #116]
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3139              		.loc 1 2590 0 discriminator 2
 3140 0012 0268     		ldr	r2, [r0]
 3141 0014 1368     		ldr	r3, [r2]
 3142 0016 23F00C03 		bic	r3, r3, #12
 3143 001a 1360     		str	r3, [r2]
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3144              		.loc 1 2593 0 discriminator 2
 3145 001c 0268     		ldr	r2, [r0]
 3146 001e 1368     		ldr	r3, [r2]
 3147 0020 43F00403 		orr	r3, r3, #4
 3148 0024 1360     		str	r3, [r2]
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3149              		.loc 1 2595 0 discriminator 2
 3150 0026 2023     		movs	r3, #32
 3151 0028 4367     		str	r3, [r0, #116]
2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3152              		.loc 1 2597 0 discriminator 2
 3153 002a 0023     		movs	r3, #0
 3154 002c 80F87030 		strb	r3, [r0, #112]
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3155              		.loc 1 2599 0 discriminator 2
 3156 0030 1846     		mov	r0, r3
 3157              	.LVL275:
 3158 0032 7047     		bx	lr
 3159              	.LVL276:
 3160              	.L208:
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 3161              		.loc 1 2586 0
 3162 0034 0220     		movs	r0, #2
 3163              	.LVL277:
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3164              		.loc 1 2600 0
 3165 0036 7047     		bx	lr
 3166              		.cfi_endproc
 3167              	.LFE161:
 3169              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 3170              		.align	2
 3171              		.global	HAL_LIN_SendBreak
 3172              		.thumb
 3173              		.thumb_func
 3175              	HAL_LIN_SendBreak:
 3176              	.LFB162:
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the parameters */
 3177              		.loc 1 2609 0
 3178              		.cfi_startproc
 3179              		@ args = 0, pretend = 0, frame = 0
 3180              		@ frame_needed = 0, uses_anonymous_args = 0
 3181              		@ link register save eliminated.
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 127


 3182              	.LVL278:
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3183              		.loc 1 2613 0
 3184 0000 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3185 0004 012B     		cmp	r3, #1
 3186 0006 10D0     		beq	.L211
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3187              		.loc 1 2613 0 is_stmt 0 discriminator 2
 3188 0008 0123     		movs	r3, #1
 3189 000a 80F87030 		strb	r3, [r0, #112]
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3190              		.loc 1 2615 0 is_stmt 1 discriminator 2
 3191 000e 2423     		movs	r3, #36
 3192 0010 4367     		str	r3, [r0, #116]
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3193              		.loc 1 2618 0 discriminator 2
 3194 0012 0268     		ldr	r2, [r0]
 3195 0014 9369     		ldr	r3, [r2, #24]
 3196 0016 43F00203 		orr	r3, r3, #2
 3197 001a 9361     		str	r3, [r2, #24]
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3198              		.loc 1 2620 0 discriminator 2
 3199 001c 2023     		movs	r3, #32
 3200 001e 4367     		str	r3, [r0, #116]
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3201              		.loc 1 2622 0 discriminator 2
 3202 0020 0023     		movs	r3, #0
 3203 0022 80F87030 		strb	r3, [r0, #112]
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3204              		.loc 1 2624 0 discriminator 2
 3205 0026 1846     		mov	r0, r3
 3206              	.LVL279:
 3207 0028 7047     		bx	lr
 3208              	.LVL280:
 3209              	.L211:
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3210              		.loc 1 2613 0
 3211 002a 0220     		movs	r0, #2
 3212              	.LVL281:
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3213              		.loc 1 2625 0
 3214 002c 7047     		bx	lr
 3215              		.cfi_endproc
 3216              	.LFE162:
 3218 002e 00BF     		.section	.text.HAL_UART_GetState,"ax",%progbits
 3219              		.align	2
 3220              		.global	HAL_UART_GetState
 3221              		.thumb
 3222              		.thumb_func
 3224              	HAL_UART_GetState:
 3225              	.LFB163:
2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t temp1;
 3226              		.loc 1 2654 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              		@ link register save eliminated.
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 128


 3231              	.LVL282:
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   temp2 = huart->RxState;
 3232              		.loc 1 2657 0
 3233 0000 426F     		ldr	r2, [r0, #116]
 3234              	.LVL283:
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3235              		.loc 1 2658 0
 3236 0002 806F     		ldr	r0, [r0, #120]
 3237              	.LVL284:
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3238              		.loc 1 2661 0
 3239 0004 1043     		orrs	r0, r0, r2
 3240              	.LVL285:
 3241 0006 7047     		bx	lr
 3242              		.cfi_endproc
 3243              	.LFE163:
 3245              		.section	.text.HAL_UART_GetError,"ax",%progbits
 3246              		.align	2
 3247              		.global	HAL_UART_GetError
 3248              		.thumb
 3249              		.thumb_func
 3251              	HAL_UART_GetError:
 3252              	.LFB164:
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   return huart->ErrorCode;
 3253              		.loc 1 2670 0
 3254              		.cfi_startproc
 3255              		@ args = 0, pretend = 0, frame = 0
 3256              		@ frame_needed = 0, uses_anonymous_args = 0
 3257              		@ link register save eliminated.
 3258              	.LVL286:
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3259              		.loc 1 2671 0
 3260 0000 C06F     		ldr	r0, [r0, #124]
 3261              	.LVL287:
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** /**
 3262              		.loc 1 2672 0
 3263 0002 7047     		bx	lr
 3264              		.cfi_endproc
 3265              	.LFE164:
 3267              		.section	.text.UART_SetConfig,"ax",%progbits
 3268              		.align	2
 3269              		.global	UART_SetConfig
 3270              		.thumb
 3271              		.thumb_func
 3273              	UART_SetConfig:
 3274              	.LFB165:
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tmpreg;
 3275              		.loc 1 2713 0
 3276              		.cfi_startproc
 3277              		@ args = 0, pretend = 0, frame = 0
 3278              		@ frame_needed = 0, uses_anonymous_args = 0
 3279              	.LVL288:
 3280 0000 10B5     		push	{r4, lr}
 3281              	.LCFI29:
 3282              		.cfi_def_cfa_offset 8
 3283              		.cfi_offset 4, -8
 3284              		.cfi_offset 14, -4
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 129


 3285 0002 0446     		mov	r4, r0
 3286              	.LVL289:
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 3287              		.loc 1 2739 0
 3288 0004 8268     		ldr	r2, [r0, #8]
 3289 0006 0369     		ldr	r3, [r0, #16]
 3290 0008 1A43     		orrs	r2, r2, r3
 3291 000a 4369     		ldr	r3, [r0, #20]
 3292 000c 1A43     		orrs	r2, r2, r3
 3293 000e C369     		ldr	r3, [r0, #28]
 3294 0010 1A43     		orrs	r2, r2, r3
 3295              	.LVL290:
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3296              		.loc 1 2740 0
 3297 0012 0168     		ldr	r1, [r0]
 3298 0014 0868     		ldr	r0, [r1]
 3299              	.LVL291:
 3300 0016 6C4B     		ldr	r3, .L246
 3301 0018 0340     		ands	r3, r3, r0
 3302 001a 1343     		orrs	r3, r3, r2
 3303 001c 0B60     		str	r3, [r1]
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3304              		.loc 1 2745 0
 3305 001e 2168     		ldr	r1, [r4]
 3306 0020 4B68     		ldr	r3, [r1, #4]
 3307 0022 23F44052 		bic	r2, r3, #12288
 3308              	.LVL292:
 3309 0026 E368     		ldr	r3, [r4, #12]
 3310 0028 1343     		orrs	r3, r3, r2
 3311 002a 4B60     		str	r3, [r1, #4]
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3312              		.loc 1 2753 0
 3313 002c A269     		ldr	r2, [r4, #24]
 3314              	.LVL293:
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 3315              		.loc 1 2755 0
 3316 002e 236A     		ldr	r3, [r4, #32]
 3317 0030 1A43     		orrs	r2, r2, r3
 3318              	.LVL294:
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3319              		.loc 1 2756 0
 3320 0032 2168     		ldr	r1, [r4]
 3321 0034 8B68     		ldr	r3, [r1, #8]
 3322 0036 23F43063 		bic	r3, r3, #2816
 3323 003a 1343     		orrs	r3, r3, r2
 3324 003c 8B60     		str	r3, [r1, #8]
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3325              		.loc 1 2760 0
 3326 003e 2368     		ldr	r3, [r4]
 3327 0040 624A     		ldr	r2, .L246+4
 3328              	.LVL295:
 3329 0042 9342     		cmp	r3, r2
 3330 0044 11D1     		bne	.L215
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3331              		.loc 1 2760 0 is_stmt 0 discriminator 1
 3332 0046 624B     		ldr	r3, .L246+8
 3333 0048 1B6B     		ldr	r3, [r3, #48]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 130


 3334 004a 03F00303 		and	r3, r3, #3
 3335 004e 032B     		cmp	r3, #3
 3336 0050 09D8     		bhi	.L216
 3337 0052 DFE803F0 		tbb	[pc, r3]
 3338              	.L218:
 3339 0056 02       		.byte	(.L217-.L218)/2
 3340 0057 04       		.byte	(.L219-.L218)/2
 3341 0058 06       		.byte	(.L220-.L218)/2
 3342 0059 13       		.byte	(.L238-.L218)/2
 3343              		.p2align 1
 3344              	.L217:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3345              		.loc 1 2760 0
 3346 005a 0023     		movs	r3, #0
 3347 005c 13E0     		b	.L221
 3348              	.L219:
 3349              	.LVL296:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3350              		.loc 1 2760 0 discriminator 5
 3351 005e 0423     		movs	r3, #4
 3352 0060 11E0     		b	.L221
 3353              	.LVL297:
 3354              	.L220:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3355              		.loc 1 2760 0 discriminator 6
 3356 0062 0823     		movs	r3, #8
 3357 0064 0FE0     		b	.L221
 3358              	.LVL298:
 3359              	.L216:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3360              		.loc 1 2760 0 discriminator 3
 3361 0066 1023     		movs	r3, #16
 3362 0068 0DE0     		b	.L221
 3363              	.LVL299:
 3364              	.L215:
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3365              		.loc 1 2760 0 discriminator 2
 3366 006a 5A4A     		ldr	r2, .L246+12
 3367 006c 9342     		cmp	r3, r2
 3368 006e 07D0     		beq	.L239
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3369              		.loc 1 2760 0 discriminator 9
 3370 0070 02F58062 		add	r2, r2, #1024
 3371 0074 9342     		cmp	r3, r2
 3372 0076 05D1     		bne	.L240
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3373              		.loc 1 2760 0
 3374 0078 0023     		movs	r3, #0
 3375 007a 04E0     		b	.L221
 3376              	.L238:
 3377 007c 0223     		movs	r3, #2
 3378 007e 02E0     		b	.L221
 3379              	.L239:
 3380 0080 0023     		movs	r3, #0
 3381 0082 00E0     		b	.L221
 3382              	.L240:
 3383 0084 1023     		movs	r3, #16
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 131


 3384              	.L221:
 3385              	.LVL300:
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3386              		.loc 1 2762 0 is_stmt 1
 3387 0086 E269     		ldr	r2, [r4, #28]
 3388 0088 B2F5004F 		cmp	r2, #32768
 3389 008c 4ED1     		bne	.L222
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3390              		.loc 1 2764 0
 3391 008e 082B     		cmp	r3, #8
 3392 0090 3BD8     		bhi	.L241
 3393 0092 DFE803F0 		tbb	[pc, r3]
 3394              	.L225:
 3395 0096 05       		.byte	(.L224-.L225)/2
 3396 0097 10       		.byte	(.L226-.L225)/2
 3397 0098 1B       		.byte	(.L227-.L225)/2
 3398 0099 3A       		.byte	(.L241-.L225)/2
 3399 009a 26       		.byte	(.L228-.L225)/2
 3400 009b 3A       		.byte	(.L241-.L225)/2
 3401 009c 3A       		.byte	(.L241-.L225)/2
 3402 009d 3A       		.byte	(.L241-.L225)/2
 3403 009e 31       		.byte	(.L229-.L225)/2
 3404 009f 00       		.p2align 1
 3405              	.L224:
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 3406              		.loc 1 2767 0
 3407 00a0 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3408              	.LVL301:
2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3409              		.loc 1 2768 0
 3410 00a4 6368     		ldr	r3, [r4, #4]
 3411 00a6 5A08     		lsrs	r2, r3, #1
 3412 00a8 02EB4000 		add	r0, r2, r0, lsl #1
 3413              	.LVL302:
 3414 00ac B0FBF3F3 		udiv	r3, r0, r3
 3415 00b0 9BB2     		uxth	r3, r3
 3416              	.LVL303:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3417              		.loc 1 2718 0
 3418 00b2 0020     		movs	r0, #0
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 3419              		.loc 1 2769 0
 3420 00b4 2BE0     		b	.L223
 3421              	.LVL304:
 3422              	.L226:
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 3423              		.loc 1 2771 0
 3424 00b6 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3425              	.LVL305:
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3426              		.loc 1 2772 0
 3427 00ba 6368     		ldr	r3, [r4, #4]
 3428 00bc 5A08     		lsrs	r2, r3, #1
 3429 00be 02EB4000 		add	r0, r2, r0, lsl #1
 3430              	.LVL306:
 3431 00c2 B0FBF3F3 		udiv	r3, r0, r3
 3432 00c6 9BB2     		uxth	r3, r3
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 132


 3433              	.LVL307:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3434              		.loc 1 2718 0
 3435 00c8 0020     		movs	r0, #0
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3436              		.loc 1 2773 0
 3437 00ca 20E0     		b	.L223
 3438              	.LVL308:
 3439              	.L227:
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3440              		.loc 1 2775 0
 3441 00cc 6168     		ldr	r1, [r4, #4]
 3442 00ce 4A08     		lsrs	r2, r1, #1
 3443 00d0 02F57403 		add	r3, r2, #15990784
 3444              	.LVL309:
 3445 00d4 03F51053 		add	r3, r3, #9216
 3446 00d8 B3FBF1F3 		udiv	r3, r3, r1
 3447 00dc 9BB2     		uxth	r3, r3
 3448              	.LVL310:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3449              		.loc 1 2718 0
 3450 00de 0020     		movs	r0, #0
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3451              		.loc 1 2776 0
 3452 00e0 15E0     		b	.L223
 3453              	.LVL311:
 3454              	.L228:
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate));
 3455              		.loc 1 2778 0
 3456 00e2 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3457              	.LVL312:
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3458              		.loc 1 2779 0
 3459 00e6 6368     		ldr	r3, [r4, #4]
 3460 00e8 5A08     		lsrs	r2, r3, #1
 3461 00ea 02EB4000 		add	r0, r2, r0, lsl #1
 3462              	.LVL313:
 3463 00ee B0FBF3F3 		udiv	r3, r0, r3
 3464 00f2 9BB2     		uxth	r3, r3
 3465              	.LVL314:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3466              		.loc 1 2718 0
 3467 00f4 0020     		movs	r0, #0
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3468              		.loc 1 2780 0
 3469 00f6 0AE0     		b	.L223
 3470              	.LVL315:
 3471              	.L229:
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3472              		.loc 1 2782 0
 3473 00f8 6268     		ldr	r2, [r4, #4]
 3474 00fa 5308     		lsrs	r3, r2, #1
 3475              	.LVL316:
 3476 00fc 03F58033 		add	r3, r3, #65536
 3477 0100 B3FBF2F3 		udiv	r3, r3, r2
 3478 0104 9BB2     		uxth	r3, r3
 3479              	.LVL317:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 133


2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3480              		.loc 1 2718 0
 3481 0106 0020     		movs	r0, #0
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
 3482              		.loc 1 2783 0
 3483 0108 01E0     		b	.L223
 3484              	.LVL318:
 3485              	.L241:
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3486              		.loc 1 2785 0
 3487 010a 0120     		movs	r0, #1
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3488              		.loc 1 2717 0
 3489 010c 0023     		movs	r3, #0
 3490              	.LVL319:
 3491              	.L223:
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3492              		.loc 1 2790 0
 3493 010e A3F11001 		sub	r1, r3, #16
 3494 0112 4FF6EF72 		movw	r2, #65519
 3495 0116 9142     		cmp	r1, r2
 3496 0118 4ED8     		bhi	.L242
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 3497              		.loc 1 2792 0
 3498 011a 9AB2     		uxth	r2, r3
 3499 011c 22F00F02 		bic	r2, r2, #15
 3500              	.LVL320:
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 3501              		.loc 1 2793 0
 3502 0120 C3F34203 		ubfx	r3, r3, #1, #3
 3503              	.LVL321:
 3504 0124 1343     		orrs	r3, r3, r2
 3505              	.LVL322:
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3506              		.loc 1 2794 0
 3507 0126 2268     		ldr	r2, [r4]
 3508 0128 D360     		str	r3, [r2, #12]
 3509 012a 48E0     		b	.L230
 3510              	.LVL323:
 3511              	.L222:
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3512              		.loc 1 2803 0
 3513 012c 082B     		cmp	r3, #8
 3514 012e 38D8     		bhi	.L243
 3515 0130 DFE803F0 		tbb	[pc, r3]
 3516              	.L233:
 3517 0134 05       		.byte	(.L232-.L233)/2
 3518 0135 0F       		.byte	(.L234-.L233)/2
 3519 0136 19       		.byte	(.L235-.L233)/2
 3520 0137 37       		.byte	(.L243-.L233)/2
 3521 0138 24       		.byte	(.L236-.L233)/2
 3522 0139 37       		.byte	(.L243-.L233)/2
 3523 013a 37       		.byte	(.L243-.L233)/2
 3524 013b 37       		.byte	(.L243-.L233)/2
 3525 013c 2E       		.byte	(.L237-.L233)/2
 3526 013d 00       		.p2align 1
 3527              	.L232:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 134


2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 3528              		.loc 1 2806 0
 3529 013e FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 3530              	.LVL324:
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3531              		.loc 1 2807 0
 3532 0142 6368     		ldr	r3, [r4, #4]
 3533 0144 00EB5300 		add	r0, r0, r3, lsr #1
 3534              	.LVL325:
 3535 0148 B0FBF3F3 		udiv	r3, r0, r3
 3536 014c 9BB2     		uxth	r3, r3
 3537              	.LVL326:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3538              		.loc 1 2718 0
 3539 014e 0020     		movs	r0, #0
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
 3540              		.loc 1 2808 0
 3541 0150 29E0     		b	.L231
 3542              	.LVL327:
 3543              	.L234:
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 3544              		.loc 1 2810 0
 3545 0152 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 3546              	.LVL328:
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3547              		.loc 1 2811 0
 3548 0156 6368     		ldr	r3, [r4, #4]
 3549 0158 00EB5300 		add	r0, r0, r3, lsr #1
 3550              	.LVL329:
 3551 015c B0FBF3F3 		udiv	r3, r0, r3
 3552 0160 9BB2     		uxth	r3, r3
 3553              	.LVL330:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3554              		.loc 1 2718 0
 3555 0162 0020     		movs	r0, #0
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
 3556              		.loc 1 2812 0
 3557 0164 1FE0     		b	.L231
 3558              	.LVL331:
 3559              	.L235:
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3560              		.loc 1 2814 0
 3561 0166 6168     		ldr	r1, [r4, #4]
 3562 0168 4A08     		lsrs	r2, r1, #1
 3563 016a 02F5F403 		add	r3, r2, #7995392
 3564              	.LVL332:
 3565 016e 03F59053 		add	r3, r3, #4608
 3566 0172 B3FBF1F3 		udiv	r3, r3, r1
 3567 0176 9BB2     		uxth	r3, r3
 3568              	.LVL333:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3569              		.loc 1 2718 0
 3570 0178 0020     		movs	r0, #0
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
 3571              		.loc 1 2815 0
 3572 017a 14E0     		b	.L231
 3573              	.LVL334:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 135


 3574              	.L236:
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate));
 3575              		.loc 1 2817 0
 3576 017c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 3577              	.LVL335:
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3578              		.loc 1 2818 0
 3579 0180 6368     		ldr	r3, [r4, #4]
 3580 0182 00EB5300 		add	r0, r0, r3, lsr #1
 3581              	.LVL336:
 3582 0186 B0FBF3F3 		udiv	r3, r0, r3
 3583 018a 9BB2     		uxth	r3, r3
 3584              	.LVL337:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3585              		.loc 1 2718 0
 3586 018c 0020     		movs	r0, #0
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
 3587              		.loc 1 2819 0
 3588 018e 0AE0     		b	.L231
 3589              	.LVL338:
 3590              	.L237:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3591              		.loc 1 2821 0
 3592 0190 6268     		ldr	r2, [r4, #4]
 3593 0192 5308     		lsrs	r3, r2, #1
 3594              	.LVL339:
 3595 0194 03F50043 		add	r3, r3, #32768
 3596 0198 B3FBF2F3 		udiv	r3, r3, r2
 3597 019c 9BB2     		uxth	r3, r3
 3598              	.LVL340:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t pclk;
 3599              		.loc 1 2718 0
 3600 019e 0020     		movs	r0, #0
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       default:
 3601              		.loc 1 2822 0
 3602 01a0 01E0     		b	.L231
 3603              	.LVL341:
 3604              	.L243:
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         break;
 3605              		.loc 1 2824 0
 3606 01a2 0120     		movs	r0, #1
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 3607              		.loc 1 2717 0
 3608 01a4 0023     		movs	r3, #0
 3609              	.LVL342:
 3610              	.L231:
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3611              		.loc 1 2829 0
 3612 01a6 A3F11001 		sub	r1, r3, #16
 3613 01aa 4FF6EF72 		movw	r2, #65519
 3614 01ae 9142     		cmp	r1, r2
 3615 01b0 04D8     		bhi	.L244
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3616              		.loc 1 2831 0
 3617 01b2 2268     		ldr	r2, [r4]
 3618 01b4 D360     		str	r3, [r2, #12]
 3619 01b6 02E0     		b	.L230
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 136


 3620              	.L242:
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3621              		.loc 1 2798 0
 3622 01b8 0120     		movs	r0, #1
 3623              	.LVL343:
 3624 01ba 00E0     		b	.L230
 3625              	.LVL344:
 3626              	.L244:
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3627              		.loc 1 2835 0
 3628 01bc 0120     		movs	r0, #1
 3629              	.LVL345:
 3630              	.L230:
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->TxISR = NULL;
 3631              		.loc 1 2841 0
 3632 01be 0023     		movs	r3, #0
 3633 01c0 2366     		str	r3, [r4, #96]
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3634              		.loc 1 2842 0
 3635 01c2 6366     		str	r3, [r4, #100]
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3636              		.loc 1 2845 0
 3637 01c4 10BD     		pop	{r4, pc}
 3638              	.LVL346:
 3639              	.L247:
 3640 01c6 00BF     		.align	2
 3641              	.L246:
 3642 01c8 F369FFEF 		.word	-268473869
 3643 01cc 00380140 		.word	1073821696
 3644 01d0 00100240 		.word	1073876992
 3645 01d4 00440040 		.word	1073759232
 3646              		.cfi_endproc
 3647              	.LFE165:
 3649              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 3650              		.align	2
 3651              		.global	UART_AdvFeatureConfig
 3652              		.thumb
 3653              		.thumb_func
 3655              	UART_AdvFeatureConfig:
 3656              	.LFB166:
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
 3657              		.loc 1 2853 0
 3658              		.cfi_startproc
 3659              		@ args = 0, pretend = 0, frame = 0
 3660              		@ frame_needed = 0, uses_anonymous_args = 0
 3661              		@ link register save eliminated.
 3662              	.LVL347:
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3663              		.loc 1 2858 0
 3664 0000 436A     		ldr	r3, [r0, #36]
 3665 0002 13F0010F 		tst	r3, #1
 3666 0006 06D0     		beq	.L249
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3667              		.loc 1 2861 0
 3668 0008 0168     		ldr	r1, [r0]
 3669 000a 4B68     		ldr	r3, [r1, #4]
 3670 000c 23F40032 		bic	r2, r3, #131072
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 137


 3671 0010 836A     		ldr	r3, [r0, #40]
 3672 0012 1343     		orrs	r3, r3, r2
 3673 0014 4B60     		str	r3, [r1, #4]
 3674              	.L249:
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3675              		.loc 1 2865 0
 3676 0016 436A     		ldr	r3, [r0, #36]
 3677 0018 13F0020F 		tst	r3, #2
 3678 001c 06D0     		beq	.L250
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3679              		.loc 1 2868 0
 3680 001e 0168     		ldr	r1, [r0]
 3681 0020 4B68     		ldr	r3, [r1, #4]
 3682 0022 23F48032 		bic	r2, r3, #65536
 3683 0026 C36A     		ldr	r3, [r0, #44]
 3684 0028 1343     		orrs	r3, r3, r2
 3685 002a 4B60     		str	r3, [r1, #4]
 3686              	.L250:
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3687              		.loc 1 2872 0
 3688 002c 436A     		ldr	r3, [r0, #36]
 3689 002e 13F0040F 		tst	r3, #4
 3690 0032 06D0     		beq	.L251
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3691              		.loc 1 2875 0
 3692 0034 0168     		ldr	r1, [r0]
 3693 0036 4B68     		ldr	r3, [r1, #4]
 3694 0038 23F48022 		bic	r2, r3, #262144
 3695 003c 036B     		ldr	r3, [r0, #48]
 3696 003e 1343     		orrs	r3, r3, r2
 3697 0040 4B60     		str	r3, [r1, #4]
 3698              	.L251:
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3699              		.loc 1 2879 0
 3700 0042 436A     		ldr	r3, [r0, #36]
 3701 0044 13F0080F 		tst	r3, #8
 3702 0048 06D0     		beq	.L252
2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3703              		.loc 1 2882 0
 3704 004a 0168     		ldr	r1, [r0]
 3705 004c 4B68     		ldr	r3, [r1, #4]
 3706 004e 23F40042 		bic	r2, r3, #32768
 3707 0052 436B     		ldr	r3, [r0, #52]
 3708 0054 1343     		orrs	r3, r3, r2
 3709 0056 4B60     		str	r3, [r1, #4]
 3710              	.L252:
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3711              		.loc 1 2886 0
 3712 0058 436A     		ldr	r3, [r0, #36]
 3713 005a 13F0100F 		tst	r3, #16
 3714 005e 06D0     		beq	.L253
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3715              		.loc 1 2889 0
 3716 0060 0168     		ldr	r1, [r0]
 3717 0062 8B68     		ldr	r3, [r1, #8]
 3718 0064 23F48052 		bic	r2, r3, #4096
 3719 0068 836B     		ldr	r3, [r0, #56]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 138


 3720 006a 1343     		orrs	r3, r3, r2
 3721 006c 8B60     		str	r3, [r1, #8]
 3722              	.L253:
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3723              		.loc 1 2893 0
 3724 006e 436A     		ldr	r3, [r0, #36]
 3725 0070 13F0200F 		tst	r3, #32
 3726 0074 06D0     		beq	.L254
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3727              		.loc 1 2896 0
 3728 0076 0168     		ldr	r1, [r0]
 3729 0078 8B68     		ldr	r3, [r1, #8]
 3730 007a 23F40052 		bic	r2, r3, #8192
 3731 007e C36B     		ldr	r3, [r0, #60]
 3732 0080 1343     		orrs	r3, r3, r2
 3733 0082 8B60     		str	r3, [r1, #8]
 3734              	.L254:
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3735              		.loc 1 2900 0
 3736 0084 436A     		ldr	r3, [r0, #36]
 3737 0086 13F0400F 		tst	r3, #64
 3738 008a 11D0     		beq	.L255
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
 3739              		.loc 1 2904 0
 3740 008c 0168     		ldr	r1, [r0]
 3741 008e 4B68     		ldr	r3, [r1, #4]
 3742 0090 23F48012 		bic	r2, r3, #1048576
 3743 0094 036C     		ldr	r3, [r0, #64]
 3744 0096 1343     		orrs	r3, r3, r2
 3745 0098 4B60     		str	r3, [r1, #4]
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3746              		.loc 1 2906 0
 3747 009a 036C     		ldr	r3, [r0, #64]
 3748 009c B3F5801F 		cmp	r3, #1048576
 3749 00a0 06D1     		bne	.L255
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3750              		.loc 1 2909 0
 3751 00a2 0168     		ldr	r1, [r0]
 3752 00a4 4B68     		ldr	r3, [r1, #4]
 3753 00a6 23F4C002 		bic	r2, r3, #6291456
 3754 00aa 436C     		ldr	r3, [r0, #68]
 3755 00ac 1343     		orrs	r3, r3, r2
 3756 00ae 4B60     		str	r3, [r1, #4]
 3757              	.L255:
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3758              		.loc 1 2914 0
 3759 00b0 436A     		ldr	r3, [r0, #36]
 3760 00b2 13F0800F 		tst	r3, #128
 3761 00b6 06D0     		beq	.L248
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 3762              		.loc 1 2917 0
 3763 00b8 0168     		ldr	r1, [r0]
 3764 00ba 4B68     		ldr	r3, [r1, #4]
 3765 00bc 23F40022 		bic	r2, r3, #524288
 3766 00c0 836C     		ldr	r3, [r0, #72]
 3767 00c2 1343     		orrs	r3, r3, r2
 3768 00c4 4B60     		str	r3, [r1, #4]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 139


 3769              	.L248:
 3770 00c6 7047     		bx	lr
 3771              		.cfi_endproc
 3772              	.LFE166:
 3774              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 3775              		.align	2
 3776              		.global	UART_WaitOnFlagUntilTimeout
 3777              		.thumb
 3778              		.thumb_func
 3780              	UART_WaitOnFlagUntilTimeout:
 3781              	.LFB168:
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Wait until flag is set */
 3782              		.loc 1 2978 0
 3783              		.cfi_startproc
 3784              		@ args = 4, pretend = 0, frame = 0
 3785              		@ frame_needed = 0, uses_anonymous_args = 0
 3786              	.LVL348:
 3787 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3788              	.LCFI30:
 3789              		.cfi_def_cfa_offset 24
 3790              		.cfi_offset 4, -24
 3791              		.cfi_offset 5, -20
 3792              		.cfi_offset 6, -16
 3793              		.cfi_offset 7, -12
 3794              		.cfi_offset 8, -8
 3795              		.cfi_offset 14, -4
 3796 0004 0446     		mov	r4, r0
 3797 0006 0F46     		mov	r7, r1
 3798 0008 1646     		mov	r6, r2
 3799 000a 9846     		mov	r8, r3
 3800 000c 069D     		ldr	r5, [sp, #24]
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3801              		.loc 1 2980 0
 3802 000e 3CE0     		b	.L259
 3803              	.LVL349:
 3804              	.L263:
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3805              		.loc 1 2983 0
 3806 0010 B5F1FF3F 		cmp	r5, #-1
 3807 0014 39D0     		beq	.L259
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3808              		.loc 1 2985 0
 3809 0016 FFF7FEFF 		bl	HAL_GetTick
 3810              	.LVL350:
 3811 001a C8EB0000 		rsb	r0, r8, r0
 3812 001e 8542     		cmp	r5, r0
 3813 0020 00D3     		bcc	.L260
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3814              		.loc 1 2985 0 is_stmt 0 discriminator 1
 3815 0022 95B9     		cbnz	r5, .L261
 3816              	.L260:
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3817              		.loc 1 2988 0 is_stmt 1
 3818 0024 2268     		ldr	r2, [r4]
 3819 0026 1368     		ldr	r3, [r2]
 3820 0028 23F4D073 		bic	r3, r3, #416
 3821 002c 1360     		str	r3, [r2]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 140


2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3822              		.loc 1 2989 0
 3823 002e 2268     		ldr	r2, [r4]
 3824 0030 9368     		ldr	r3, [r2, #8]
 3825 0032 23F00103 		bic	r3, r3, #1
 3826 0036 9360     		str	r3, [r2, #8]
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 3827              		.loc 1 2991 0
 3828 0038 2023     		movs	r3, #32
 3829 003a 6367     		str	r3, [r4, #116]
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3830              		.loc 1 2992 0
 3831 003c A367     		str	r3, [r4, #120]
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3832              		.loc 1 2994 0
 3833 003e 0023     		movs	r3, #0
 3834 0040 84F87030 		strb	r3, [r4, #112]
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 3835              		.loc 1 2996 0
 3836 0044 0320     		movs	r0, #3
 3837 0046 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3838              	.LVL351:
 3839              	.L261:
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3840              		.loc 1 2999 0
 3841 004a 2368     		ldr	r3, [r4]
 3842 004c 1A68     		ldr	r2, [r3]
 3843 004e 12F0040F 		tst	r2, #4
 3844 0052 1AD0     		beq	.L259
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         {
 3845              		.loc 1 3001 0
 3846 0054 DA69     		ldr	r2, [r3, #28]
 3847 0056 12F4006F 		tst	r2, #2048
 3848 005a 16D0     		beq	.L259
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
 3849              		.loc 1 3004 0
 3850 005c 4FF40062 		mov	r2, #2048
 3851 0060 1A62     		str	r2, [r3, #32]
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3852              		.loc 1 3007 0
 3853 0062 2268     		ldr	r2, [r4]
 3854 0064 1368     		ldr	r3, [r2]
 3855 0066 23F4D073 		bic	r3, r3, #416
 3856 006a 1360     		str	r3, [r2]
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3857              		.loc 1 3008 0
 3858 006c 2268     		ldr	r2, [r4]
 3859 006e 9368     		ldr	r3, [r2, #8]
 3860 0070 23F00103 		bic	r3, r3, #1
 3861 0074 9360     		str	r3, [r2, #8]
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 3862              		.loc 1 3010 0
 3863 0076 2023     		movs	r3, #32
 3864 0078 6367     		str	r3, [r4, #116]
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_RTO;
 3865              		.loc 1 3011 0
 3866 007a A367     		str	r3, [r4, #120]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 141


3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
 3867              		.loc 1 3012 0
 3868 007c E367     		str	r3, [r4, #124]
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****           
 3869              		.loc 1 3015 0
 3870 007e 0023     		movs	r3, #0
 3871 0080 84F87030 		strb	r3, [r4, #112]
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         }
 3872              		.loc 1 3017 0
 3873 0084 0320     		movs	r0, #3
 3874 0086 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3875              	.LVL352:
 3876              	.L259:
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3877              		.loc 1 2980 0
 3878 008a 2368     		ldr	r3, [r4]
 3879 008c DB69     		ldr	r3, [r3, #28]
 3880 008e 37EA0303 		bics	r3, r7, r3
 3881 0092 0CBF     		ite	eq
 3882 0094 0123     		moveq	r3, #1
 3883 0096 0023     		movne	r3, #0
 3884 0098 B342     		cmp	r3, r6
 3885 009a B9D0     		beq	.L263
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 3886              		.loc 1 3022 0
 3887 009c 0020     		movs	r0, #0
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3888              		.loc 1 3023 0
 3889 009e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3890              		.cfi_endproc
 3891              	.LFE168:
 3893 00a2 00BF     		.section	.text.HAL_UART_Transmit,"ax",%progbits
 3894              		.align	2
 3895              		.global	HAL_UART_Transmit
 3896              		.thumb
 3897              		.thumb_func
 3899              	HAL_UART_Transmit:
 3900              	.LFB130:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
 3901              		.loc 1 1005 0
 3902              		.cfi_startproc
 3903              		@ args = 0, pretend = 0, frame = 0
 3904              		@ frame_needed = 0, uses_anonymous_args = 0
 3905              	.LVL353:
 3906 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3907              	.LCFI31:
 3908              		.cfi_def_cfa_offset 24
 3909              		.cfi_offset 4, -24
 3910              		.cfi_offset 5, -20
 3911              		.cfi_offset 6, -16
 3912              		.cfi_offset 7, -12
 3913              		.cfi_offset 8, -8
 3914              		.cfi_offset 14, -4
 3915 0004 82B0     		sub	sp, sp, #8
 3916              	.LCFI32:
 3917              		.cfi_def_cfa_offset 32
 3918 0006 1E46     		mov	r6, r3
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 142


1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 3919              		.loc 1 1011 0
 3920 0008 436F     		ldr	r3, [r0, #116]
 3921              	.LVL354:
 3922 000a 202B     		cmp	r3, #32
 3923 000c 56D1     		bne	.L272
 3924 000e 0446     		mov	r4, r0
 3925 0010 0D46     		mov	r5, r1
 3926 0012 9046     		mov	r8, r2
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3927              		.loc 1 1013 0
 3928 0014 0029     		cmp	r1, #0
 3929 0016 53D0     		beq	.L273
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3930              		.loc 1 1013 0 is_stmt 0 discriminator 1
 3931 0018 002A     		cmp	r2, #0
 3932 001a 53D0     		beq	.L274
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3933              		.loc 1 1018 0 is_stmt 1
 3934 001c 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 3935 0020 012B     		cmp	r3, #1
 3936 0022 51D0     		beq	.L275
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3937              		.loc 1 1018 0 is_stmt 0 discriminator 2
 3938 0024 0123     		movs	r3, #1
 3939 0026 80F87030 		strb	r3, [r0, #112]
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 3940              		.loc 1 1020 0 is_stmt 1 discriminator 2
 3941 002a 0023     		movs	r3, #0
 3942 002c C367     		str	r3, [r0, #124]
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3943              		.loc 1 1021 0 discriminator 2
 3944 002e 2123     		movs	r3, #33
 3945 0030 4367     		str	r3, [r0, #116]
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3946              		.loc 1 1024 0 discriminator 2
 3947 0032 FFF7FEFF 		bl	HAL_GetTick
 3948              	.LVL355:
 3949 0036 0746     		mov	r7, r0
 3950              	.LVL356:
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->TxXferCount = Size;
 3951              		.loc 1 1026 0 discriminator 2
 3952 0038 A4F85080 		strh	r8, [r4, #80]	@ movhi
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 3953              		.loc 1 1027 0 discriminator 2
 3954 003c A4F85280 		strh	r8, [r4, #82]	@ movhi
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3955              		.loc 1 1030 0 discriminator 2
 3956 0040 A368     		ldr	r3, [r4, #8]
 3957 0042 B3F5805F 		cmp	r3, #4096
 3958 0046 04D1     		bne	.L276
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 3959              		.loc 1 1030 0 is_stmt 0 discriminator 1
 3960 0048 2369     		ldr	r3, [r4, #16]
 3961 004a 2BB1     		cbz	r3, .L277
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3962              		.loc 1 1038 0 is_stmt 1
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 143


 3963 004c 4FF00008 		mov	r8, #0
 3964 0050 20E0     		b	.L268
 3965              	.L276:
 3966 0052 4FF00008 		mov	r8, #0
 3967 0056 1DE0     		b	.L268
 3968              	.L277:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 3969              		.loc 1 1033 0
 3970 0058 A846     		mov	r8, r5
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 3971              		.loc 1 1032 0
 3972 005a 0025     		movs	r5, #0
 3973              	.LVL357:
 3974 005c 1AE0     		b	.L268
 3975              	.LVL358:
 3976              	.L271:
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3977              		.loc 1 1043 0
 3978 005e 0096     		str	r6, [sp]
 3979 0060 3B46     		mov	r3, r7
 3980 0062 0022     		movs	r2, #0
 3981 0064 8021     		movs	r1, #128
 3982 0066 2046     		mov	r0, r4
 3983 0068 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 3984              	.LVL359:
 3985 006c 70BB     		cbnz	r0, .L278
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 3986              		.loc 1 1047 0
 3987 006e 35B9     		cbnz	r5, .L269
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
 3988              		.loc 1 1049 0
 3989 0070 2268     		ldr	r2, [r4]
 3990 0072 38F8023B 		ldrh	r3, [r8], #2
 3991              	.LVL360:
 3992 0076 C3F30803 		ubfx	r3, r3, #0, #9
 3993 007a 1385     		strh	r3, [r2, #40]	@ movhi
 3994              	.LVL361:
 3995 007c 03E0     		b	.L270
 3996              	.L269:
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
 3997              		.loc 1 1054 0
 3998 007e 2368     		ldr	r3, [r4]
 3999 0080 15F8012B 		ldrb	r2, [r5], #1	@ zero_extendqisi2
 4000              	.LVL362:
 4001 0084 1A85     		strh	r2, [r3, #40]	@ movhi
 4002              	.LVL363:
 4003              	.L270:
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4004              		.loc 1 1057 0
 4005 0086 B4F85230 		ldrh	r3, [r4, #82]
 4006 008a 9BB2     		uxth	r3, r3
 4007 008c 013B     		subs	r3, r3, #1
 4008 008e 9BB2     		uxth	r3, r3
 4009 0090 A4F85230 		strh	r3, [r4, #82]	@ movhi
 4010              	.LVL364:
 4011              	.L268:
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 144


 4012              		.loc 1 1041 0
 4013 0094 B4F85230 		ldrh	r3, [r4, #82]
 4014 0098 9BB2     		uxth	r3, r3
 4015 009a 002B     		cmp	r3, #0
 4016 009c DFD1     		bne	.L271
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4017              		.loc 1 1060 0
 4018 009e 0096     		str	r6, [sp]
 4019 00a0 3B46     		mov	r3, r7
 4020 00a2 0022     		movs	r2, #0
 4021 00a4 4021     		movs	r1, #64
 4022 00a6 2046     		mov	r0, r4
 4023 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4024              	.LVL365:
 4025 00ac 0346     		mov	r3, r0
 4026 00ae 78B9     		cbnz	r0, .L279
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4027              		.loc 1 1066 0
 4028 00b0 2022     		movs	r2, #32
 4029 00b2 6267     		str	r2, [r4, #116]
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4030              		.loc 1 1068 0
 4031 00b4 0022     		movs	r2, #0
 4032 00b6 84F87020 		strb	r2, [r4, #112]
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4033              		.loc 1 1070 0
 4034 00ba 0AE0     		b	.L266
 4035              	.LVL366:
 4036              	.L272:
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4037              		.loc 1 1074 0
 4038 00bc 0223     		movs	r3, #2
 4039 00be 08E0     		b	.L266
 4040              	.L273:
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4041              		.loc 1 1015 0
 4042 00c0 0123     		movs	r3, #1
 4043 00c2 06E0     		b	.L266
 4044              	.L274:
 4045 00c4 0123     		movs	r3, #1
 4046 00c6 04E0     		b	.L266
 4047              	.L275:
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4048              		.loc 1 1018 0
 4049 00c8 0223     		movs	r3, #2
 4050 00ca 02E0     		b	.L266
 4051              	.LVL367:
 4052              	.L278:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4053              		.loc 1 1045 0
 4054 00cc 0323     		movs	r3, #3
 4055 00ce 00E0     		b	.L266
 4056              	.L279:
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4057              		.loc 1 1062 0
 4058 00d0 0323     		movs	r3, #3
 4059              	.LVL368:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 145


 4060              	.L266:
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4061              		.loc 1 1076 0
 4062 00d2 1846     		mov	r0, r3
 4063 00d4 02B0     		add	sp, sp, #8
 4064              	.LCFI33:
 4065              		.cfi_def_cfa_offset 24
 4066              		@ sp needed
 4067 00d6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4068              		.cfi_endproc
 4069              	.LFE130:
 4071 00da 00BF     		.section	.text.HAL_UART_Receive,"ax",%progbits
 4072              		.align	2
 4073              		.global	HAL_UART_Receive
 4074              		.thumb
 4075              		.thumb_func
 4077              	HAL_UART_Receive:
 4078              	.LFB131:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint8_t  *pdata8bits;
 4079              		.loc 1 1090 0
 4080              		.cfi_startproc
 4081              		@ args = 0, pretend = 0, frame = 0
 4082              		@ frame_needed = 0, uses_anonymous_args = 0
 4083              	.LVL369:
 4084 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4085              	.LCFI34:
 4086              		.cfi_def_cfa_offset 28
 4087              		.cfi_offset 4, -28
 4088              		.cfi_offset 5, -24
 4089              		.cfi_offset 6, -20
 4090              		.cfi_offset 7, -16
 4091              		.cfi_offset 8, -12
 4092              		.cfi_offset 9, -8
 4093              		.cfi_offset 14, -4
 4094 0004 83B0     		sub	sp, sp, #12
 4095              	.LCFI35:
 4096              		.cfi_def_cfa_offset 40
 4097 0006 1E46     		mov	r6, r3
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4098              		.loc 1 1097 0
 4099 0008 836F     		ldr	r3, [r0, #120]
 4100              	.LVL370:
 4101 000a 202B     		cmp	r3, #32
 4102 000c 7BD1     		bne	.L295
 4103 000e 0446     		mov	r4, r0
 4104 0010 0D46     		mov	r5, r1
 4105 0012 9046     		mov	r8, r2
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4106              		.loc 1 1099 0
 4107 0014 0029     		cmp	r1, #0
 4108 0016 78D0     		beq	.L296
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4109              		.loc 1 1099 0 is_stmt 0 discriminator 1
 4110 0018 002A     		cmp	r2, #0
 4111 001a 78D0     		beq	.L297
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4112              		.loc 1 1104 0 is_stmt 1
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 146


 4113 001c 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4114 0020 012B     		cmp	r3, #1
 4115 0022 76D0     		beq	.L298
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4116              		.loc 1 1104 0 is_stmt 0 discriminator 2
 4117 0024 0123     		movs	r3, #1
 4118 0026 80F87030 		strb	r3, [r0, #112]
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 4119              		.loc 1 1106 0 is_stmt 1 discriminator 2
 4120 002a 0023     		movs	r3, #0
 4121 002c C367     		str	r3, [r0, #124]
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4122              		.loc 1 1107 0 discriminator 2
 4123 002e 2223     		movs	r3, #34
 4124 0030 8367     		str	r3, [r0, #120]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4125              		.loc 1 1110 0 discriminator 2
 4126 0032 FFF7FEFF 		bl	HAL_GetTick
 4127              	.LVL371:
 4128 0036 0746     		mov	r7, r0
 4129              	.LVL372:
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     huart->RxXferCount = Size;
 4130              		.loc 1 1112 0 discriminator 2
 4131 0038 A4F85880 		strh	r8, [r4, #88]	@ movhi
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4132              		.loc 1 1113 0 discriminator 2
 4133 003c A4F85A80 		strh	r8, [r4, #90]	@ movhi
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4134              		.loc 1 1116 0 discriminator 2
 4135 0040 A368     		ldr	r3, [r4, #8]
 4136 0042 B3F5805F 		cmp	r3, #4096
 4137 0046 0AD1     		bne	.L283
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4138              		.loc 1 1116 0 is_stmt 0 discriminator 1
 4139 0048 2269     		ldr	r2, [r4, #16]
 4140 004a 22B9     		cbnz	r2, .L284
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4141              		.loc 1 1116 0 discriminator 3
 4142 004c 40F2FF12 		movw	r2, #511
 4143 0050 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4144 0054 1EE0     		b	.L285
 4145              	.L284:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4146              		.loc 1 1116 0 discriminator 4
 4147 0056 FF22     		movs	r2, #255
 4148 0058 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4149 005c 1AE0     		b	.L285
 4150              	.L283:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4151              		.loc 1 1116 0 discriminator 2
 4152 005e 4BB9     		cbnz	r3, .L286
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4153              		.loc 1 1116 0 discriminator 5
 4154 0060 2269     		ldr	r2, [r4, #16]
 4155 0062 1AB9     		cbnz	r2, .L287
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4156              		.loc 1 1116 0 discriminator 7
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 147


 4157 0064 FF22     		movs	r2, #255
 4158 0066 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4159 006a 13E0     		b	.L285
 4160              	.L287:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4161              		.loc 1 1116 0 discriminator 8
 4162 006c 7F22     		movs	r2, #127
 4163 006e A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4164 0072 0FE0     		b	.L285
 4165              	.L286:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4166              		.loc 1 1116 0 discriminator 6
 4167 0074 B3F1805F 		cmp	r3, #268435456
 4168 0078 09D1     		bne	.L288
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4169              		.loc 1 1116 0 discriminator 9
 4170 007a 2269     		ldr	r2, [r4, #16]
 4171 007c 1AB9     		cbnz	r2, .L289
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4172              		.loc 1 1116 0 discriminator 11
 4173 007e 7F22     		movs	r2, #127
 4174 0080 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4175 0084 06E0     		b	.L285
 4176              	.L289:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4177              		.loc 1 1116 0 discriminator 12
 4178 0086 3F22     		movs	r2, #63
 4179 0088 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4180 008c 02E0     		b	.L285
 4181              	.L288:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     uhMask = huart->Mask;
 4182              		.loc 1 1116 0 discriminator 10
 4183 008e 0022     		movs	r2, #0
 4184 0090 A4F85C20 		strh	r2, [r4, #92]	@ movhi
 4185              	.L285:
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4186              		.loc 1 1117 0 is_stmt 1
 4187 0094 B4F85C80 		ldrh	r8, [r4, #92]
 4188              	.LVL373:
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4189              		.loc 1 1120 0
 4190 0098 B3F5805F 		cmp	r3, #4096
 4191 009c 04D1     		bne	.L299
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4192              		.loc 1 1120 0 is_stmt 0 discriminator 1
 4193 009e 2369     		ldr	r3, [r4, #16]
 4194 00a0 2BB1     		cbz	r3, .L300
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4195              		.loc 1 1128 0 is_stmt 1
 4196 00a2 4FF00009 		mov	r9, #0
 4197 00a6 23E0     		b	.L291
 4198              	.L299:
 4199 00a8 4FF00009 		mov	r9, #0
 4200 00ac 20E0     		b	.L291
 4201              	.L300:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4202              		.loc 1 1123 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 148


 4203 00ae A946     		mov	r9, r5
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 4204              		.loc 1 1122 0
 4205 00b0 0025     		movs	r5, #0
 4206              	.LVL374:
 4207 00b2 1DE0     		b	.L291
 4208              	.LVL375:
 4209              	.L294:
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4210              		.loc 1 1134 0
 4211 00b4 0096     		str	r6, [sp]
 4212 00b6 3B46     		mov	r3, r7
 4213 00b8 0022     		movs	r2, #0
 4214 00ba 2021     		movs	r1, #32
 4215 00bc 2046     		mov	r0, r4
 4216 00be FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4217              	.LVL376:
 4218 00c2 40BB     		cbnz	r0, .L301
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       {
 4219              		.loc 1 1138 0
 4220 00c4 35B9     		cbnz	r5, .L292
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata16bits++;
 4221              		.loc 1 1140 0
 4222 00c6 2368     		ldr	r3, [r4]
 4223 00c8 9B8C     		ldrh	r3, [r3, #36]
 4224 00ca 08EA0303 		and	r3, r8, r3
 4225 00ce 29F8023B 		strh	r3, [r9], #2	@ movhi
 4226              	.LVL377:
 4227 00d2 06E0     		b	.L293
 4228              	.L292:
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****         pdata8bits++;
 4229              		.loc 1 1145 0
 4230 00d4 2368     		ldr	r3, [r4]
 4231 00d6 9B8C     		ldrh	r3, [r3, #36]
 4232 00d8 5FFA88F2 		uxtb	r2, r8
 4233 00dc 1340     		ands	r3, r3, r2
 4234 00de 05F8013B 		strb	r3, [r5], #1
 4235              	.LVL378:
 4236              	.L293:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4237              		.loc 1 1148 0
 4238 00e2 B4F85A30 		ldrh	r3, [r4, #90]
 4239 00e6 9BB2     		uxth	r3, r3
 4240 00e8 013B     		subs	r3, r3, #1
 4241 00ea 9BB2     		uxth	r3, r3
 4242 00ec A4F85A30 		strh	r3, [r4, #90]	@ movhi
 4243              	.LVL379:
 4244              	.L291:
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4245              		.loc 1 1132 0
 4246 00f0 B4F85A30 		ldrh	r3, [r4, #90]
 4247 00f4 9BB2     		uxth	r3, r3
 4248 00f6 002B     		cmp	r3, #0
 4249 00f8 DCD1     		bne	.L294
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4250              		.loc 1 1152 0
 4251 00fa 2023     		movs	r3, #32
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 149


 4252 00fc A367     		str	r3, [r4, #120]
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4253              		.loc 1 1154 0
 4254 00fe 0020     		movs	r0, #0
 4255 0100 84F87000 		strb	r0, [r4, #112]
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4256              		.loc 1 1156 0
 4257 0104 08E0     		b	.L282
 4258              	.LVL380:
 4259              	.L295:
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4260              		.loc 1 1160 0
 4261 0106 0220     		movs	r0, #2
 4262              	.LVL381:
 4263 0108 06E0     		b	.L282
 4264              	.LVL382:
 4265              	.L296:
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4266              		.loc 1 1101 0
 4267 010a 0120     		movs	r0, #1
 4268              	.LVL383:
 4269 010c 04E0     		b	.L282
 4270              	.LVL384:
 4271              	.L297:
 4272 010e 0120     		movs	r0, #1
 4273              	.LVL385:
 4274 0110 02E0     		b	.L282
 4275              	.LVL386:
 4276              	.L298:
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4277              		.loc 1 1104 0
 4278 0112 0220     		movs	r0, #2
 4279              	.LVL387:
 4280 0114 00E0     		b	.L282
 4281              	.LVL388:
 4282              	.L301:
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****       }
 4283              		.loc 1 1136 0
 4284 0116 0320     		movs	r0, #3
 4285              	.LVL389:
 4286              	.L282:
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4287              		.loc 1 1162 0
 4288 0118 03B0     		add	sp, sp, #12
 4289              	.LCFI36:
 4290              		.cfi_def_cfa_offset 28
 4291              		@ sp needed
 4292 011a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4293              		.cfi_endproc
 4294              	.LFE131:
 4296 011e 00BF     		.section	.text.UART_CheckIdleState,"ax",%progbits
 4297              		.align	2
 4298              		.global	UART_CheckIdleState
 4299              		.thumb
 4300              		.thumb_func
 4302              	UART_CheckIdleState:
 4303              	.LFB167:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 150


2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   uint32_t tickstart;
 4304              		.loc 1 2927 0
 4305              		.cfi_startproc
 4306              		@ args = 0, pretend = 0, frame = 0
 4307              		@ frame_needed = 0, uses_anonymous_args = 0
 4308              	.LVL390:
 4309 0000 30B5     		push	{r4, r5, lr}
 4310              	.LCFI37:
 4311              		.cfi_def_cfa_offset 12
 4312              		.cfi_offset 4, -12
 4313              		.cfi_offset 5, -8
 4314              		.cfi_offset 14, -4
 4315 0002 83B0     		sub	sp, sp, #12
 4316              	.LCFI38:
 4317              		.cfi_def_cfa_offset 24
 4318 0004 0446     		mov	r4, r0
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4319              		.loc 1 2931 0
 4320 0006 0023     		movs	r3, #0
 4321 0008 C367     		str	r3, [r0, #124]
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4322              		.loc 1 2934 0
 4323 000a FFF7FEFF 		bl	HAL_GetTick
 4324              	.LVL391:
 4325 000e 0546     		mov	r5, r0
 4326              	.LVL392:
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4327              		.loc 1 2937 0
 4328 0010 2368     		ldr	r3, [r4]
 4329 0012 1B68     		ldr	r3, [r3]
 4330 0014 13F0080F 		tst	r3, #8
 4331 0018 0AD0     		beq	.L304
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4332              		.loc 1 2940 0
 4333 001a 6FF07E43 		mvn	r3, #-33554432
 4334 001e 0093     		str	r3, [sp]
 4335 0020 0346     		mov	r3, r0
 4336 0022 0022     		movs	r2, #0
 4337 0024 4FF40011 		mov	r1, #2097152
 4338 0028 2046     		mov	r0, r4
 4339              	.LVL393:
 4340 002a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4341              	.LVL394:
 4342 002e B0B9     		cbnz	r0, .L307
 4343              	.L304:
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4344              		.loc 1 2948 0
 4345 0030 2368     		ldr	r3, [r4]
 4346 0032 1B68     		ldr	r3, [r3]
 4347 0034 13F0040F 		tst	r3, #4
 4348 0038 0AD0     		beq	.L306
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     {
 4349              		.loc 1 2951 0
 4350 003a 6FF07E43 		mvn	r3, #-33554432
 4351 003e 0093     		str	r3, [sp]
 4352 0040 2B46     		mov	r3, r5
 4353 0042 0022     		movs	r2, #0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 151


 4354 0044 4FF48001 		mov	r1, #4194304
 4355 0048 2046     		mov	r0, r4
 4356 004a FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 4357              	.LVL395:
 4358 004e 40B9     		cbnz	r0, .L308
 4359              	.L306:
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4360              		.loc 1 2959 0
 4361 0050 2023     		movs	r3, #32
 4362 0052 6367     		str	r3, [r4, #116]
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4363              		.loc 1 2960 0
 4364 0054 A367     		str	r3, [r4, #120]
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4365              		.loc 1 2962 0
 4366 0056 0020     		movs	r0, #0
 4367 0058 84F87000 		strb	r0, [r4, #112]
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4368              		.loc 1 2964 0
 4369 005c 02E0     		b	.L305
 4370              	.L307:
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4371              		.loc 1 2943 0
 4372 005e 0320     		movs	r0, #3
 4373 0060 00E0     		b	.L305
 4374              	.L308:
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****     }
 4375              		.loc 1 2954 0
 4376 0062 0320     		movs	r0, #3
 4377              	.L305:
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4378              		.loc 1 2965 0
 4379 0064 03B0     		add	sp, sp, #12
 4380              	.LCFI39:
 4381              		.cfi_def_cfa_offset 12
 4382              		@ sp needed
 4383 0066 30BD     		pop	{r4, r5, pc}
 4384              		.cfi_endproc
 4385              	.LFE167:
 4387              		.section	.text.HAL_UART_Init,"ax",%progbits
 4388              		.align	2
 4389              		.global	HAL_UART_Init
 4390              		.thumb
 4391              		.thumb_func
 4393              	HAL_UART_Init:
 4394              	.LFB123:
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4395              		.loc 1 288 0
 4396              		.cfi_startproc
 4397              		@ args = 0, pretend = 0, frame = 0
 4398              		@ frame_needed = 0, uses_anonymous_args = 0
 4399              	.LVL396:
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4400              		.loc 1 290 0
 4401 0000 58B3     		cbz	r0, .L314
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4402              		.loc 1 288 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 152


 4403 0002 10B5     		push	{r4, lr}
 4404              	.LCFI40:
 4405              		.cfi_def_cfa_offset 8
 4406              		.cfi_offset 4, -8
 4407              		.cfi_offset 14, -4
 4408 0004 0446     		mov	r4, r0
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4409              		.loc 1 306 0
 4410 0006 436F     		ldr	r3, [r0, #116]
 4411 0008 1BB9     		cbnz	r3, .L312
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4412              		.loc 1 309 0
 4413 000a 80F87030 		strb	r3, [r0, #112]
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4414              		.loc 1 323 0
 4415 000e FFF7FEFF 		bl	HAL_UART_MspInit
 4416              	.LVL397:
 4417              	.L312:
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4418              		.loc 1 327 0
 4419 0012 2423     		movs	r3, #36
 4420 0014 6367     		str	r3, [r4, #116]
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4421              		.loc 1 329 0
 4422 0016 2268     		ldr	r2, [r4]
 4423 0018 1368     		ldr	r3, [r2]
 4424 001a 23F00103 		bic	r3, r3, #1
 4425 001e 1360     		str	r3, [r2]
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4426              		.loc 1 332 0
 4427 0020 2046     		mov	r0, r4
 4428 0022 FFF7FEFF 		bl	UART_SetConfig
 4429              	.LVL398:
 4430 0026 0128     		cmp	r0, #1
 4431 0028 19D0     		beq	.L311
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4432              		.loc 1 337 0
 4433 002a 636A     		ldr	r3, [r4, #36]
 4434 002c 13B1     		cbz	r3, .L313
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4435              		.loc 1 339 0
 4436 002e 2046     		mov	r0, r4
 4437 0030 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4438              	.LVL399:
 4439              	.L313:
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4440              		.loc 1 345 0
 4441 0034 2268     		ldr	r2, [r4]
 4442 0036 5368     		ldr	r3, [r2, #4]
 4443 0038 23F49043 		bic	r3, r3, #18432
 4444 003c 5360     		str	r3, [r2, #4]
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4445              		.loc 1 346 0
 4446 003e 2268     		ldr	r2, [r4]
 4447 0040 9368     		ldr	r3, [r2, #8]
 4448 0042 23F02A03 		bic	r3, r3, #42
 4449 0046 9360     		str	r3, [r2, #8]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 153


 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4450              		.loc 1 348 0
 4451 0048 2268     		ldr	r2, [r4]
 4452 004a 1368     		ldr	r3, [r2]
 4453 004c 43F00103 		orr	r3, r3, #1
 4454 0050 1360     		str	r3, [r2]
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4455              		.loc 1 351 0
 4456 0052 2046     		mov	r0, r4
 4457 0054 FFF7FEFF 		bl	UART_CheckIdleState
 4458              	.LVL400:
 4459 0058 10BD     		pop	{r4, pc}
 4460              	.LVL401:
 4461              	.L314:
 4462              	.LCFI41:
 4463              		.cfi_def_cfa_offset 0
 4464              		.cfi_restore 4
 4465              		.cfi_restore 14
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4466              		.loc 1 292 0
 4467 005a 0120     		movs	r0, #1
 4468              	.LVL402:
 4469 005c 7047     		bx	lr
 4470              	.LVL403:
 4471              	.L311:
 4472              	.LCFI42:
 4473              		.cfi_def_cfa_offset 8
 4474              		.cfi_offset 4, -8
 4475              		.cfi_offset 14, -4
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4476              		.loc 1 352 0
 4477 005e 10BD     		pop	{r4, pc}
 4478              		.cfi_endproc
 4479              	.LFE123:
 4481              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 4482              		.align	2
 4483              		.global	HAL_HalfDuplex_Init
 4484              		.thumb
 4485              		.thumb_func
 4487              	HAL_HalfDuplex_Init:
 4488              	.LFB124:
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4489              		.loc 1 361 0
 4490              		.cfi_startproc
 4491              		@ args = 0, pretend = 0, frame = 0
 4492              		@ frame_needed = 0, uses_anonymous_args = 0
 4493              	.LVL404:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4494              		.loc 1 363 0
 4495 0000 0028     		cmp	r0, #0
 4496 0002 30D0     		beq	.L321
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4497              		.loc 1 361 0
 4498 0004 10B5     		push	{r4, lr}
 4499              	.LCFI43:
 4500              		.cfi_def_cfa_offset 8
 4501              		.cfi_offset 4, -8
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 154


 4502              		.cfi_offset 14, -4
 4503 0006 0446     		mov	r4, r0
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4504              		.loc 1 371 0
 4505 0008 436F     		ldr	r3, [r0, #116]
 4506 000a 1BB9     		cbnz	r3, .L319
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4507              		.loc 1 374 0
 4508 000c 80F87030 		strb	r3, [r0, #112]
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4509              		.loc 1 388 0
 4510 0010 FFF7FEFF 		bl	HAL_UART_MspInit
 4511              	.LVL405:
 4512              	.L319:
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4513              		.loc 1 392 0
 4514 0014 2423     		movs	r3, #36
 4515 0016 6367     		str	r3, [r4, #116]
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4516              		.loc 1 394 0
 4517 0018 2268     		ldr	r2, [r4]
 4518 001a 1368     		ldr	r3, [r2]
 4519 001c 23F00103 		bic	r3, r3, #1
 4520 0020 1360     		str	r3, [r2]
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4521              		.loc 1 397 0
 4522 0022 2046     		mov	r0, r4
 4523 0024 FFF7FEFF 		bl	UART_SetConfig
 4524              	.LVL406:
 4525 0028 0128     		cmp	r0, #1
 4526 002a 1ED0     		beq	.L318
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4527              		.loc 1 402 0
 4528 002c 636A     		ldr	r3, [r4, #36]
 4529 002e 13B1     		cbz	r3, .L320
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4530              		.loc 1 404 0
 4531 0030 2046     		mov	r0, r4
 4532 0032 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4533              	.LVL407:
 4534              	.L320:
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 4535              		.loc 1 410 0
 4536 0036 2268     		ldr	r2, [r4]
 4537 0038 5368     		ldr	r3, [r2, #4]
 4538 003a 23F49043 		bic	r3, r3, #18432
 4539 003e 5360     		str	r3, [r2, #4]
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4540              		.loc 1 411 0
 4541 0040 2268     		ldr	r2, [r4]
 4542 0042 9368     		ldr	r3, [r2, #8]
 4543 0044 23F02203 		bic	r3, r3, #34
 4544 0048 9360     		str	r3, [r2, #8]
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4545              		.loc 1 414 0
 4546 004a 2268     		ldr	r2, [r4]
 4547 004c 9368     		ldr	r3, [r2, #8]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 155


 4548 004e 43F00803 		orr	r3, r3, #8
 4549 0052 9360     		str	r3, [r2, #8]
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4550              		.loc 1 416 0
 4551 0054 2268     		ldr	r2, [r4]
 4552 0056 1368     		ldr	r3, [r2]
 4553 0058 43F00103 		orr	r3, r3, #1
 4554 005c 1360     		str	r3, [r2]
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4555              		.loc 1 419 0
 4556 005e 2046     		mov	r0, r4
 4557 0060 FFF7FEFF 		bl	UART_CheckIdleState
 4558              	.LVL408:
 4559 0064 10BD     		pop	{r4, pc}
 4560              	.LVL409:
 4561              	.L321:
 4562              	.LCFI44:
 4563              		.cfi_def_cfa_offset 0
 4564              		.cfi_restore 4
 4565              		.cfi_restore 14
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4566              		.loc 1 365 0
 4567 0066 0120     		movs	r0, #1
 4568              	.LVL410:
 4569 0068 7047     		bx	lr
 4570              	.LVL411:
 4571              	.L318:
 4572              	.LCFI45:
 4573              		.cfi_def_cfa_offset 8
 4574              		.cfi_offset 4, -8
 4575              		.cfi_offset 14, -4
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4576              		.loc 1 420 0
 4577 006a 10BD     		pop	{r4, pc}
 4578              		.cfi_endproc
 4579              	.LFE124:
 4581              		.section	.text.HAL_LIN_Init,"ax",%progbits
 4582              		.align	2
 4583              		.global	HAL_LIN_Init
 4584              		.thumb
 4585              		.thumb_func
 4587              	HAL_LIN_Init:
 4588              	.LFB125:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4589              		.loc 1 434 0
 4590              		.cfi_startproc
 4591              		@ args = 0, pretend = 0, frame = 0
 4592              		@ frame_needed = 0, uses_anonymous_args = 0
 4593              	.LVL412:
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4594              		.loc 1 436 0
 4595 0000 0028     		cmp	r0, #0
 4596 0002 3ED0     		beq	.L328
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4597              		.loc 1 434 0
 4598 0004 38B5     		push	{r3, r4, r5, lr}
 4599              	.LCFI46:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 156


 4600              		.cfi_def_cfa_offset 16
 4601              		.cfi_offset 3, -16
 4602              		.cfi_offset 4, -12
 4603              		.cfi_offset 5, -8
 4604              		.cfi_offset 14, -4
 4605 0006 0446     		mov	r4, r0
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4606              		.loc 1 447 0
 4607 0008 C369     		ldr	r3, [r0, #28]
 4608 000a B3F5004F 		cmp	r3, #32768
 4609 000e 3AD0     		beq	.L329
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4610              		.loc 1 452 0
 4611 0010 8368     		ldr	r3, [r0, #8]
 4612 0012 002B     		cmp	r3, #0
 4613 0014 39D1     		bne	.L330
 4614 0016 0D46     		mov	r5, r1
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4615              		.loc 1 457 0
 4616 0018 436F     		ldr	r3, [r0, #116]
 4617 001a 1BB9     		cbnz	r3, .L326
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4618              		.loc 1 460 0
 4619 001c 80F87030 		strb	r3, [r0, #112]
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4620              		.loc 1 474 0
 4621 0020 FFF7FEFF 		bl	HAL_UART_MspInit
 4622              	.LVL413:
 4623              	.L326:
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4624              		.loc 1 478 0
 4625 0024 2423     		movs	r3, #36
 4626 0026 6367     		str	r3, [r4, #116]
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4627              		.loc 1 480 0
 4628 0028 2268     		ldr	r2, [r4]
 4629 002a 1368     		ldr	r3, [r2]
 4630 002c 23F00103 		bic	r3, r3, #1
 4631 0030 1360     		str	r3, [r2]
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4632              		.loc 1 483 0
 4633 0032 2046     		mov	r0, r4
 4634 0034 FFF7FEFF 		bl	UART_SetConfig
 4635              	.LVL414:
 4636 0038 0128     		cmp	r0, #1
 4637 003a 27D0     		beq	.L325
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4638              		.loc 1 488 0
 4639 003c 636A     		ldr	r3, [r4, #36]
 4640 003e 13B1     		cbz	r3, .L327
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4641              		.loc 1 490 0
 4642 0040 2046     		mov	r0, r4
 4643 0042 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4644              	.LVL415:
 4645              	.L327:
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 157


 4646              		.loc 1 496 0
 4647 0046 2268     		ldr	r2, [r4]
 4648 0048 5368     		ldr	r3, [r2, #4]
 4649 004a 23F40063 		bic	r3, r3, #2048
 4650 004e 5360     		str	r3, [r2, #4]
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4651              		.loc 1 497 0
 4652 0050 2268     		ldr	r2, [r4]
 4653 0052 9368     		ldr	r3, [r2, #8]
 4654 0054 23F02A03 		bic	r3, r3, #42
 4655 0058 9360     		str	r3, [r2, #8]
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4656              		.loc 1 500 0
 4657 005a 2268     		ldr	r2, [r4]
 4658 005c 5368     		ldr	r3, [r2, #4]
 4659 005e 43F48043 		orr	r3, r3, #16384
 4660 0062 5360     		str	r3, [r2, #4]
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4661              		.loc 1 503 0
 4662 0064 2368     		ldr	r3, [r4]
 4663 0066 5968     		ldr	r1, [r3, #4]
 4664 0068 21F02001 		bic	r1, r1, #32
 4665 006c 2943     		orrs	r1, r1, r5
 4666 006e 5960     		str	r1, [r3, #4]
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4667              		.loc 1 505 0
 4668 0070 2268     		ldr	r2, [r4]
 4669 0072 1368     		ldr	r3, [r2]
 4670 0074 43F00103 		orr	r3, r3, #1
 4671 0078 1360     		str	r3, [r2]
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4672              		.loc 1 508 0
 4673 007a 2046     		mov	r0, r4
 4674 007c FFF7FEFF 		bl	UART_CheckIdleState
 4675              	.LVL416:
 4676 0080 38BD     		pop	{r3, r4, r5, pc}
 4677              	.LVL417:
 4678              	.L328:
 4679              	.LCFI47:
 4680              		.cfi_def_cfa_offset 0
 4681              		.cfi_restore 3
 4682              		.cfi_restore 4
 4683              		.cfi_restore 5
 4684              		.cfi_restore 14
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4685              		.loc 1 438 0
 4686 0082 0120     		movs	r0, #1
 4687              	.LVL418:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4688              		.loc 1 509 0
 4689 0084 7047     		bx	lr
 4690              	.LVL419:
 4691              	.L329:
 4692              	.LCFI48:
 4693              		.cfi_def_cfa_offset 16
 4694              		.cfi_offset 3, -16
 4695              		.cfi_offset 4, -12
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 158


 4696              		.cfi_offset 5, -8
 4697              		.cfi_offset 14, -4
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4698              		.loc 1 449 0
 4699 0086 0120     		movs	r0, #1
 4700              	.LVL420:
 4701 0088 38BD     		pop	{r3, r4, r5, pc}
 4702              	.LVL421:
 4703              	.L330:
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4704              		.loc 1 454 0
 4705 008a 0120     		movs	r0, #1
 4706              	.LVL422:
 4707              	.L325:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4708              		.loc 1 509 0
 4709 008c 38BD     		pop	{r3, r4, r5, pc}
 4710              		.cfi_endproc
 4711              	.LFE125:
 4713 008e 00BF     		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 4714              		.align	2
 4715              		.global	HAL_MultiProcessor_Init
 4716              		.thumb
 4717              		.thumb_func
 4719              	HAL_MultiProcessor_Init:
 4720              	.LFB126:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4721              		.loc 1 531 0
 4722              		.cfi_startproc
 4723              		@ args = 0, pretend = 0, frame = 0
 4724              		@ frame_needed = 0, uses_anonymous_args = 0
 4725              	.LVL423:
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4726              		.loc 1 533 0
 4727 0000 0028     		cmp	r0, #0
 4728 0002 3ED0     		beq	.L337
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   /* Check the UART handle allocation */
 4729              		.loc 1 531 0
 4730 0004 70B5     		push	{r4, r5, r6, lr}
 4731              	.LCFI49:
 4732              		.cfi_def_cfa_offset 16
 4733              		.cfi_offset 4, -16
 4734              		.cfi_offset 5, -12
 4735              		.cfi_offset 6, -8
 4736              		.cfi_offset 14, -4
 4737 0006 0446     		mov	r4, r0
 4738 0008 1546     		mov	r5, r2
 4739 000a 0E46     		mov	r6, r1
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4740              		.loc 1 541 0
 4741 000c 436F     		ldr	r3, [r0, #116]
 4742 000e 1BB9     		cbnz	r3, .L334
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4743              		.loc 1 544 0
 4744 0010 80F87030 		strb	r3, [r0, #112]
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 4745              		.loc 1 558 0
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 159


 4746 0014 FFF7FEFF 		bl	HAL_UART_MspInit
 4747              	.LVL424:
 4748              	.L334:
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4749              		.loc 1 562 0
 4750 0018 2423     		movs	r3, #36
 4751 001a 6367     		str	r3, [r4, #116]
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4752              		.loc 1 564 0
 4753 001c 2268     		ldr	r2, [r4]
 4754 001e 1368     		ldr	r3, [r2]
 4755 0020 23F00103 		bic	r3, r3, #1
 4756 0024 1360     		str	r3, [r2]
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4757              		.loc 1 567 0
 4758 0026 2046     		mov	r0, r4
 4759 0028 FFF7FEFF 		bl	UART_SetConfig
 4760              	.LVL425:
 4761 002c 0128     		cmp	r0, #1
 4762 002e 2AD0     		beq	.L333
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4763              		.loc 1 572 0
 4764 0030 636A     		ldr	r3, [r4, #36]
 4765 0032 13B1     		cbz	r3, .L335
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4766              		.loc 1 574 0
 4767 0034 2046     		mov	r0, r4
 4768 0036 FFF7FEFF 		bl	UART_AdvFeatureConfig
 4769              	.LVL426:
 4770              	.L335:
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 4771              		.loc 1 580 0
 4772 003a 2268     		ldr	r2, [r4]
 4773 003c 5368     		ldr	r3, [r2, #4]
 4774 003e 23F49043 		bic	r3, r3, #18432
 4775 0042 5360     		str	r3, [r2, #4]
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4776              		.loc 1 581 0
 4777 0044 2268     		ldr	r2, [r4]
 4778 0046 9368     		ldr	r3, [r2, #8]
 4779 0048 23F02A03 		bic	r3, r3, #42
 4780 004c 9360     		str	r3, [r2, #8]
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   {
 4781              		.loc 1 583 0
 4782 004e B5F5006F 		cmp	r5, #2048
 4783 0052 06D1     		bne	.L336
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4784              		.loc 1 586 0
 4785 0054 2368     		ldr	r3, [r4]
 4786 0056 5968     		ldr	r1, [r3, #4]
 4787 0058 21F07F41 		bic	r1, r1, #-16777216
 4788 005c 41EA0666 		orr	r6, r1, r6, lsl #24
 4789 0060 5E60     		str	r6, [r3, #4]
 4790              	.L336:
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4791              		.loc 1 590 0
 4792 0062 2168     		ldr	r1, [r4]
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 160


 4793 0064 0B68     		ldr	r3, [r1]
 4794 0066 23F40063 		bic	r3, r3, #2048
 4795 006a 45EA0302 		orr	r2, r5, r3
 4796 006e 0A60     		str	r2, [r1]
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4797              		.loc 1 592 0
 4798 0070 2268     		ldr	r2, [r4]
 4799 0072 1368     		ldr	r3, [r2]
 4800 0074 43F00103 		orr	r3, r3, #1
 4801 0078 1360     		str	r3, [r2]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4802              		.loc 1 595 0
 4803 007a 2046     		mov	r0, r4
 4804 007c FFF7FEFF 		bl	UART_CheckIdleState
 4805              	.LVL427:
 4806 0080 70BD     		pop	{r4, r5, r6, pc}
 4807              	.LVL428:
 4808              	.L337:
 4809              	.LCFI50:
 4810              		.cfi_def_cfa_offset 0
 4811              		.cfi_restore 4
 4812              		.cfi_restore 5
 4813              		.cfi_restore 6
 4814              		.cfi_restore 14
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   }
 4815              		.loc 1 535 0
 4816 0082 0120     		movs	r0, #1
 4817              	.LVL429:
 4818 0084 7047     		bx	lr
 4819              	.LVL430:
 4820              	.L333:
 4821              	.LCFI51:
 4822              		.cfi_def_cfa_offset 16
 4823              		.cfi_offset 4, -16
 4824              		.cfi_offset 5, -12
 4825              		.cfi_offset 6, -8
 4826              		.cfi_offset 14, -4
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4827              		.loc 1 596 0
 4828 0086 70BD     		pop	{r4, r5, r6, pc}
 4829              		.cfi_endproc
 4830              	.LFE126:
 4832              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4833              		.align	2
 4834              		.global	HAL_MultiProcessor_EnableMuteMode
 4835              		.thumb
 4836              		.thumb_func
 4838              	HAL_MultiProcessor_EnableMuteMode:
 4839              	.LFB157:
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4840              		.loc 1 2512 0
 4841              		.cfi_startproc
 4842              		@ args = 0, pretend = 0, frame = 0
 4843              		@ frame_needed = 0, uses_anonymous_args = 0
 4844              	.LVL431:
 4845 0000 08B5     		push	{r3, lr}
 4846              	.LCFI52:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 161


 4847              		.cfi_def_cfa_offset 8
 4848              		.cfi_offset 3, -8
 4849              		.cfi_offset 14, -4
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4850              		.loc 1 2513 0
 4851 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4852 0006 012B     		cmp	r3, #1
 4853 0008 0ED0     		beq	.L342
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4854              		.loc 1 2513 0 is_stmt 0 discriminator 2
 4855 000a 0123     		movs	r3, #1
 4856 000c 80F87030 		strb	r3, [r0, #112]
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4857              		.loc 1 2515 0 is_stmt 1 discriminator 2
 4858 0010 2423     		movs	r3, #36
 4859 0012 4367     		str	r3, [r0, #116]
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4860              		.loc 1 2518 0 discriminator 2
 4861 0014 0268     		ldr	r2, [r0]
 4862 0016 1368     		ldr	r3, [r2]
 4863 0018 43F40053 		orr	r3, r3, #8192
 4864 001c 1360     		str	r3, [r2]
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4865              		.loc 1 2520 0 discriminator 2
 4866 001e 2023     		movs	r3, #32
 4867 0020 4367     		str	r3, [r0, #116]
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4868              		.loc 1 2522 0 discriminator 2
 4869 0022 FFF7FEFF 		bl	UART_CheckIdleState
 4870              	.LVL432:
 4871 0026 08BD     		pop	{r3, pc}
 4872              	.LVL433:
 4873              	.L342:
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4874              		.loc 1 2513 0
 4875 0028 0220     		movs	r0, #2
 4876              	.LVL434:
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4877              		.loc 1 2523 0
 4878 002a 08BD     		pop	{r3, pc}
 4879              		.cfi_endproc
 4880              	.LFE157:
 4882              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4883              		.align	2
 4884              		.global	HAL_MultiProcessor_DisableMuteMode
 4885              		.thumb
 4886              		.thumb_func
 4888              	HAL_MultiProcessor_DisableMuteMode:
 4889              	.LFB158:
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c ****   __HAL_LOCK(huart);
 4890              		.loc 1 2532 0
 4891              		.cfi_startproc
 4892              		@ args = 0, pretend = 0, frame = 0
 4893              		@ frame_needed = 0, uses_anonymous_args = 0
 4894              	.LVL435:
 4895 0000 08B5     		push	{r3, lr}
 4896              	.LCFI53:
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 162


 4897              		.cfi_def_cfa_offset 8
 4898              		.cfi_offset 3, -8
 4899              		.cfi_offset 14, -4
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4900              		.loc 1 2533 0
 4901 0002 90F87030 		ldrb	r3, [r0, #112]	@ zero_extendqisi2
 4902 0006 012B     		cmp	r3, #1
 4903 0008 0ED0     		beq	.L346
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4904              		.loc 1 2533 0 is_stmt 0 discriminator 2
 4905 000a 0123     		movs	r3, #1
 4906 000c 80F87030 		strb	r3, [r0, #112]
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4907              		.loc 1 2535 0 is_stmt 1 discriminator 2
 4908 0010 2423     		movs	r3, #36
 4909 0012 4367     		str	r3, [r0, #116]
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4910              		.loc 1 2538 0 discriminator 2
 4911 0014 0268     		ldr	r2, [r0]
 4912 0016 1368     		ldr	r3, [r2]
 4913 0018 23F40053 		bic	r3, r3, #8192
 4914 001c 1360     		str	r3, [r2]
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4915              		.loc 1 2540 0 discriminator 2
 4916 001e 2023     		movs	r3, #32
 4917 0020 4367     		str	r3, [r0, #116]
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** }
 4918              		.loc 1 2542 0 discriminator 2
 4919 0022 FFF7FEFF 		bl	UART_CheckIdleState
 4920              	.LVL436:
 4921 0026 08BD     		pop	{r3, pc}
 4922              	.LVL437:
 4923              	.L346:
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4924              		.loc 1 2533 0
 4925 0028 0220     		movs	r0, #2
 4926              	.LVL438:
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c **** 
 4927              		.loc 1 2543 0
 4928 002a 08BD     		pop	{r3, pc}
 4929              		.cfi_endproc
 4930              	.LFE158:
 4932              		.text
 4933              	.Letext0:
 4934              		.file 2 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_
 4935              		.file 3 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 4936              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 4937              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 4938              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 4939              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 4940              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 4941              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart_ex.h"
 4942              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 4943              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 4944              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 163


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_uart.c
D:\Programme\Cygwin\tmp\ccNFdm5z.s:22     .text.UART_EndTxTransfer:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:26     .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
D:\Programme\Cygwin\tmp\ccNFdm5z.s:48     .text.UART_EndRxTransfer:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:52     .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
D:\Programme\Cygwin\tmp\ccNFdm5z.s:81     .text.UART_TxISR_8BIT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:85     .text.UART_TxISR_8BIT:00000000 UART_TxISR_8BIT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:134    .text.UART_TxISR_16BIT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:138    .text.UART_TxISR_16BIT:00000000 UART_TxISR_16BIT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:192    .text.HAL_UART_MspInit:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:197    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
D:\Programme\Cygwin\tmp\ccNFdm5z.s:210    .text.HAL_UART_MspDeInit:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:215    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
D:\Programme\Cygwin\tmp\ccNFdm5z.s:228    .text.HAL_UART_DeInit:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:233    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
D:\Programme\Cygwin\tmp\ccNFdm5z.s:299    .text.HAL_UART_Transmit_IT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:304    .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:399    .text.HAL_UART_Transmit_IT:00000068 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:405    .text.HAL_UART_Receive_IT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:410    .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:565    .text.HAL_UART_Receive_IT:000000cc $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1680   .text.UART_RxISR_16BIT:00000000 UART_RxISR_16BIT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1595   .text.UART_RxISR_8BIT:00000000 UART_RxISR_8BIT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:571    .text.HAL_UART_Transmit_DMA:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:576    .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
D:\Programme\Cygwin\tmp\ccNFdm5z.s:704    .text.HAL_UART_Transmit_DMA:00000098 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1445   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1549   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1884   .text.UART_DMAError:00000000 UART_DMAError
D:\Programme\Cygwin\tmp\ccNFdm5z.s:711    .text.HAL_UART_Receive_DMA:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:716    .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
D:\Programme\Cygwin\tmp\ccNFdm5z.s:848    .text.HAL_UART_Receive_DMA:000000a0 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1765   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1838   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
D:\Programme\Cygwin\tmp\ccNFdm5z.s:855    .text.HAL_UART_DMAPause:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:860    .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
D:\Programme\Cygwin\tmp\ccNFdm5z.s:955    .text.HAL_UART_DMAResume:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:960    .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1027   .text.HAL_UART_DMAStop:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1032   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1145   .text.HAL_UART_Abort:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1150   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1269   .text.HAL_UART_AbortTransmit:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1274   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1339   .text.HAL_UART_AbortReceive:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1344   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1423   .text.HAL_UART_TxCpltCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1428   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1441   .text.UART_DMATransmitCplt:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1492   .text.UART_EndTransmit_IT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1496   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1527   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1532   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1545   .text.UART_DMATxHalfCplt:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1573   .text.HAL_UART_RxCpltCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1578   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 164


D:\Programme\Cygwin\tmp\ccNFdm5z.s:1591   .text.UART_RxISR_8BIT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1676   .text.UART_RxISR_16BIT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1761   .text.UART_DMAReceiveCplt:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1816   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1821   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1834   .text.UART_DMARxHalfCplt:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1862   .text.HAL_UART_ErrorCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1867   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1880   .text.UART_DMAError:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1954   .text.HAL_UART_IRQHandler:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:1959   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2239   .text.HAL_UART_IRQHandler:00000174 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2248   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2244   .text.UART_DMAAbortOnError:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2276   .text.HAL_UART_AbortCpltCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2281   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2294   .text.HAL_UART_Abort_IT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2299   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2465   .text.HAL_UART_Abort_IT:000000d4 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2535   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2475   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2471   .text.UART_DMARxAbortCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2531   .text.UART_DMATxAbortCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2586   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2591   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2604   .text.HAL_UART_AbortTransmit_IT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2609   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2690   .text.HAL_UART_AbortTransmit_IT:00000060 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2699   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2695   .text.UART_DMATxOnlyAbortCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2728   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2733   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2746   .text.HAL_UART_AbortReceive_IT:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2751   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2849   .text.HAL_UART_AbortReceive_IT:0000007c $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2858   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2854   .text.UART_DMARxOnlyAbortCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2896   .text.HAL_UART_ReceiverTimeout_Config:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2901   .text.HAL_UART_ReceiverTimeout_Config:00000000 HAL_UART_ReceiverTimeout_Config
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2921   .text.HAL_UART_EnableReceiverTimeout:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2926   .text.HAL_UART_EnableReceiverTimeout:00000000 HAL_UART_EnableReceiverTimeout
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2980   .text.HAL_UART_DisableReceiverTimeout:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:2985   .text.HAL_UART_DisableReceiverTimeout:00000000 HAL_UART_DisableReceiverTimeout
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3039   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3044   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3062   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3067   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3116   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3121   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3170   .text.HAL_LIN_SendBreak:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3175   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3219   .text.HAL_UART_GetState:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3224   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3246   .text.HAL_UART_GetError:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3251   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3268   .text.UART_SetConfig:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3273   .text.UART_SetConfig:00000000 UART_SetConfig
ARM GAS  D:\Programme\Cygwin\tmp\ccNFdm5z.s 			page 165


D:\Programme\Cygwin\tmp\ccNFdm5z.s:3339   .text.UART_SetConfig:00000056 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3343   .text.UART_SetConfig:0000005a $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3395   .text.UART_SetConfig:00000096 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3517   .text.UART_SetConfig:00000134 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3642   .text.UART_SetConfig:000001c8 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3650   .text.UART_AdvFeatureConfig:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3655   .text.UART_AdvFeatureConfig:00000000 UART_AdvFeatureConfig
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3775   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3780   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3894   .text.HAL_UART_Transmit:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3899   .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4072   .text.HAL_UART_Receive:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4077   .text.HAL_UART_Receive:00000000 HAL_UART_Receive
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4297   .text.UART_CheckIdleState:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4302   .text.UART_CheckIdleState:00000000 UART_CheckIdleState
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4388   .text.HAL_UART_Init:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4393   .text.HAL_UART_Init:00000000 HAL_UART_Init
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4482   .text.HAL_HalfDuplex_Init:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4487   .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4582   .text.HAL_LIN_Init:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4587   .text.HAL_LIN_Init:00000000 HAL_LIN_Init
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4714   .text.HAL_MultiProcessor_Init:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4719   .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4833   .text.HAL_MultiProcessor_EnableMuteMode:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4838   .text.HAL_MultiProcessor_EnableMuteMode:00000000 HAL_MultiProcessor_EnableMuteMode
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4883   .text.HAL_MultiProcessor_DisableMuteMode:00000000 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:4888   .text.HAL_MultiProcessor_DisableMuteMode:00000000 HAL_MultiProcessor_DisableMuteMode
                     .debug_frame:00000010 $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3404   .text.UART_SetConfig:0000009f $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3404   .text.UART_SetConfig:000000a0 $t
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3526   .text.UART_SetConfig:0000013d $d
D:\Programme\Cygwin\tmp\ccNFdm5z.s:3526   .text.UART_SetConfig:0000013e $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetSysClockFreq
HAL_GetTick
