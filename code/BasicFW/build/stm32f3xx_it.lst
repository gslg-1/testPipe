ARM GAS  D:\Programme\Cygwin\tmp\ccFrFcV3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_it.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.NMI_Handler,"ax",%progbits
  22              		.align	2
  23              		.global	NMI_Handler
  24              		.thumb
  25              		.thumb_func
  27              	NMI_Handler:
  28              	.LFB127:
  29              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Src/stm32f3xx_it.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Src/stm32f3xx_it.c ****   * the License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                             www.st.com/SLA0044
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** #include "FreeRTOS.h"
  25:Src/stm32f3xx_it.c **** #include "task.h"
  26:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  27:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  28:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f3xx_it.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccFrFcV3.s 			page 2


  30:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  31:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f3xx_it.c **** 
  35:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f3xx_it.c ****  
  38:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f3xx_it.c **** 
  40:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f3xx_it.c **** 
  45:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f3xx_it.c **** 
  50:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f3xx_it.c **** 
  55:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  59:Src/stm32f3xx_it.c **** 
  60:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  61:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  62:Src/stm32f3xx_it.c **** 
  63:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  64:Src/stm32f3xx_it.c **** 
  65:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  66:Src/stm32f3xx_it.c **** 
  67:Src/stm32f3xx_it.c **** /******************************************************************************/
  68:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  69:Src/stm32f3xx_it.c **** /******************************************************************************/
  70:Src/stm32f3xx_it.c **** /**
  71:Src/stm32f3xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Src/stm32f3xx_it.c ****   */
  73:Src/stm32f3xx_it.c **** void NMI_Handler(void)
  74:Src/stm32f3xx_it.c **** {
  30              		.loc 1 74 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE127:
  39 0002 00BF     		.section	.text.HardFault_Handler,"ax",%progbits
  40              		.align	2
  41              		.global	HardFault_Handler
  42              		.thumb
ARM GAS  D:\Programme\Cygwin\tmp\ccFrFcV3.s 			page 3


  43              		.thumb_func
  45              	HardFault_Handler:
  46              	.LFB128:
  75:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Src/stm32f3xx_it.c **** 
  77:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Src/stm32f3xx_it.c **** 
  80:Src/stm32f3xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  81:Src/stm32f3xx_it.c **** }
  82:Src/stm32f3xx_it.c **** 
  83:Src/stm32f3xx_it.c **** /**
  84:Src/stm32f3xx_it.c ****   * @brief This function handles Hard fault interrupt.
  85:Src/stm32f3xx_it.c ****   */
  86:Src/stm32f3xx_it.c **** void HardFault_Handler(void)
  87:Src/stm32f3xx_it.c **** {
  47              		.loc 1 87 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE128:
  58 0002 00BF     		.section	.text.MemManage_Handler,"ax",%progbits
  59              		.align	2
  60              		.global	MemManage_Handler
  61              		.thumb
  62              		.thumb_func
  64              	MemManage_Handler:
  65              	.LFB129:
  88:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  89:Src/stm32f3xx_it.c **** 
  90:Src/stm32f3xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  91:Src/stm32f3xx_it.c ****   while (1)
  92:Src/stm32f3xx_it.c ****   {
  93:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  94:Src/stm32f3xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  95:Src/stm32f3xx_it.c ****   }
  96:Src/stm32f3xx_it.c **** }
  97:Src/stm32f3xx_it.c **** 
  98:Src/stm32f3xx_it.c **** /**
  99:Src/stm32f3xx_it.c ****   * @brief This function handles Memory management fault.
 100:Src/stm32f3xx_it.c ****   */
 101:Src/stm32f3xx_it.c **** void MemManage_Handler(void)
 102:Src/stm32f3xx_it.c **** {
  66              		.loc 1 102 0
  67              		.cfi_startproc
  68              		@ Volatile: function does not return.
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 0, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72              	.L5:
  73 0000 FEE7     		b	.L5
  74              		.cfi_endproc
ARM GAS  D:\Programme\Cygwin\tmp\ccFrFcV3.s 			page 4


  75              	.LFE129:
  77 0002 00BF     		.section	.text.BusFault_Handler,"ax",%progbits
  78              		.align	2
  79              		.global	BusFault_Handler
  80              		.thumb
  81              		.thumb_func
  83              	BusFault_Handler:
  84              	.LFB130:
 103:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 104:Src/stm32f3xx_it.c **** 
 105:Src/stm32f3xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 106:Src/stm32f3xx_it.c ****   while (1)
 107:Src/stm32f3xx_it.c ****   {
 108:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 109:Src/stm32f3xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 110:Src/stm32f3xx_it.c ****   }
 111:Src/stm32f3xx_it.c **** }
 112:Src/stm32f3xx_it.c **** 
 113:Src/stm32f3xx_it.c **** /**
 114:Src/stm32f3xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 115:Src/stm32f3xx_it.c ****   */
 116:Src/stm32f3xx_it.c **** void BusFault_Handler(void)
 117:Src/stm32f3xx_it.c **** {
  85              		.loc 1 117 0
  86              		.cfi_startproc
  87              		@ Volatile: function does not return.
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.L7:
  92 0000 FEE7     		b	.L7
  93              		.cfi_endproc
  94              	.LFE130:
  96 0002 00BF     		.section	.text.UsageFault_Handler,"ax",%progbits
  97              		.align	2
  98              		.global	UsageFault_Handler
  99              		.thumb
 100              		.thumb_func
 102              	UsageFault_Handler:
 103              	.LFB131:
 118:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 119:Src/stm32f3xx_it.c **** 
 120:Src/stm32f3xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 121:Src/stm32f3xx_it.c ****   while (1)
 122:Src/stm32f3xx_it.c ****   {
 123:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 124:Src/stm32f3xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 125:Src/stm32f3xx_it.c ****   }
 126:Src/stm32f3xx_it.c **** }
 127:Src/stm32f3xx_it.c **** 
 128:Src/stm32f3xx_it.c **** /**
 129:Src/stm32f3xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 130:Src/stm32f3xx_it.c ****   */
 131:Src/stm32f3xx_it.c **** void UsageFault_Handler(void)
 132:Src/stm32f3xx_it.c **** {
 104              		.loc 1 132 0
 105              		.cfi_startproc
ARM GAS  D:\Programme\Cygwin\tmp\ccFrFcV3.s 			page 5


 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.L9:
 111 0000 FEE7     		b	.L9
 112              		.cfi_endproc
 113              	.LFE131:
 115 0002 00BF     		.section	.text.DebugMon_Handler,"ax",%progbits
 116              		.align	2
 117              		.global	DebugMon_Handler
 118              		.thumb
 119              		.thumb_func
 121              	DebugMon_Handler:
 122              	.LFB132:
 133:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 134:Src/stm32f3xx_it.c **** 
 135:Src/stm32f3xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 136:Src/stm32f3xx_it.c ****   while (1)
 137:Src/stm32f3xx_it.c ****   {
 138:Src/stm32f3xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 139:Src/stm32f3xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 140:Src/stm32f3xx_it.c ****   }
 141:Src/stm32f3xx_it.c **** }
 142:Src/stm32f3xx_it.c **** 
 143:Src/stm32f3xx_it.c **** /**
 144:Src/stm32f3xx_it.c ****   * @brief This function handles Debug monitor.
 145:Src/stm32f3xx_it.c ****   */
 146:Src/stm32f3xx_it.c **** void DebugMon_Handler(void)
 147:Src/stm32f3xx_it.c **** {
 123              		.loc 1 147 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE132:
 132 0002 00BF     		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 133              		.align	2
 134              		.global	TIM1_UP_TIM16_IRQHandler
 135              		.thumb
 136              		.thumb_func
 138              	TIM1_UP_TIM16_IRQHandler:
 139              	.LFB133:
 148:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 149:Src/stm32f3xx_it.c **** 
 150:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 151:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 154:Src/stm32f3xx_it.c **** }
 155:Src/stm32f3xx_it.c **** 
 156:Src/stm32f3xx_it.c **** /******************************************************************************/
 157:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 158:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 159:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
ARM GAS  D:\Programme\Cygwin\tmp\ccFrFcV3.s 			page 6


 160:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 161:Src/stm32f3xx_it.c **** /******************************************************************************/
 162:Src/stm32f3xx_it.c **** 
 163:Src/stm32f3xx_it.c **** /**
 164:Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 165:Src/stm32f3xx_it.c ****   */
 166:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 167:Src/stm32f3xx_it.c **** {
 140              		.loc 1 167 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		.loc 1 167 0
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI0:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 168:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 169:Src/stm32f3xx_it.c **** 
 170:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 171:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 150              		.loc 1 171 0
 151 0002 0248     		ldr	r0, .L13
 152 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 153              	.LVL0:
 154 0008 08BD     		pop	{r3, pc}
 155              	.L14:
 156 000a 00BF     		.align	2
 157              	.L13:
 158 000c 00000000 		.word	htim1
 159              		.cfi_endproc
 160              	.LFE133:
 162              		.text
 163              	.Letext0:
 164              		.file 2 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_
 165              		.file 3 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 166              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 167              		.file 5 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 168              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 169              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 170              		.file 8 "Drivers/CMSIS/Include/core_cm4.h"
ARM GAS  D:\Programme\Cygwin\tmp\ccFrFcV3.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_it.c
D:\Programme\Cygwin\tmp\ccFrFcV3.s:22     .text.NMI_Handler:00000000 $t
D:\Programme\Cygwin\tmp\ccFrFcV3.s:27     .text.NMI_Handler:00000000 NMI_Handler
D:\Programme\Cygwin\tmp\ccFrFcV3.s:40     .text.HardFault_Handler:00000000 $t
D:\Programme\Cygwin\tmp\ccFrFcV3.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
D:\Programme\Cygwin\tmp\ccFrFcV3.s:59     .text.MemManage_Handler:00000000 $t
D:\Programme\Cygwin\tmp\ccFrFcV3.s:64     .text.MemManage_Handler:00000000 MemManage_Handler
D:\Programme\Cygwin\tmp\ccFrFcV3.s:78     .text.BusFault_Handler:00000000 $t
D:\Programme\Cygwin\tmp\ccFrFcV3.s:83     .text.BusFault_Handler:00000000 BusFault_Handler
D:\Programme\Cygwin\tmp\ccFrFcV3.s:97     .text.UsageFault_Handler:00000000 $t
D:\Programme\Cygwin\tmp\ccFrFcV3.s:102    .text.UsageFault_Handler:00000000 UsageFault_Handler
D:\Programme\Cygwin\tmp\ccFrFcV3.s:116    .text.DebugMon_Handler:00000000 $t
D:\Programme\Cygwin\tmp\ccFrFcV3.s:121    .text.DebugMon_Handler:00000000 DebugMon_Handler
D:\Programme\Cygwin\tmp\ccFrFcV3.s:133    .text.TIM1_UP_TIM16_IRQHandler:00000000 $t
D:\Programme\Cygwin\tmp\ccFrFcV3.s:138    .text.TIM1_UP_TIM16_IRQHandler:00000000 TIM1_UP_TIM16_IRQHandler
D:\Programme\Cygwin\tmp\ccFrFcV3.s:158    .text.TIM1_UP_TIM16_IRQHandler:0000000c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_TIM_IRQHandler
htim1
