ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"queue.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	prvGetDisinheritPriorityAfterTimeout:
  27              	.LFB32:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/queue.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <stdlib.h>
  29:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include <string.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  40:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  41:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#include "croutine.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  43:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  44:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  45:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  46:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** header files above, but not in this file, in order to generate the correct
  47:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** privileged Vs unprivileged linkage and placement. */
  48:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  49:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  50:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  52:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  53:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  54:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  56:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  57:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  58:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  59:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  60:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  61:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** the code is maintained despite this dual use of two structure members.  An
  62:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** alternative implementation would be to use a union, but use of a union is
  63:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** against the coding standard (although an exception to the standard has been
  64:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** permitted where the dual use also significantly changes the type of the
  65:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** structure member). */
  66:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define pxMutexHolder					pcTail
  67:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define uxQueueType						pcHead
  68:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  69:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  70:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  71:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** zero. */
  72:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  73:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  74:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  75:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_PREEMPTION == 0 )
  76:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  77:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	performed just because a higher priority task has been woken. */
  78:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  79:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #else
  80:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  81:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
  82:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
  84:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Definition of the queue used by the scheduler.
  85:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  86:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  87:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef struct QueueDefinition
  89:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  90:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  91:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  92:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  93:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
  94:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  95:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  96:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  97:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  98:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} u;
  99:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		UBaseType_t uxQueueNumber;
 120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uint8_t ucQueueType;
 121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } xQUEUE;
 124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** name below to enable the use of older kernel aware debuggers. */
 127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** typedef xQUEUE Queue_t;
 128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 132:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 133:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 134:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	more user friendly. */
 140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		QueueHandle_t xHandle;
 144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} xQueueRegistryItem;
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	debuggers. */
 149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	array position being vacant. */
 154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 160:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 161:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 162:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 163:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 164:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 165:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 169:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 171:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 172:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 176:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 177:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  *
 178:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 179:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 183:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 184:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * back of the queue.
 185:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 189:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Copies an item out of a queue.
 190:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * the queue set that the queue contains data.
 197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 203:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * dynamically to fill in the structure's members.
 204:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 208:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 209:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 210:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * as a mutex.
 211:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/*
 218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 * that priority.
 223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	 */
 224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*
 229:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 230:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  * accessing the queue event lists.
 231:Middlewares/Third_Party/FreeRTOS/Source/queue.c ****  */
 232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #define prvLockQueue( pxQueue )								\
 233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();									\
 234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{														\
 235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{													\
 241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}													\
 243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}														\
 244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL()
 245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
 254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xNewQueue == pdFALSE )
 263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the queue, then one should be unblocked as after this function exits
 268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			it will be possible to write to it. */
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Ensure the event queues start in the correct state. */
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
 293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	versions. */
 296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return pdPASS;
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		supplied. */
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		should not be provided if the item size is 0. */
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the real queue and semaphore structures. */
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configASSERT_DEFINED */
 326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		The address of a statically allocated storage area was also passed in
 329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		but is already set. */
 330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this queue was allocated statically in case the queue is
 338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				later deleted. */
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	size_t xQueueSizeInBytes;
 362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t *pucQueueStorage;
 363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is not going to be a queue storage area. */
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be in the queue at any time. */
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			storage area. */
 384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Queues can be created either statically or dynamically, so
 389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				note this task was created dynamically in case it is later
 390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				deleted. */
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) ucQueueType;
 413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		value that is known to be within the memory map. */
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
 423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Set the head to the start of the queue storage area. */
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Initialise the queue members as described where the queue type is
 429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	defined. */
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
 451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The queue create function will set all the queue structure members
 457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			correctly for a generic queue, but this function is creating a
 458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in particular the information required for priority inheritance. */
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* In case this is a recursive mutex. */
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Start with the semaphore in the expected state. */
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_MUTEX_FAILED();
 474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) ucQueueType;
 506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxNewQueue;
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
 514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		identity of the mutex holder, as the holder may change between the
 526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		following critical section exiting and the function returning. */
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxReturn = NULL;
 536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( xSemaphore );
 553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not required here. */
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxReturn = NULL;
 564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pxReturn;
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		this is the only condition we are interested in it does not matter if
 585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxRecursiveCallCount member. */
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Has the recursive call count unwound to 0? */
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 12


 601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task that might be waiting to access the mutex. */
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder. */
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
 617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( pxMutex );
 635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xQueueGiveMutexRecursive(). */
 638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			before reaching here. */
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xReturn != pdFAIL )
 654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 13


 658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxMaxCount != 0 );
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xHandle != NULL )
 709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 14


 715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xHandle;
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
 729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
 739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
 743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
 744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
 745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
 747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue is full. */
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_SEND( pxQueue );
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock. A context switch is required. */
 766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 15


 772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* If there was a task waiting for data to arrive on the
 776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queue then unblock it now. */
 777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The unblocked task has a priority higher than
 782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								our own so yield immediately.  Yes it is ok to
 783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								do this from within the critical section - the
 784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								kernel takes care of that. */
 785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else if( xYieldRequired != pdFALSE )
 793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This path is a special case that will only get
 795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							executed if the task was holding multiple mutexes
 796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							and the mutexes were given back in an order that is
 797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							different to that in which they were taken. */
 798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* If there was a task waiting for data to arrive on the
 809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					queue then unblock it now. */
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The unblocked task has a priority higher than
 815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							this from within the critical section - the kernel
 817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							takes care of that. */
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else if( xYieldRequired != pdFALSE )
 826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* This path is a special case that will only get
 828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						executed if the task was holding multiple mutexes and
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 16


 829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the mutexes were given back in an order that is
 830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						different to that in which they were taken. */
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and no block time is specified (or
 848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
 850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Return to the original privilege level before exiting
 852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the function. */
 853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
 855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was full and a block time was specified so
 859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
 864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
 866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
 871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
 874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 17


 886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Unlocking the queue means queue events can effect the
 887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				event list.  It is possible that interrupts occurring now
 888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				remove this task from the event list again - but as the
 889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				scheduler is suspended the task will go onto the pending
 890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready last instead of the actual ready list. */
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				ready list into the ready list - so it is feasible that this
 895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task is already in a ready list before it yields - in which
 896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				case the yield will not cause a context switch unless there
 897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is also a higher priority task in the pending ready list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
 901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
 904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Try again. */
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
 911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired. */
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			return errQUEUE_FULL;
 918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
 927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
 941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 18


 943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
 954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			called here even though the disinherit function does not check if
 966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
 972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The queue is a member of a queue set, and posting
 980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							to the queue set caused a higher priority task to
 981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							unblock.  A context switch is required. */
 982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
 987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
 992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
 997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 19


1000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 20


1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	post). */
1085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if the item size is not 0. */
1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	interrupts, only tasks. */
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 21


1114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		space'. */
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			messages (semaphores) available. */
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			be done when the queue is unlocked later. */
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cTxLock == queueUNLOCKED )
1137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The semaphore is a member of a queue set, and
1145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							posting	to the queue set caused a higher priority
1146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to	unblock.  A context switch is required. */
1147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								/* The task waiting has a higher priority so
1168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								record that a context switch is required. */
1169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 22


1171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								else
1174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								{
1175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								}
1177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
1196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							else
1202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
1203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
1205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was posted while it was locked. */
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 23


1228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = errQUEUE_FULL;
1231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data available, remove one item. */
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				task. */
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 24


1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure. */
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 25


1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data. */
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			back and attempt to read the data. */
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
1387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif
1389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the queue pointer is not NULL. */
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	0. */
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 26


1399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* Record the information required to implement
1432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						priority inheritance should it become necessary. */
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 27


1456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* For inheritance to have occurred there must have been an
1468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if it were 0 the function would have exited. */
1470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					#endif /* configUSE_MUTEXES */
1475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					(or the block time has expired) so exit now. */
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					so configure the timeout structure ready to block. */
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			become available.  As semaphores are implemented with queues the
1510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 28


1513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif
1531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				attempt to take the semaphore again. */
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timed out. */
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* xInheritanceOccurred could only have be set if
1566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
1569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 29


1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskENTER_CRITICAL();
1571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* This task blocking on the mutex caused another
1575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task to inherit this task's priority.  Now this task
1576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							has timed out the priority should be disinherited
1577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							again, but only as low as the next highest priority
1578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							task that is waiting for the same mutex. */
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						taskEXIT_CRITICAL();
1583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				#endif /* configUSE_MUTEXES */
1586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** TimeOut_t xTimeOut;
1603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Check the pointer is not NULL. */
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( ( pxQueue ) );
1608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	is zero (so no data is copied into the buffer. */
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	statements within the function itself.  This is done in the interest
1623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	of execution time efficiency. */
1624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	for( ;; )
1626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 30


1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskENTER_CRITICAL();
1628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			must be the highest priority task wanting to access the queue. */
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Remember the read position so it can be reset after the data
1636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				is read from the queue as this function is only peeking the
1637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				data, not removing it. */
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The data is being left in the queue, so see if there are
1647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				any other tasks waiting for the data. */
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than this task. */
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				taskEXIT_CRITICAL();
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
1667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and no block time is specified (or
1673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the block time has expired) so leave now. */
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					taskEXIT_CRITICAL();
1675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_EMPTY;
1677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* The queue was empty and a block time was specified so
1681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					configure the timeout structure ready to enter the blocked
1682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					state. */
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 31


1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
1685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Entry time was already set. */
1689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		taskEXIT_CRITICAL();
1694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		now the critical section has been exited. */
1697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vTaskSuspendAll();
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
1700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portYIELD_WITHIN_API();
1714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				state, instead return to try and obtain the data. */
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
1726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1729:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1730:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			exit, otherwise go back and try to read the data again. */
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvUnlockQueue( pxQueue );
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
1734:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1737:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return errQUEUE_EMPTY;
1739:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1740:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 32


1741:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1743:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1744:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1745:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1747:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1748:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1749:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1751:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1753:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1754:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1757:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1758:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1759:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1760:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1761:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1762:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1763:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1764:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1765:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1766:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1767:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1768:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1769:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1770:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1771:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1773:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1774:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1775:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1777:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1780:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1782:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1783:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1784:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1787:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* If the queue is locked the event list will not be modified.
1789:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1790:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			will know that an ISR has removed data while the queue was
1791:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			locked. */
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( cRxLock == queueUNLOCKED )
1793:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1795:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1797:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 33


1798:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority than us so
1799:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						force a context switch. */
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1801:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1803:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1804:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
1805:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
1806:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1807:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
1808:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1809:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
1810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
1811:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
1813:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1814:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
1815:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
1816:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1817:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
1818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1819:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
1820:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
1821:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1822:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				knows that data was removed while it was locked. */
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1824:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
1825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1827:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1828:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1829:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1832:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1833:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1834:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1835:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1836:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1838:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1839:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1842:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
1843:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxSavedInterruptStatus;
1844:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** int8_t *pcOriginalReadPosition;
1845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1846:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1850:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1852:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1853:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 34


1855:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1857:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1858:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	assigned a priority above the configured maximum system call priority.
1859:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1862:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1863:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1864:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1866:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1867:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1868:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1869:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1871:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1872:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1873:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1874:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			actually being removed from the queue. */
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
1881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1882:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1883:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
1885:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1886:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1888:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1889:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1890:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1892:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1893:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1894:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1896:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1897:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1899:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1901:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1903:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1905:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1908:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1909:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1910:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 35


1912:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t *pxQueue;
1914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1915:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
1919:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1921:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
1923:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1926:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1927:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1928:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
1931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
1933:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1935:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1936:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return uxReturn;
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1938:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1939:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1940:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
1942:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1943:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue );
1945:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1946:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1948:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1950:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1951:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif
1952:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1953:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1954:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1955:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		again. */
1957:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		vPortFree( pxQueue );
1958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1959:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1960:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1961:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1962:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		check before attempting to free the memory. */
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1964:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vPortFree( pxQueue );
1966:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
1968:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 36


1969:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1970:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
1971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1972:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#else
1973:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1974:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1975:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1976:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) pxQueue;
1977:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1978:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1979:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
1980:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1981:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1982:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1983:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1984:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1986:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1988:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1990:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
1991:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1992:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1993:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1994:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1997:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
1998:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
1999:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2000:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2001:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2002:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2003:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2004:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2006:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2010:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2011:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2012:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if( configUSE_MUTEXES == 1 )
2013:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2014:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2015:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
  29              		.loc 1 2015 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
2016:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2017:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
2019:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		priority, but the waiting task times out, then the holder should
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 37


2020:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2021:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2022:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return the priority of the highest priority task that is waiting for the
2023:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		mutex. */
2024:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  35              		.loc 1 2024 0
  36 0000 436A     		ldr	r3, [r0, #36]
  37 0002 23B1     		cbz	r3, .L3
2025:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  38              		.loc 1 2026 0
  39 0004 036B     		ldr	r3, [r0, #48]
  40 0006 1868     		ldr	r0, [r3]
  41              	.LVL1:
  42 0008 C0F13800 		rsb	r0, r0, #56
  43              	.LVL2:
  44 000c 7047     		bx	lr
  45              	.LVL3:
  46              	.L3:
2027:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2029:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2030:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  47              		.loc 1 2030 0
  48 000e 0020     		movs	r0, #0
  49              	.LVL4:
2031:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2033:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
  50              		.loc 1 2034 0
  51 0010 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE32:
  55 0012 00BF     		.section	.text.prvIsQueueFull,"ax",%progbits
  56              		.align	2
  57              		.thumb
  58              		.thumb_func
  60              	prvIsQueueFull:
  61              	.LFB38:
2035:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_MUTEXES */
2037:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2038:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2039:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
2043:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2044:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* This function is called from a critical section. */
2045:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2047:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2049:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2050:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2051:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 38


2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2053:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2054:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The mutex is no longer being held. */
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2058:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2059:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2061:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2062:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2063:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		#endif /* configUSE_MUTEXES */
2064:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2066:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2070:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2072:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2073:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2074:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2076:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2077:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2078:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2079:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2083:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2085:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2087:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2088:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2089:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( xPosition == queueOVERWRITE )
2092:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2094:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* An item is not being added but overwritten, so subtract
2096:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one from the recorded number of items in the queue so when
2097:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				one is added again below the number of recorded items remains
2098:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				correct. */
2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--uxMessagesWaiting;
2100:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2101:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2102:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2103:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2104:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2105:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2106:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2107:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2108:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 39


2109:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2110:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2113:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2114:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2116:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2117:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2118:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2121:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2124:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2126:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2127:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2128:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2129:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2130:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2133:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2134:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2135:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2138:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2139:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2140:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2141:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2142:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2143:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	updated. */
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2145:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2147:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2148:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if data was added to the queue while it was locked. */
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2150:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2152:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			blocked waiting for data to become available? */
2153:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2154:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2155:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2156:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2157:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2158:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2159:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The queue is a member of a queue set, and posting to
2160:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						the queue set caused a higher priority task to unblock.
2161:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						A context switch is required. */
2162:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2163:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2164:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2165:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 40


2166:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2167:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2168:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2169:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2170:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2171:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* Tasks that are removed from the event list will get
2172:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					added to the pending ready list as the scheduler is still
2173:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					suspended. */
2174:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2175:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2176:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2178:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							/* The task waiting has a higher priority so record that a
2179:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							context	switch is required. */
2180:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskMissedYield();
2181:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2182:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						else
2183:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
2184:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2185:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
2186:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2187:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2188:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2189:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						break;
2190:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2194:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2195:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Tasks that are removed from the event list will get added to
2196:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2198:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2200:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2201:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The task waiting has a higher priority so record that
2202:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						a context switch is required. */
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						vTaskMissedYield();
2204:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2205:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2206:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2207:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2208:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2209:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2210:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2211:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2212:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					break;
2213:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2214:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2215:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
2216:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--cTxLock;
2218:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2219:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2221:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 41


2223:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Do the same for the Rx lock. */
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2226:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2228:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2232:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2234:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vTaskMissedYield();
2236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2237:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2238:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2241:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--cRxLock;
2243:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2244:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2245:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
2247:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2249:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2254:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
2261:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2263:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
2265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2266:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
2269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2270:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
2272:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
2275:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
2279:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 42


2280:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
2285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2286:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2287:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
2289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2290:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2291:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2293:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2294:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2295:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2296:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
  62              		.loc 1 2296 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              	.LVL5:
  67 0000 10B5     		push	{r4, lr}
  68              	.LCFI0:
  69              		.cfi_def_cfa_offset 8
  70              		.cfi_offset 4, -8
  71              		.cfi_offset 14, -4
  72 0002 0446     		mov	r4, r0
2297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskENTER_CRITICAL();
  73              		.loc 1 2299 0
  74 0004 FFF7FEFF 		bl	vPortEnterCritical
  75              	.LVL6:
2300:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2301:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  76              		.loc 1 2301 0
  77 0008 A26B     		ldr	r2, [r4, #56]
  78 000a E36B     		ldr	r3, [r4, #60]
  79 000c 9A42     		cmp	r2, r3
  80 000e 01D1     		bne	.L6
2302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdTRUE;
  81              		.loc 1 2303 0
  82 0010 0124     		movs	r4, #1
  83              	.LVL7:
  84 0012 00E0     		b	.L5
  85              	.LVL8:
  86              	.L6:
2304:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2305:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2307:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFALSE;
  87              		.loc 1 2307 0
  88 0014 0024     		movs	r4, #0
  89              	.LVL9:
  90              	.L5:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 43


2308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2309:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	taskEXIT_CRITICAL();
  91              		.loc 1 2310 0
  92 0016 FFF7FEFF 		bl	vPortExitCritical
  93              	.LVL10:
2311:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2312:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2313:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
  94              		.loc 1 2313 0
  95 001a 2046     		mov	r0, r4
  96 001c 10BD     		pop	{r4, pc}
  97              		.cfi_endproc
  98              	.LFE38:
 100 001e 00BF     		.section	.text.prvIsQueueEmpty,"ax",%progbits
 101              		.align	2
 102              		.thumb
 103              		.thumb_func
 105              	prvIsQueueEmpty:
 106              	.LFB36:
2257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 107              		.loc 1 2257 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 0
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL11:
 112 0000 10B5     		push	{r4, lr}
 113              	.LCFI1:
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 117 0002 0446     		mov	r4, r0
2260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 118              		.loc 1 2260 0
 119 0004 FFF7FEFF 		bl	vPortEnterCritical
 120              	.LVL12:
2262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 121              		.loc 1 2262 0
 122 0008 A36B     		ldr	r3, [r4, #56]
 123 000a 0BB9     		cbnz	r3, .L10
2264:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 124              		.loc 1 2264 0
 125 000c 0124     		movs	r4, #1
 126              	.LVL13:
 127 000e 00E0     		b	.L9
 128              	.LVL14:
 129              	.L10:
2268:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 130              		.loc 1 2268 0
 131 0010 0024     		movs	r4, #0
 132              	.LVL15:
 133              	.L9:
2271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 134              		.loc 1 2271 0
 135 0012 FFF7FEFF 		bl	vPortExitCritical
 136              	.LVL16:
2274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 44


 137              		.loc 1 2274 0
 138 0016 2046     		mov	r0, r4
 139 0018 10BD     		pop	{r4, pc}
 140              		.cfi_endproc
 141              	.LFE36:
 143 001a 00BF     		.section	.text.prvCopyDataToQueue,"ax",%progbits
 144              		.align	2
 145              		.thumb
 146              		.thumb_func
 148              	prvCopyDataToQueue:
 149              	.LFB33:
2040:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn = pdFALSE;
 150              		.loc 1 2040 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 0
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 154              	.LVL17:
 155 0000 70B5     		push	{r4, r5, r6, lr}
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 16
 158              		.cfi_offset 4, -16
 159              		.cfi_offset 5, -12
 160              		.cfi_offset 6, -8
 161              		.cfi_offset 14, -4
 162 0002 0446     		mov	r4, r0
 163 0004 1646     		mov	r6, r2
 164              	.LVL18:
2046:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 165              		.loc 1 2046 0
 166 0006 856B     		ldr	r5, [r0, #56]
 167              	.LVL19:
2048:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 168              		.loc 1 2048 0
 169 0008 026C     		ldr	r2, [r0, #64]
 170              	.LVL20:
 171 000a 3AB9     		cbnz	r2, .L13
2052:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 172              		.loc 1 2052 0
 173 000c 0368     		ldr	r3, [r0]
 174 000e 43BB     		cbnz	r3, .L17
2055:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 175              		.loc 1 2055 0
 176 0010 4068     		ldr	r0, [r0, #4]
 177              	.LVL21:
 178 0012 FFF7FEFF 		bl	xTaskPriorityDisinherit
 179              	.LVL22:
2056:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 180              		.loc 1 2056 0
 181 0016 0023     		movs	r3, #0
 182 0018 6360     		str	r3, [r4, #4]
 183 001a 29E0     		b	.L14
 184              	.LVL23:
 185              	.L13:
2065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 186              		.loc 1 2065 0
 187 001c 6EB9     		cbnz	r6, .L15
2067:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 45


 188              		.loc 1 2067 0
 189 001e 8068     		ldr	r0, [r0, #8]
 190              	.LVL24:
 191 0020 FFF7FEFF 		bl	memcpy
 192              	.LVL25:
2068:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 193              		.loc 1 2068 0
 194 0024 A268     		ldr	r2, [r4, #8]
 195 0026 236C     		ldr	r3, [r4, #64]
 196 0028 1344     		add	r3, r3, r2
 197 002a A360     		str	r3, [r4, #8]
2069:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 198              		.loc 1 2069 0
 199 002c 6268     		ldr	r2, [r4, #4]
 200 002e 9342     		cmp	r3, r2
 201 0030 19D3     		bcc	.L18
2071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 202              		.loc 1 2071 0
 203 0032 2368     		ldr	r3, [r4]
 204 0034 A360     		str	r3, [r4, #8]
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 205              		.loc 1 2041 0
 206 0036 0020     		movs	r0, #0
 207 0038 1AE0     		b	.L14
 208              	.LVL26:
 209              	.L15:
2080:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 210              		.loc 1 2080 0
 211 003a C068     		ldr	r0, [r0, #12]
 212              	.LVL27:
 213 003c FFF7FEFF 		bl	memcpy
 214              	.LVL28:
2081:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 215              		.loc 1 2081 0
 216 0040 236C     		ldr	r3, [r4, #64]
 217 0042 5B42     		negs	r3, r3
 218 0044 E268     		ldr	r2, [r4, #12]
 219 0046 1A44     		add	r2, r2, r3
 220 0048 E260     		str	r2, [r4, #12]
2082:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 221              		.loc 1 2082 0
 222 004a 2168     		ldr	r1, [r4]
 223 004c 8A42     		cmp	r2, r1
 224 004e 02D2     		bcs	.L16
2084:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 225              		.loc 1 2084 0
 226 0050 6268     		ldr	r2, [r4, #4]
 227 0052 1344     		add	r3, r3, r2
 228 0054 E360     		str	r3, [r4, #12]
 229              	.L16:
2091:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 230              		.loc 1 2091 0
 231 0056 022E     		cmp	r6, #2
 232 0058 07D1     		bne	.L19
2093:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 233              		.loc 1 2093 0
 234 005a 45B1     		cbz	r5, .L20
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 46


2099:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 235              		.loc 1 2099 0
 236 005c 013D     		subs	r5, r5, #1
 237              	.LVL29:
2041:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxMessagesWaiting;
 238              		.loc 1 2041 0
 239 005e 0020     		movs	r0, #0
 240 0060 06E0     		b	.L14
 241              	.LVL30:
 242              	.L17:
 243 0062 0020     		movs	r0, #0
 244              	.LVL31:
 245 0064 04E0     		b	.L14
 246              	.LVL32:
 247              	.L18:
 248 0066 0020     		movs	r0, #0
 249 0068 02E0     		b	.L14
 250              	.L19:
 251 006a 0020     		movs	r0, #0
 252 006c 00E0     		b	.L14
 253              	.L20:
 254 006e 0020     		movs	r0, #0
 255              	.LVL33:
 256              	.L14:
2112:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 257              		.loc 1 2112 0
 258 0070 0135     		adds	r5, r5, #1
 259              	.LVL34:
 260 0072 A563     		str	r5, [r4, #56]
2115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 261              		.loc 1 2115 0
 262 0074 70BD     		pop	{r4, r5, r6, pc}
 263              		.cfi_endproc
 264              	.LFE33:
 266 0076 00BF     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 267              		.align	2
 268              		.thumb
 269              		.thumb_func
 271              	prvCopyDataFromQueue:
 272              	.LFB34:
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 273              		.loc 1 2119 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              	.LVL35:
2120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 278              		.loc 1 2120 0
 279 0000 026C     		ldr	r2, [r0, #64]
 280 0002 72B1     		cbz	r2, .L26
2119:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 281              		.loc 1 2119 0
 282 0004 10B5     		push	{r4, lr}
 283              	.LCFI3:
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 4, -8
 286              		.cfi_offset 14, -4
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 47


 287 0006 0346     		mov	r3, r0
2122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 288              		.loc 1 2122 0
 289 0008 C468     		ldr	r4, [r0, #12]
 290 000a 1444     		add	r4, r4, r2
 291 000c C460     		str	r4, [r0, #12]
2123:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 292              		.loc 1 2123 0
 293 000e 4068     		ldr	r0, [r0, #4]
 294              	.LVL36:
 295 0010 8442     		cmp	r4, r0
 296 0012 01D3     		bcc	.L24
2125:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 297              		.loc 1 2125 0
 298 0014 1868     		ldr	r0, [r3]
 299 0016 D860     		str	r0, [r3, #12]
 300              	.L24:
 301 0018 0846     		mov	r0, r1
2131:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 302              		.loc 1 2131 0
 303 001a D968     		ldr	r1, [r3, #12]
 304              	.LVL37:
 305 001c FFF7FEFF 		bl	memcpy
 306              	.LVL38:
 307 0020 10BD     		pop	{r4, pc}
 308              	.LVL39:
 309              	.L26:
 310              	.LCFI4:
 311              		.cfi_def_cfa_offset 0
 312              		.cfi_restore 4
 313              		.cfi_restore 14
 314 0022 7047     		bx	lr
 315              		.cfi_endproc
 316              	.LFE34:
 318              		.section	.text.prvUnlockQueue,"ax",%progbits
 319              		.align	2
 320              		.thumb
 321              		.thumb_func
 323              	prvUnlockQueue:
 324              	.LFB35:
2137:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 325              		.loc 1 2137 0
 326              		.cfi_startproc
 327              		@ args = 0, pretend = 0, frame = 0
 328              		@ frame_needed = 0, uses_anonymous_args = 0
 329              	.LVL40:
 330 0000 38B5     		push	{r3, r4, r5, lr}
 331              	.LCFI5:
 332              		.cfi_def_cfa_offset 16
 333              		.cfi_offset 3, -16
 334              		.cfi_offset 4, -12
 335              		.cfi_offset 5, -8
 336              		.cfi_offset 14, -4
 337 0002 0546     		mov	r5, r0
2144:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 338              		.loc 1 2144 0
 339 0004 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 48


 340              	.LVL41:
 341              	.LBB118:
2146:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 342              		.loc 1 2146 0
 343 0008 95F84540 		ldrb	r4, [r5, #69]	@ zero_extendqisi2
 344 000c 64B2     		sxtb	r4, r4
 345              	.LVL42:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 346              		.loc 1 2149 0
 347 000e 0AE0     		b	.L28
 348              	.L31:
2197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 349              		.loc 1 2197 0
 350 0010 6B6A     		ldr	r3, [r5, #36]
 351 0012 53B1     		cbz	r3, .L29
2199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 352              		.loc 1 2199 0
 353 0014 05F12400 		add	r0, r5, #36
 354 0018 FFF7FEFF 		bl	xTaskRemoveFromEventList
 355              	.LVL43:
 356 001c 08B1     		cbz	r0, .L30
2203:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 357              		.loc 1 2203 0
 358 001e FFF7FEFF 		bl	vTaskMissedYield
 359              	.LVL44:
 360              	.L30:
2217:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 361              		.loc 1 2217 0
 362 0022 013C     		subs	r4, r4, #1
 363              	.LVL45:
 364 0024 64B2     		sxtb	r4, r4
 365              	.LVL46:
 366              	.L28:
2149:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 367              		.loc 1 2149 0
 368 0026 002C     		cmp	r4, #0
 369 0028 F2DC     		bgt	.L31
 370              	.L29:
2220:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 371              		.loc 1 2220 0
 372 002a FF23     		movs	r3, #255
 373 002c 85F84530 		strb	r3, [r5, #69]
 374              	.LBE118:
2222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 375              		.loc 1 2222 0
 376 0030 FFF7FEFF 		bl	vPortExitCritical
 377              	.LVL47:
2225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 378              		.loc 1 2225 0
 379 0034 FFF7FEFF 		bl	vPortEnterCritical
 380              	.LVL48:
 381              	.LBB119:
2227:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 382              		.loc 1 2227 0
 383 0038 95F84440 		ldrb	r4, [r5, #68]	@ zero_extendqisi2
 384              	.LVL49:
 385 003c 64B2     		sxtb	r4, r4
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 49


 386              	.LVL50:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 387              		.loc 1 2229 0
 388 003e 0AE0     		b	.L32
 389              	.L35:
2231:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 390              		.loc 1 2231 0
 391 0040 2B69     		ldr	r3, [r5, #16]
 392 0042 53B1     		cbz	r3, .L33
2233:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 393              		.loc 1 2233 0
 394 0044 05F11000 		add	r0, r5, #16
 395 0048 FFF7FEFF 		bl	xTaskRemoveFromEventList
 396              	.LVL51:
 397 004c 08B1     		cbz	r0, .L34
2235:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 398              		.loc 1 2235 0
 399 004e FFF7FEFF 		bl	vTaskMissedYield
 400              	.LVL52:
 401              	.L34:
2242:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 402              		.loc 1 2242 0
 403 0052 013C     		subs	r4, r4, #1
 404              	.LVL53:
 405 0054 64B2     		sxtb	r4, r4
 406              	.LVL54:
 407              	.L32:
2229:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 408              		.loc 1 2229 0
 409 0056 002C     		cmp	r4, #0
 410 0058 F2DC     		bgt	.L35
 411              	.L33:
2250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 412              		.loc 1 2250 0
 413 005a FF23     		movs	r3, #255
 414 005c 85F84430 		strb	r3, [r5, #68]
 415              	.LBE119:
2252:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** }
 416              		.loc 1 2252 0
 417 0060 FFF7FEFF 		bl	vPortExitCritical
 418              	.LVL55:
 419 0064 38BD     		pop	{r3, r4, r5, pc}
 420              		.cfi_endproc
 421              	.LFE35:
 423 0066 00BF     		.section	.text.xQueueGenericReset,"ax",%progbits
 424              		.align	2
 425              		.global	xQueueGenericReset
 426              		.thumb
 427              		.thumb_func
 429              	xQueueGenericReset:
 430              	.LFB4:
 248:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 431              		.loc 1 248 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL56:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 50


 436 0000 38B5     		push	{r3, r4, r5, lr}
 437              	.LCFI6:
 438              		.cfi_def_cfa_offset 16
 439              		.cfi_offset 3, -16
 440              		.cfi_offset 4, -12
 441              		.cfi_offset 5, -8
 442              		.cfi_offset 14, -4
 443              	.LVL57:
 251:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 444              		.loc 1 251 0
 445 0002 40B9     		cbnz	r0, .L38
 446              	.LBB120:
 447              	.LBB121:
 448              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 51


  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 52


 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 53


 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 449              		.loc 2 195 0
 450              		.syntax unified
 451              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 452 0004 4FF05003 			mov r3, #80												
 453 0008 83F31188 		msr basepri, r3											
 454 000c BFF36F8F 		isb														
 455 0010 BFF34F8F 		dsb														
 456              	
 457              	@ 0 "" 2
 458              	.LVL58:
 459              		.thumb
 460              		.syntax unified
 461              	.L39:
 462 0014 FEE7     		b	.L39
 463              	.L38:
 464 0016 0446     		mov	r4, r0
 465 0018 0D46     		mov	r5, r1
 466              	.LBE121:
 467              	.LBE120:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 54


 253:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 468              		.loc 1 253 0
 469 001a FFF7FEFF 		bl	vPortEnterCritical
 470              	.LVL59:
 255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 471              		.loc 1 255 0
 472 001e 2168     		ldr	r1, [r4]
 473 0020 E26B     		ldr	r2, [r4, #60]
 474 0022 236C     		ldr	r3, [r4, #64]
 475 0024 03FB0210 		mla	r0, r3, r2, r1
 476 0028 6060     		str	r0, [r4, #4]
 256:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 477              		.loc 1 256 0
 478 002a 0020     		movs	r0, #0
 479 002c A063     		str	r0, [r4, #56]
 257:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 480              		.loc 1 257 0
 481 002e A160     		str	r1, [r4, #8]
 258:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 482              		.loc 1 258 0
 483 0030 013A     		subs	r2, r2, #1
 484 0032 02FB0313 		mla	r3, r2, r3, r1
 485 0036 E360     		str	r3, [r4, #12]
 259:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 486              		.loc 1 259 0
 487 0038 FF23     		movs	r3, #255
 488 003a 84F84430 		strb	r3, [r4, #68]
 260:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 489              		.loc 1 260 0
 490 003e 84F84530 		strb	r3, [r4, #69]
 262:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 491              		.loc 1 262 0
 492 0042 7DB9     		cbnz	r5, .L40
 269:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 493              		.loc 1 269 0
 494 0044 2369     		ldr	r3, [r4, #16]
 495 0046 ABB1     		cbz	r3, .L41
 271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 496              		.loc 1 271 0
 497 0048 04F11000 		add	r0, r4, #16
 498 004c FFF7FEFF 		bl	xTaskRemoveFromEventList
 499              	.LVL60:
 500 0050 80B1     		cbz	r0, .L41
 273:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 501              		.loc 1 273 0
 502 0052 4FF08052 		mov	r2, #268435456
 503 0056 094B     		ldr	r3, .L43
 504 0058 1A60     		str	r2, [r3]
 505              		.syntax unified
 506              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 507 005a BFF34F8F 		dsb
 508              	@ 0 "" 2
 509              	@ 273 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 510 005e BFF36F8F 		isb
 511              	@ 0 "" 2
 512              		.thumb
 513              		.syntax unified
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 55


 514 0062 07E0     		b	.L41
 515              	.L40:
 288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 516              		.loc 1 288 0
 517 0064 04F11000 		add	r0, r4, #16
 518 0068 FFF7FEFF 		bl	vListInitialise
 519              	.LVL61:
 289:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 520              		.loc 1 289 0
 521 006c 04F12400 		add	r0, r4, #36
 522 0070 FFF7FEFF 		bl	vListInitialise
 523              	.LVL62:
 524              	.L41:
 292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 525              		.loc 1 292 0
 526 0074 FFF7FEFF 		bl	vPortExitCritical
 527              	.LVL63:
 297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 528              		.loc 1 297 0
 529 0078 0120     		movs	r0, #1
 530 007a 38BD     		pop	{r3, r4, r5, pc}
 531              	.LVL64:
 532              	.L44:
 533              		.align	2
 534              	.L43:
 535 007c 04ED00E0 		.word	-536810236
 536              		.cfi_endproc
 537              	.LFE4:
 539              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 540              		.align	2
 541              		.thumb
 542              		.thumb_func
 544              	prvInitialiseNewQueue:
 545              	.LFB7:
 409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	/* Remove compiler warnings about unused parameters should
 546              		.loc 1 409 0
 547              		.cfi_startproc
 548              		@ args = 4, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              	.LVL65:
 551 0000 38B5     		push	{r3, r4, r5, lr}
 552              	.LCFI7:
 553              		.cfi_def_cfa_offset 16
 554              		.cfi_offset 3, -16
 555              		.cfi_offset 4, -12
 556              		.cfi_offset 5, -8
 557              		.cfi_offset 14, -4
 558 0002 1D46     		mov	r5, r3
 559 0004 049C     		ldr	r4, [sp, #16]
 414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 560              		.loc 1 414 0
 561 0006 0B46     		mov	r3, r1
 562              	.LVL66:
 563 0008 09B9     		cbnz	r1, .L46
 420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 564              		.loc 1 420 0
 565 000a 2460     		str	r4, [r4]
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 56


 566 000c 00E0     		b	.L47
 567              	.L46:
 425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 568              		.loc 1 425 0
 569 000e 2260     		str	r2, [r4]
 570              	.L47:
 430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 571              		.loc 1 430 0
 572 0010 E063     		str	r0, [r4, #60]
 431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 573              		.loc 1 431 0
 574 0012 2364     		str	r3, [r4, #64]
 432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 575              		.loc 1 432 0
 576 0014 0121     		movs	r1, #1
 577              	.LVL67:
 578 0016 2046     		mov	r0, r4
 579              	.LVL68:
 580 0018 FFF7FEFF 		bl	xQueueGenericReset
 581              	.LVL69:
 436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 582              		.loc 1 436 0
 583 001c 84F84C50 		strb	r5, [r4, #76]
 584 0020 38BD     		pop	{r3, r4, r5, pc}
 585              		.cfi_endproc
 586              	.LFE7:
 588 0022 00BF     		.section	.text.xQueueGenericCreateStatic,"ax",%progbits
 589              		.align	2
 590              		.global	xQueueGenericCreateStatic
 591              		.thumb
 592              		.thumb_func
 594              	xQueueGenericCreateStatic:
 595              	.LFB5:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 596              		.loc 1 303 0
 597              		.cfi_startproc
 598              		@ args = 4, pretend = 0, frame = 8
 599              		@ frame_needed = 0, uses_anonymous_args = 0
 600              	.LVL70:
 306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 601              		.loc 1 306 0
 602 0000 40B9     		cbnz	r0, .L50
 603              	.LBB122:
 604              	.LBB123:
 605              		.loc 2 195 0
 606              		.syntax unified
 607              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 608 0002 4FF05003 			mov r3, #80												
 609 0006 83F31188 		msr basepri, r3											
 610 000a BFF36F8F 		isb														
 611 000e BFF34F8F 		dsb														
 612              	
 613              	@ 0 "" 2
 614              	.LVL71:
 615              		.thumb
 616              		.syntax unified
 617              	.L51:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 57


 618 0012 FEE7     		b	.L51
 619              	.LVL72:
 620              	.L50:
 621              	.LBE123:
 622              	.LBE122:
 303:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 623              		.loc 1 303 0
 624 0014 10B5     		push	{r4, lr}
 625              	.LCFI8:
 626              		.cfi_def_cfa_offset 8
 627              		.cfi_offset 4, -8
 628              		.cfi_offset 14, -4
 629 0016 84B0     		sub	sp, sp, #16
 630              	.LCFI9:
 631              		.cfi_def_cfa_offset 24
 632 0018 0446     		mov	r4, r0
 310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 633              		.loc 1 310 0
 634 001a 43B9     		cbnz	r3, .L52
 635              	.LBB124:
 636              	.LBB125:
 637              		.loc 2 195 0
 638              		.syntax unified
 639              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 640 001c 4FF05003 			mov r3, #80												
 641 0020 83F31188 		msr basepri, r3											
 642 0024 BFF36F8F 		isb														
 643 0028 BFF34F8F 		dsb														
 644              	
 645              	@ 0 "" 2
 646              	.LVL73:
 647              		.thumb
 648              		.syntax unified
 649              	.L53:
 650 002c FEE7     		b	.L53
 651              	.LVL74:
 652              	.L52:
 653              	.LBE125:
 654              	.LBE124:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 655              		.loc 1 314 0
 656 002e 12B1     		cbz	r2, .L63
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 657              		.loc 1 314 0 is_stmt 0 discriminator 2
 658 0030 19B1     		cbz	r1, .L64
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 659              		.loc 1 314 0
 660 0032 0120     		movs	r0, #1
 661              	.LVL75:
 662 0034 02E0     		b	.L54
 663              	.LVL76:
 664              	.L63:
 665 0036 0120     		movs	r0, #1
 666              	.LVL77:
 667 0038 00E0     		b	.L54
 668              	.LVL78:
 669              	.L64:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 58


 670 003a 0020     		movs	r0, #0
 671              	.LVL79:
 672              	.L54:
 314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 673              		.loc 1 314 0 discriminator 6
 674 003c 40B9     		cbnz	r0, .L55
 675              	.LBB126:
 676              	.LBB127:
 677              		.loc 2 195 0 is_stmt 1
 678              		.syntax unified
 679              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 680 003e 4FF05003 			mov r3, #80												
 681 0042 83F31188 		msr basepri, r3											
 682 0046 BFF36F8F 		isb														
 683 004a BFF34F8F 		dsb														
 684              	
 685              	@ 0 "" 2
 686              	.LVL80:
 687              		.thumb
 688              		.syntax unified
 689              	.L56:
 690 004e FEE7     		b	.L56
 691              	.LVL81:
 692              	.L55:
 693              	.LBE127:
 694              	.LBE126:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 695              		.loc 1 315 0
 696 0050 12B9     		cbnz	r2, .L65
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 697              		.loc 1 315 0 is_stmt 0 discriminator 2
 698 0052 19B9     		cbnz	r1, .L66
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 699              		.loc 1 315 0
 700 0054 0120     		movs	r0, #1
 701 0056 02E0     		b	.L57
 702              	.L65:
 703 0058 0120     		movs	r0, #1
 704 005a 00E0     		b	.L57
 705              	.L66:
 706 005c 0020     		movs	r0, #0
 707              	.L57:
 315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 708              		.loc 1 315 0 discriminator 6
 709 005e 40B9     		cbnz	r0, .L58
 710              	.LBB128:
 711              	.LBB129:
 712              		.loc 2 195 0 is_stmt 1
 713              		.syntax unified
 714              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 715 0060 4FF05003 			mov r3, #80												
 716 0064 83F31188 		msr basepri, r3											
 717 0068 BFF36F8F 		isb														
 718 006c BFF34F8F 		dsb														
 719              	
 720              	@ 0 "" 2
 721              	.LVL82:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 59


 722              		.thumb
 723              		.syntax unified
 724              	.L59:
 725 0070 FEE7     		b	.L59
 726              	.LVL83:
 727              	.L58:
 728              	.LBE129:
 729              	.LBE128:
 730              	.LBB130:
 322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 731              		.loc 1 322 0
 732 0072 5020     		movs	r0, #80
 733 0074 0390     		str	r0, [sp, #12]
 323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 734              		.loc 1 323 0
 735 0076 0398     		ldr	r0, [sp, #12]
 736 0078 5028     		cmp	r0, #80
 737 007a 08D0     		beq	.L60
 738              	.LBB131:
 739              	.LBB132:
 740              		.loc 2 195 0
 741              		.syntax unified
 742              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 743 007c 4FF05003 			mov r3, #80												
 744 0080 83F31188 		msr basepri, r3											
 745 0084 BFF36F8F 		isb														
 746 0088 BFF34F8F 		dsb														
 747              	
 748              	@ 0 "" 2
 749              	.LVL84:
 750              		.thumb
 751              		.syntax unified
 752              	.L61:
 753 008c FEE7     		b	.L61
 754              	.LVL85:
 755              	.L60:
 756 008e 2046     		mov	r0, r4
 757 0090 1C46     		mov	r4, r3
 758              	.LVL86:
 759              	.LBE132:
 760              	.LBE131:
 761              	.LBE130:
 332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 762              		.loc 1 332 0
 763 0092 3BB1     		cbz	r3, .L62
 764              	.LVL87:
 339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 765              		.loc 1 339 0
 766 0094 0123     		movs	r3, #1
 767              	.LVL88:
 768 0096 84F84630 		strb	r3, [r4, #70]
 343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 769              		.loc 1 343 0
 770 009a 0094     		str	r4, [sp]
 771 009c 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 772 00a0 FFF7FEFF 		bl	prvInitialiseNewQueue
 773              	.LVL89:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 60


 774              	.L62:
 351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 775              		.loc 1 351 0
 776 00a4 2046     		mov	r0, r4
 777 00a6 04B0     		add	sp, sp, #16
 778              	.LCFI10:
 779              		.cfi_def_cfa_offset 8
 780              		@ sp needed
 781 00a8 10BD     		pop	{r4, pc}
 782              		.cfi_endproc
 783              	.LFE5:
 785 00aa 00BF     		.section	.text.xQueueGenericCreate,"ax",%progbits
 786              		.align	2
 787              		.global	xQueueGenericCreate
 788              		.thumb
 789              		.thumb_func
 791              	xQueueGenericCreate:
 792              	.LFB6:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 793              		.loc 1 359 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL90:
 364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 798              		.loc 1 364 0
 799 0000 40B9     		cbnz	r0, .L69
 800              	.LBB133:
 801              	.LBB134:
 802              		.loc 2 195 0
 803              		.syntax unified
 804              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 805 0002 4FF05003 			mov r3, #80												
 806 0006 83F31188 		msr basepri, r3											
 807 000a BFF36F8F 		isb														
 808 000e BFF34F8F 		dsb														
 809              	
 810              	@ 0 "" 2
 811              	.LVL91:
 812              		.thumb
 813              		.syntax unified
 814              	.L70:
 815 0012 FEE7     		b	.L70
 816              	.L69:
 817              	.LBE134:
 818              	.LBE133:
 359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 819              		.loc 1 359 0
 820 0014 F0B5     		push	{r4, r5, r6, r7, lr}
 821              	.LCFI11:
 822              		.cfi_def_cfa_offset 20
 823              		.cfi_offset 4, -20
 824              		.cfi_offset 5, -16
 825              		.cfi_offset 6, -12
 826              		.cfi_offset 7, -8
 827              		.cfi_offset 14, -4
 828 0016 83B0     		sub	sp, sp, #12
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 61


 829              	.LCFI12:
 830              		.cfi_def_cfa_offset 32
 831 0018 0346     		mov	r3, r0
 366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 832              		.loc 1 366 0
 833 001a 11B1     		cbz	r1, .L73
 375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 834              		.loc 1 375 0
 835 001c 01FB00F0 		mul	r0, r1, r0
 836              	.LVL92:
 837 0020 00E0     		b	.L71
 838              	.LVL93:
 839              	.L73:
 369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 840              		.loc 1 369 0
 841 0022 0020     		movs	r0, #0
 842              	.LVL94:
 843              	.L71:
 844 0024 1E46     		mov	r6, r3
 845 0026 1746     		mov	r7, r2
 846 0028 0C46     		mov	r4, r1
 847              	.LVL95:
 378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 848              		.loc 1 378 0
 849 002a 5030     		adds	r0, r0, #80
 850              	.LVL96:
 851 002c FFF7FEFF 		bl	pvPortMalloc
 852              	.LVL97:
 380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 853              		.loc 1 380 0
 854 0030 0546     		mov	r5, r0
 855 0032 50B1     		cbz	r0, .L72
 856              	.LVL98:
 391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 857              		.loc 1 391 0
 858 0034 0023     		movs	r3, #0
 859 0036 80F84630 		strb	r3, [r0, #70]
 395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 860              		.loc 1 395 0
 861 003a 0090     		str	r0, [sp]
 862 003c 3B46     		mov	r3, r7
 863 003e 00F15002 		add	r2, r0, #80
 864              	.LVL99:
 865 0042 2146     		mov	r1, r4
 866 0044 3046     		mov	r0, r6
 867              	.LVL100:
 868 0046 FFF7FEFF 		bl	prvInitialiseNewQueue
 869              	.LVL101:
 870              	.L72:
 403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 871              		.loc 1 403 0
 872 004a 2846     		mov	r0, r5
 873 004c 03B0     		add	sp, sp, #12
 874              	.LCFI13:
 875              		.cfi_def_cfa_offset 20
 876              		@ sp needed
 877 004e F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 62


 878              		.cfi_endproc
 879              	.LFE6:
 881              		.section	.text.xQueueGetMutexHolder,"ax",%progbits
 882              		.align	2
 883              		.global	xQueueGetMutexHolder
 884              		.thumb
 885              		.thumb_func
 887              	xQueueGetMutexHolder:
 888              	.LFB11:
 519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 889              		.loc 1 519 0
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 0
 892              		@ frame_needed = 0, uses_anonymous_args = 0
 893              	.LVL102:
 894 0000 10B5     		push	{r4, lr}
 895              	.LCFI14:
 896              		.cfi_def_cfa_offset 8
 897              		.cfi_offset 4, -8
 898              		.cfi_offset 14, -4
 899 0002 0446     		mov	r4, r0
 527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 900              		.loc 1 527 0
 901 0004 FFF7FEFF 		bl	vPortEnterCritical
 902              	.LVL103:
 529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 903              		.loc 1 529 0
 904 0008 2368     		ldr	r3, [r4]
 905 000a 0BB9     		cbnz	r3, .L77
 531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 906              		.loc 1 531 0
 907 000c 6468     		ldr	r4, [r4, #4]
 908              	.LVL104:
 909 000e 00E0     		b	.L76
 910              	.LVL105:
 911              	.L77:
 535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 912              		.loc 1 535 0
 913 0010 0024     		movs	r4, #0
 914              	.LVL106:
 915              	.L76:
 538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 916              		.loc 1 538 0
 917 0012 FFF7FEFF 		bl	vPortExitCritical
 918              	.LVL107:
 541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 919              		.loc 1 541 0
 920 0016 2046     		mov	r0, r4
 921 0018 10BD     		pop	{r4, pc}
 922              		.cfi_endproc
 923              	.LFE11:
 925 001a 00BF     		.section	.text.xQueueGetMutexHolderFromISR,"ax",%progbits
 926              		.align	2
 927              		.global	xQueueGetMutexHolderFromISR
 928              		.thumb
 929              		.thumb_func
 931              	xQueueGetMutexHolderFromISR:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 63


 932              	.LFB12:
 549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void *pxReturn;
 933              		.loc 1 549 0
 934              		.cfi_startproc
 935              		@ args = 0, pretend = 0, frame = 0
 936              		@ frame_needed = 0, uses_anonymous_args = 0
 937              		@ link register save eliminated.
 938              	.LVL108:
 552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 939              		.loc 1 552 0
 940 0000 40B9     		cbnz	r0, .L80
 941              	.LBB135:
 942              	.LBB136:
 943              		.loc 2 195 0
 944              		.syntax unified
 945              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 946 0002 4FF05003 			mov r3, #80												
 947 0006 83F31188 		msr basepri, r3											
 948 000a BFF36F8F 		isb														
 949 000e BFF34F8F 		dsb														
 950              	
 951              	@ 0 "" 2
 952              	.LVL109:
 953              		.thumb
 954              		.syntax unified
 955              	.L81:
 956 0012 FEE7     		b	.L81
 957              	.L80:
 958              	.LBE136:
 959              	.LBE135:
 557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 960              		.loc 1 557 0
 961 0014 0268     		ldr	r2, [r0]
 962 0016 0AB9     		cbnz	r2, .L83
 559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 963              		.loc 1 559 0
 964 0018 4068     		ldr	r0, [r0, #4]
 965              	.LVL110:
 966 001a 7047     		bx	lr
 967              	.LVL111:
 968              	.L83:
 563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 969              		.loc 1 563 0
 970 001c 0020     		movs	r0, #0
 971              	.LVL112:
 567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 972              		.loc 1 567 0
 973 001e 7047     		bx	lr
 974              		.cfi_endproc
 975              	.LFE12:
 977              		.section	.text.xQueueCreateCountingSemaphoreStatic,"ax",%progbits
 978              		.align	2
 979              		.global	xQueueCreateCountingSemaphoreStatic
 980              		.thumb
 981              		.thumb_func
 983              	xQueueCreateCountingSemaphoreStatic:
 984              	.LFB15:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 64


 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 985              		.loc 1 672 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              	.LVL113:
 675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 990              		.loc 1 675 0
 991 0000 40B9     		cbnz	r0, .L85
 992              	.LBB137:
 993              	.LBB138:
 994              		.loc 2 195 0
 995              		.syntax unified
 996              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 997 0002 4FF05003 			mov r3, #80												
 998 0006 83F31188 		msr basepri, r3											
 999 000a BFF36F8F 		isb														
 1000 000e BFF34F8F 		dsb														
 1001              	
 1002              	@ 0 "" 2
 1003              	.LVL114:
 1004              		.thumb
 1005              		.syntax unified
 1006              	.L86:
 1007 0012 FEE7     		b	.L86
 1008              	.L85:
 1009              	.LBE138:
 1010              	.LBE137:
 676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1011              		.loc 1 676 0
 1012 0014 8842     		cmp	r0, r1
 1013 0016 08D2     		bcs	.L87
 1014              	.LBB139:
 1015              	.LBB140:
 1016              		.loc 2 195 0
 1017              		.syntax unified
 1018              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1019 0018 4FF05003 			mov r3, #80												
 1020 001c 83F31188 		msr basepri, r3											
 1021 0020 BFF36F8F 		isb														
 1022 0024 BFF34F8F 		dsb														
 1023              	
 1024              	@ 0 "" 2
 1025              	.LVL115:
 1026              		.thumb
 1027              		.syntax unified
 1028              	.L88:
 1029 0028 FEE7     		b	.L88
 1030              	.L87:
 1031              	.LBE140:
 1032              	.LBE139:
 672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1033              		.loc 1 672 0
 1034 002a 10B5     		push	{r4, lr}
 1035              	.LCFI15:
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 4, -8
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 65


 1038              		.cfi_offset 14, -4
 1039 002c 82B0     		sub	sp, sp, #8
 1040              	.LCFI16:
 1041              		.cfi_def_cfa_offset 16
 1042 002e 1346     		mov	r3, r2
 1043 0030 0C46     		mov	r4, r1
 678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1044              		.loc 1 678 0
 1045 0032 0222     		movs	r2, #2
 1046              	.LVL116:
 1047 0034 0092     		str	r2, [sp]
 1048 0036 0022     		movs	r2, #0
 1049 0038 1146     		mov	r1, r2
 1050              	.LVL117:
 1051 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 1052              	.LVL118:
 680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1053              		.loc 1 680 0
 1054 003e 0346     		mov	r3, r0
 1055 0040 00B1     		cbz	r0, .L89
 682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1056              		.loc 1 682 0
 1057 0042 8463     		str	r4, [r0, #56]
 1058              	.L89:
 692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1059              		.loc 1 692 0
 1060 0044 1846     		mov	r0, r3
 1061              	.LVL119:
 1062 0046 02B0     		add	sp, sp, #8
 1063              	.LCFI17:
 1064              		.cfi_def_cfa_offset 8
 1065              		@ sp needed
 1066 0048 10BD     		pop	{r4, pc}
 1067              		.cfi_endproc
 1068              	.LFE15:
 1070 004a 00BF     		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 1071              		.align	2
 1072              		.global	xQueueCreateCountingSemaphore
 1073              		.thumb
 1074              		.thumb_func
 1076              	xQueueCreateCountingSemaphore:
 1077              	.LFB16:
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1078              		.loc 1 700 0
 1079              		.cfi_startproc
 1080              		@ args = 0, pretend = 0, frame = 0
 1081              		@ frame_needed = 0, uses_anonymous_args = 0
 1082              	.LVL120:
 703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 1083              		.loc 1 703 0
 1084 0000 40B9     		cbnz	r0, .L92
 1085              	.LBB141:
 1086              	.LBB142:
 1087              		.loc 2 195 0
 1088              		.syntax unified
 1089              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1090 0002 4FF05003 			mov r3, #80												
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 66


 1091 0006 83F31188 		msr basepri, r3											
 1092 000a BFF36F8F 		isb														
 1093 000e BFF34F8F 		dsb														
 1094              	
 1095              	@ 0 "" 2
 1096              	.LVL121:
 1097              		.thumb
 1098              		.syntax unified
 1099              	.L93:
 1100 0012 FEE7     		b	.L93
 1101              	.L92:
 1102              	.LBE142:
 1103              	.LBE141:
 704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1104              		.loc 1 704 0
 1105 0014 8842     		cmp	r0, r1
 1106 0016 08D2     		bcs	.L94
 1107              	.LBB143:
 1108              	.LBB144:
 1109              		.loc 2 195 0
 1110              		.syntax unified
 1111              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1112 0018 4FF05003 			mov r3, #80												
 1113 001c 83F31188 		msr basepri, r3											
 1114 0020 BFF36F8F 		isb														
 1115 0024 BFF34F8F 		dsb														
 1116              	
 1117              	@ 0 "" 2
 1118              	.LVL122:
 1119              		.thumb
 1120              		.syntax unified
 1121              	.L95:
 1122 0028 FEE7     		b	.L95
 1123              	.L94:
 1124              	.LBE144:
 1125              	.LBE143:
 700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	QueueHandle_t xHandle;
 1126              		.loc 1 700 0
 1127 002a 10B5     		push	{r4, lr}
 1128              	.LCFI18:
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 4, -8
 1131              		.cfi_offset 14, -4
 1132 002c 0C46     		mov	r4, r1
 706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1133              		.loc 1 706 0
 1134 002e 0222     		movs	r2, #2
 1135 0030 0021     		movs	r1, #0
 1136              	.LVL123:
 1137 0032 FFF7FEFF 		bl	xQueueGenericCreate
 1138              	.LVL124:
 708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1139              		.loc 1 708 0
 1140 0036 0346     		mov	r3, r0
 1141 0038 00B1     		cbz	r0, .L96
 710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1142              		.loc 1 710 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 67


 1143 003a 8463     		str	r4, [r0, #56]
 1144              	.L96:
 720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1145              		.loc 1 720 0
 1146 003c 1846     		mov	r0, r3
 1147              	.LVL125:
 1148 003e 10BD     		pop	{r4, pc}
 1149              		.cfi_endproc
 1150              	.LFE16:
 1152              		.section	.text.xQueueGenericSend,"ax",%progbits
 1153              		.align	2
 1154              		.global	xQueueGenericSend
 1155              		.thumb
 1156              		.thumb_func
 1158              	xQueueGenericSend:
 1159              	.LFB17:
 726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 1160              		.loc 1 726 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 16
 1163              		@ frame_needed = 0, uses_anonymous_args = 0
 1164              	.LVL126:
 1165 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1166              	.LCFI19:
 1167              		.cfi_def_cfa_offset 20
 1168              		.cfi_offset 4, -20
 1169              		.cfi_offset 5, -16
 1170              		.cfi_offset 6, -12
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 85B0     		sub	sp, sp, #20
 1174              	.LCFI20:
 1175              		.cfi_def_cfa_offset 40
 1176 0004 0192     		str	r2, [sp, #4]
 1177              	.LVL127:
 731:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1178              		.loc 1 731 0
 1179 0006 40B9     		cbnz	r0, .L99
 1180              	.LBB145:
 1181              	.LBB146:
 1182              		.loc 2 195 0
 1183              		.syntax unified
 1184              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1185 0008 4FF05003 			mov r3, #80												
 1186 000c 83F31188 		msr basepri, r3											
 1187 0010 BFF36F8F 		isb														
 1188 0014 BFF34F8F 		dsb														
 1189              	
 1190              	@ 0 "" 2
 1191              	.LVL128:
 1192              		.thumb
 1193              		.syntax unified
 1194              	.L100:
 1195 0018 FEE7     		b	.L100
 1196              	.LVL129:
 1197              	.L99:
 1198 001a 0446     		mov	r4, r0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 68


 1199              	.LBE146:
 1200              	.LBE145:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1201              		.loc 1 732 0
 1202 001c 19B9     		cbnz	r1, .L122
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1203              		.loc 1 732 0 is_stmt 0 discriminator 2
 1204 001e 026C     		ldr	r2, [r0, #64]
 1205              	.LVL130:
 1206 0020 1AB9     		cbnz	r2, .L123
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1207              		.loc 1 732 0
 1208 0022 0122     		movs	r2, #1
 1209 0024 02E0     		b	.L101
 1210              	.LVL131:
 1211              	.L122:
 1212 0026 0122     		movs	r2, #1
 1213              	.LVL132:
 1214 0028 00E0     		b	.L101
 1215              	.L123:
 1216 002a 0022     		movs	r2, #0
 1217              	.L101:
 732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1218              		.loc 1 732 0 discriminator 6
 1219 002c 42B9     		cbnz	r2, .L102
 1220              	.LBB147:
 1221              	.LBB148:
 1222              		.loc 2 195 0 is_stmt 1
 1223              		.syntax unified
 1224              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1225 002e 4FF05003 			mov r3, #80												
 1226 0032 83F31188 		msr basepri, r3											
 1227 0036 BFF36F8F 		isb														
 1228 003a BFF34F8F 		dsb														
 1229              	
 1230              	@ 0 "" 2
 1231              	.LVL133:
 1232              		.thumb
 1233              		.syntax unified
 1234              	.L103:
 1235 003e FEE7     		b	.L103
 1236              	.LVL134:
 1237              	.L102:
 1238              	.LBE148:
 1239              	.LBE147:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1240              		.loc 1 733 0
 1241 0040 022B     		cmp	r3, #2
 1242 0042 03D1     		bne	.L124
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1243              		.loc 1 733 0 is_stmt 0 discriminator 2
 1244 0044 E26B     		ldr	r2, [r4, #60]
 1245 0046 012A     		cmp	r2, #1
 1246 0048 02D1     		bne	.L125
 1247 004a 02E0     		b	.L104
 1248              	.L124:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 69


 1249              		.loc 1 733 0
 1250 004c 0122     		movs	r2, #1
 1251 004e 00E0     		b	.L104
 1252              	.L125:
 1253 0050 0022     		movs	r2, #0
 1254              	.L104:
 733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 1255              		.loc 1 733 0 discriminator 6
 1256 0052 42B9     		cbnz	r2, .L105
 1257              	.LBB149:
 1258              	.LBB150:
 1259              		.loc 2 195 0 is_stmt 1
 1260              		.syntax unified
 1261              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1262 0054 4FF05003 			mov r3, #80												
 1263 0058 83F31188 		msr basepri, r3											
 1264 005c BFF36F8F 		isb														
 1265 0060 BFF34F8F 		dsb														
 1266              	
 1267              	@ 0 "" 2
 1268              	.LVL135:
 1269              		.thumb
 1270              		.syntax unified
 1271              	.L106:
 1272 0064 FEE7     		b	.L106
 1273              	.LVL136:
 1274              	.L105:
 1275 0066 1D46     		mov	r5, r3
 1276 0068 0E46     		mov	r6, r1
 1277              	.LBE150:
 1278              	.LBE149:
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1279              		.loc 1 736 0
 1280 006a FFF7FEFF 		bl	xTaskGetSchedulerState
 1281              	.LVL137:
 1282 006e 18B9     		cbnz	r0, .L126
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1283              		.loc 1 736 0 is_stmt 0 discriminator 2
 1284 0070 019B     		ldr	r3, [sp, #4]
 1285 0072 1BB9     		cbnz	r3, .L127
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1286              		.loc 1 736 0
 1287 0074 0123     		movs	r3, #1
 1288 0076 02E0     		b	.L107
 1289              	.L126:
 1290 0078 0123     		movs	r3, #1
 1291 007a 00E0     		b	.L107
 1292              	.L127:
 1293 007c 0023     		movs	r3, #0
 1294              	.L107:
 736:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 1295              		.loc 1 736 0 discriminator 6
 1296 007e 43B9     		cbnz	r3, .L128
 1297              	.LBB151:
 1298              	.LBB152:
 1299              		.loc 2 195 0 is_stmt 1
 1300              		.syntax unified
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 70


 1301              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1302 0080 4FF05003 			mov r3, #80												
 1303 0084 83F31188 		msr basepri, r3											
 1304 0088 BFF36F8F 		isb														
 1305 008c BFF34F8F 		dsb														
 1306              	
 1307              	@ 0 "" 2
 1308              	.LVL138:
 1309              		.thumb
 1310              		.syntax unified
 1311              	.L109:
 1312 0090 FEE7     		b	.L109
 1313              	.L128:
 1314              	.LBE152:
 1315              	.LBE151:
 1316 0092 0027     		movs	r7, #0
 1317              	.LVL139:
 1318              	.L108:
 746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1319              		.loc 1 746 0
 1320 0094 FFF7FEFF 		bl	vPortEnterCritical
 1321              	.LVL140:
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1322              		.loc 1 752 0
 1323 0098 A26B     		ldr	r2, [r4, #56]
 1324 009a E36B     		ldr	r3, [r4, #60]
 1325 009c 9A42     		cmp	r2, r3
 1326 009e 01D3     		bcc	.L110
 752:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1327              		.loc 1 752 0 is_stmt 0 discriminator 1
 1328 00a0 022D     		cmp	r5, #2
 1329 00a2 21D1     		bne	.L111
 1330              	.L110:
 755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1331              		.loc 1 755 0 is_stmt 1
 1332 00a4 2A46     		mov	r2, r5
 1333 00a6 3146     		mov	r1, r6
 1334 00a8 2046     		mov	r0, r4
 1335 00aa FFF7FEFF 		bl	prvCopyDataToQueue
 1336              	.LVL141:
 810:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1337              		.loc 1 810 0
 1338 00ae 636A     		ldr	r3, [r4, #36]
 1339 00b0 6BB1     		cbz	r3, .L112
 812:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1340              		.loc 1 812 0
 1341 00b2 04F12400 		add	r0, r4, #36
 1342              	.LVL142:
 1343 00b6 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1344              	.LVL143:
 1345 00ba 88B1     		cbz	r0, .L113
 818:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 1346              		.loc 1 818 0
 1347 00bc 4FF08052 		mov	r2, #268435456
 1348 00c0 324B     		ldr	r3, .L130
 1349 00c2 1A60     		str	r2, [r3]
 1350              		.syntax unified
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 71


 1351              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1352 00c4 BFF34F8F 		dsb
 1353              	@ 0 "" 2
 1354              	@ 818 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1355 00c8 BFF36F8F 		isb
 1356              	@ 0 "" 2
 1357              		.thumb
 1358              		.syntax unified
 1359 00cc 08E0     		b	.L113
 1360              	.LVL144:
 1361              	.L112:
 825:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1362              		.loc 1 825 0
 1363 00ce 38B1     		cbz	r0, .L113
 831:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 1364              		.loc 1 831 0
 1365 00d0 4FF08052 		mov	r2, #268435456
 1366 00d4 2D4B     		ldr	r3, .L130
 1367 00d6 1A60     		str	r2, [r3]
 1368              		.syntax unified
 1369              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1370 00d8 BFF34F8F 		dsb
 1371              	@ 0 "" 2
 1372              	@ 831 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1373 00dc BFF36F8F 		isb
 1374              	@ 0 "" 2
 1375              	.LVL145:
 1376              		.thumb
 1377              		.syntax unified
 1378              	.L113:
 840:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 1379              		.loc 1 840 0
 1380 00e0 FFF7FEFF 		bl	vPortExitCritical
 1381              	.LVL146:
 841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1382              		.loc 1 841 0
 1383 00e4 0120     		movs	r0, #1
 1384 00e6 4EE0     		b	.L114
 1385              	.L111:
 845:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1386              		.loc 1 845 0
 1387 00e8 019B     		ldr	r3, [sp, #4]
 1388 00ea 1BB9     		cbnz	r3, .L115
 849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1389              		.loc 1 849 0
 1390 00ec FFF7FEFF 		bl	vPortExitCritical
 1391              	.LVL147:
 854:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1392              		.loc 1 854 0
 1393 00f0 0020     		movs	r0, #0
 1394 00f2 48E0     		b	.L114
 1395              	.L115:
 856:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1396              		.loc 1 856 0
 1397 00f4 1FB9     		cbnz	r7, .L116
 860:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 1398              		.loc 1 860 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 72


 1399 00f6 02A8     		add	r0, sp, #8
 1400 00f8 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1401              	.LVL148:
 861:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1402              		.loc 1 861 0
 1403 00fc 0127     		movs	r7, #1
 1404              	.LVL149:
 1405              	.L116:
 870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1406              		.loc 1 870 0
 1407 00fe FFF7FEFF 		bl	vPortExitCritical
 1408              	.LVL150:
 875:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 1409              		.loc 1 875 0
 1410 0102 FFF7FEFF 		bl	vTaskSuspendAll
 1411              	.LVL151:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1412              		.loc 1 876 0
 1413 0106 FFF7FEFF 		bl	vPortEnterCritical
 1414              	.LVL152:
 1415 010a 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 1416 010e 5BB2     		sxtb	r3, r3
 1417 0110 B3F1FF3F 		cmp	r3, #-1
 1418 0114 02D1     		bne	.L117
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1419              		.loc 1 876 0 is_stmt 0 discriminator 1
 1420 0116 0023     		movs	r3, #0
 1421 0118 84F84430 		strb	r3, [r4, #68]
 1422              	.L117:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1423              		.loc 1 876 0 discriminator 3
 1424 011c 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 1425 0120 5BB2     		sxtb	r3, r3
 1426 0122 B3F1FF3F 		cmp	r3, #-1
 1427 0126 02D1     		bne	.L118
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1428              		.loc 1 876 0 discriminator 4
 1429 0128 0023     		movs	r3, #0
 1430 012a 84F84530 		strb	r3, [r4, #69]
 1431              	.L118:
 876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1432              		.loc 1 876 0 discriminator 6
 1433 012e FFF7FEFF 		bl	vPortExitCritical
 1434              	.LVL153:
 879:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1435              		.loc 1 879 0 is_stmt 1 discriminator 6
 1436 0132 01A9     		add	r1, sp, #4
 1437              	.LVL154:
 1438 0134 02A8     		add	r0, sp, #8
 1439 0136 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1440              	.LVL155:
 1441 013a F0B9     		cbnz	r0, .L119
 881:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1442              		.loc 1 881 0
 1443 013c 2046     		mov	r0, r4
 1444 013e FFF7FEFF 		bl	prvIsQueueFull
 1445              	.LVL156:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 73


 1446 0142 A0B1     		cbz	r0, .L120
 884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1447              		.loc 1 884 0
 1448 0144 0199     		ldr	r1, [sp, #4]
 1449 0146 04F11000 		add	r0, r4, #16
 1450 014a FFF7FEFF 		bl	vTaskPlaceOnEventList
 1451              	.LVL157:
 891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1452              		.loc 1 891 0
 1453 014e 2046     		mov	r0, r4
 1454 0150 FFF7FEFF 		bl	prvUnlockQueue
 1455              	.LVL158:
 898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 1456              		.loc 1 898 0
 1457 0154 FFF7FEFF 		bl	xTaskResumeAll
 1458              	.LVL159:
 1459 0158 0028     		cmp	r0, #0
 1460 015a 9BD1     		bne	.L108
 900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 1461              		.loc 1 900 0
 1462 015c 4FF08052 		mov	r2, #268435456
 1463 0160 0A4B     		ldr	r3, .L130
 1464 0162 1A60     		str	r2, [r3]
 1465              		.syntax unified
 1466              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1467 0164 BFF34F8F 		dsb
 1468              	@ 0 "" 2
 1469              	@ 900 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 1470 0168 BFF36F8F 		isb
 1471              	@ 0 "" 2
 1472              		.thumb
 1473              		.syntax unified
 1474 016c 92E7     		b	.L108
 1475              	.L120:
 906:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 1476              		.loc 1 906 0
 1477 016e 2046     		mov	r0, r4
 1478 0170 FFF7FEFF 		bl	prvUnlockQueue
 1479              	.LVL160:
 907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1480              		.loc 1 907 0
 1481 0174 FFF7FEFF 		bl	xTaskResumeAll
 1482              	.LVL161:
 1483 0178 8CE7     		b	.L108
 1484              	.L119:
 913:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 1485              		.loc 1 913 0
 1486 017a 2046     		mov	r0, r4
 1487 017c FFF7FEFF 		bl	prvUnlockQueue
 1488              	.LVL162:
 914:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1489              		.loc 1 914 0
 1490 0180 FFF7FEFF 		bl	xTaskResumeAll
 1491              	.LVL163:
 917:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1492              		.loc 1 917 0
 1493 0184 0020     		movs	r0, #0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 74


 1494              	.L114:
 920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1495              		.loc 1 920 0
 1496 0186 05B0     		add	sp, sp, #20
 1497              	.LCFI21:
 1498              		.cfi_def_cfa_offset 20
 1499              		@ sp needed
 1500 0188 F0BD     		pop	{r4, r5, r6, r7, pc}
 1501              	.LVL164:
 1502              	.L131:
 1503 018a 00BF     		.align	2
 1504              	.L130:
 1505 018c 04ED00E0 		.word	-536810236
 1506              		.cfi_endproc
 1507              	.LFE17:
 1509              		.section	.text.prvInitialiseMutex,"ax",%progbits
 1510              		.align	2
 1511              		.thumb
 1512              		.thumb_func
 1514              	prvInitialiseMutex:
 1515              	.LFB8:
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1516              		.loc 1 453 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              	.LVL165:
 454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1521              		.loc 1 454 0
 1522 0000 48B1     		cbz	r0, .L135
 453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxNewQueue != NULL )
 1523              		.loc 1 453 0
 1524 0002 08B5     		push	{r3, lr}
 1525              	.LCFI22:
 1526              		.cfi_def_cfa_offset 8
 1527              		.cfi_offset 3, -8
 1528              		.cfi_offset 14, -4
 460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 1529              		.loc 1 460 0
 1530 0004 0021     		movs	r1, #0
 1531 0006 4160     		str	r1, [r0, #4]
 461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1532              		.loc 1 461 0
 1533 0008 0160     		str	r1, [r0]
 464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1534              		.loc 1 464 0
 1535 000a C160     		str	r1, [r0, #12]
 469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1536              		.loc 1 469 0
 1537 000c 0B46     		mov	r3, r1
 1538 000e 0A46     		mov	r2, r1
 1539 0010 FFF7FEFF 		bl	xQueueGenericSend
 1540              	.LVL166:
 1541 0014 08BD     		pop	{r3, pc}
 1542              	.LVL167:
 1543              	.L135:
 1544              	.LCFI23:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 75


 1545              		.cfi_def_cfa_offset 0
 1546              		.cfi_restore 3
 1547              		.cfi_restore 14
 1548 0016 7047     		bx	lr
 1549              		.cfi_endproc
 1550              	.LFE8:
 1552              		.section	.text.xQueueCreateMutex,"ax",%progbits
 1553              		.align	2
 1554              		.global	xQueueCreateMutex
 1555              		.thumb
 1556              		.thumb_func
 1558              	xQueueCreateMutex:
 1559              	.LFB9:
 483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1560              		.loc 1 483 0
 1561              		.cfi_startproc
 1562              		@ args = 0, pretend = 0, frame = 0
 1563              		@ frame_needed = 0, uses_anonymous_args = 0
 1564              	.LVL168:
 1565 0000 10B5     		push	{r4, lr}
 1566              	.LCFI24:
 1567              		.cfi_def_cfa_offset 8
 1568              		.cfi_offset 4, -8
 1569              		.cfi_offset 14, -4
 1570              	.LVL169:
 487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1571              		.loc 1 487 0
 1572 0002 0246     		mov	r2, r0
 1573 0004 0021     		movs	r1, #0
 1574 0006 0120     		movs	r0, #1
 1575              	.LVL170:
 1576 0008 FFF7FEFF 		bl	xQueueGenericCreate
 1577              	.LVL171:
 1578 000c 0446     		mov	r4, r0
 1579              	.LVL172:
 488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1580              		.loc 1 488 0
 1581 000e FFF7FEFF 		bl	prvInitialiseMutex
 1582              	.LVL173:
 491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1583              		.loc 1 491 0
 1584 0012 2046     		mov	r0, r4
 1585 0014 10BD     		pop	{r4, pc}
 1586              		.cfi_endproc
 1587              	.LFE9:
 1589 0016 00BF     		.section	.text.xQueueCreateMutexStatic,"ax",%progbits
 1590              		.align	2
 1591              		.global	xQueueCreateMutexStatic
 1592              		.thumb
 1593              		.thumb_func
 1595              	xQueueCreateMutexStatic:
 1596              	.LFB10:
 499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t *pxNewQueue;
 1597              		.loc 1 499 0
 1598              		.cfi_startproc
 1599              		@ args = 0, pretend = 0, frame = 0
 1600              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 76


 1601              	.LVL174:
 1602 0000 10B5     		push	{r4, lr}
 1603              	.LCFI25:
 1604              		.cfi_def_cfa_offset 8
 1605              		.cfi_offset 4, -8
 1606              		.cfi_offset 14, -4
 1607 0002 82B0     		sub	sp, sp, #8
 1608              	.LCFI26:
 1609              		.cfi_def_cfa_offset 16
 1610              	.LVL175:
 507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 1611              		.loc 1 507 0
 1612 0004 0090     		str	r0, [sp]
 1613 0006 0B46     		mov	r3, r1
 1614 0008 0022     		movs	r2, #0
 1615 000a 1146     		mov	r1, r2
 1616              	.LVL176:
 1617 000c 0120     		movs	r0, #1
 1618              	.LVL177:
 1619 000e FFF7FEFF 		bl	xQueueGenericCreateStatic
 1620              	.LVL178:
 1621 0012 0446     		mov	r4, r0
 1622              	.LVL179:
 508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1623              		.loc 1 508 0
 1624 0014 FFF7FEFF 		bl	prvInitialiseMutex
 1625              	.LVL180:
 511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1626              		.loc 1 511 0
 1627 0018 2046     		mov	r0, r4
 1628 001a 02B0     		add	sp, sp, #8
 1629              	.LCFI27:
 1630              		.cfi_def_cfa_offset 8
 1631              		@ sp needed
 1632 001c 10BD     		pop	{r4, pc}
 1633              		.cfi_endproc
 1634              	.LFE10:
 1636 001e 00BF     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 1637              		.align	2
 1638              		.global	xQueueGiveMutexRecursive
 1639              		.thumb
 1640              		.thumb_func
 1642              	xQueueGiveMutexRecursive:
 1643              	.LFB13:
 575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 1644              		.loc 1 575 0
 1645              		.cfi_startproc
 1646              		@ args = 0, pretend = 0, frame = 0
 1647              		@ frame_needed = 0, uses_anonymous_args = 0
 1648              	.LVL181:
 1649 0000 38B5     		push	{r3, r4, r5, lr}
 1650              	.LCFI28:
 1651              		.cfi_def_cfa_offset 16
 1652              		.cfi_offset 3, -16
 1653              		.cfi_offset 4, -12
 1654              		.cfi_offset 5, -8
 1655              		.cfi_offset 14, -4
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 77


 1656              	.LVL182:
 579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1657              		.loc 1 579 0
 1658 0002 40B9     		cbnz	r0, .L141
 1659              	.LBB153:
 1660              	.LBB154:
 1661              		.loc 2 195 0
 1662              		.syntax unified
 1663              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1664 0004 4FF05003 			mov r3, #80												
 1665 0008 83F31188 		msr basepri, r3											
 1666 000c BFF36F8F 		isb														
 1667 0010 BFF34F8F 		dsb														
 1668              	
 1669              	@ 0 "" 2
 1670              	.LVL183:
 1671              		.thumb
 1672              		.syntax unified
 1673              	.L142:
 1674 0014 FEE7     		b	.L142
 1675              	.L141:
 1676 0016 0446     		mov	r4, r0
 1677              	.LBE154:
 1678              	.LBE153:
 587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1679              		.loc 1 587 0
 1680 0018 4568     		ldr	r5, [r0, #4]
 1681 001a FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1682              	.LVL184:
 1683 001e 8542     		cmp	r5, r0
 1684 0020 0AD1     		bne	.L144
 596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1685              		.loc 1 596 0
 1686 0022 E368     		ldr	r3, [r4, #12]
 1687 0024 013B     		subs	r3, r3, #1
 1688 0026 E360     		str	r3, [r4, #12]
 599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1689              		.loc 1 599 0
 1690 0028 43B9     		cbnz	r3, .L145
 603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1691              		.loc 1 603 0
 1692 002a 1A46     		mov	r2, r3
 1693 002c 1946     		mov	r1, r3
 1694 002e 2046     		mov	r0, r4
 1695 0030 FFF7FEFF 		bl	xQueueGenericSend
 1696              	.LVL185:
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1697              		.loc 1 610 0
 1698 0034 0120     		movs	r0, #1
 1699 0036 38BD     		pop	{r3, r4, r5, pc}
 1700              	.LVL186:
 1701              	.L144:
 616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1702              		.loc 1 616 0
 1703 0038 0020     		movs	r0, #0
 1704 003a 38BD     		pop	{r3, r4, r5, pc}
 1705              	.LVL187:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 78


 1706              	.L145:
 610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1707              		.loc 1 610 0
 1708 003c 0120     		movs	r0, #1
 1709              	.LVL188:
 622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1710              		.loc 1 622 0
 1711 003e 38BD     		pop	{r3, r4, r5, pc}
 1712              		.cfi_endproc
 1713              	.LFE13:
 1715              		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1716              		.align	2
 1717              		.global	xQueueGenericSendFromISR
 1718              		.thumb
 1719              		.thumb_func
 1721              	xQueueGenericSendFromISR:
 1722              	.LFB18:
 924:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1723              		.loc 1 924 0
 1724              		.cfi_startproc
 1725              		@ args = 0, pretend = 0, frame = 0
 1726              		@ frame_needed = 0, uses_anonymous_args = 0
 1727              	.LVL189:
 1728 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1729              	.LCFI29:
 1730              		.cfi_def_cfa_offset 32
 1731              		.cfi_offset 3, -32
 1732              		.cfi_offset 4, -28
 1733              		.cfi_offset 5, -24
 1734              		.cfi_offset 6, -20
 1735              		.cfi_offset 7, -16
 1736              		.cfi_offset 8, -12
 1737              		.cfi_offset 9, -8
 1738              		.cfi_offset 14, -4
 1739              	.LVL190:
 929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 1740              		.loc 1 929 0
 1741 0004 40B9     		cbnz	r0, .L148
 1742              	.LBB155:
 1743              	.LBB156:
 1744              		.loc 2 195 0
 1745              		.syntax unified
 1746              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1747 0006 4FF05003 			mov r3, #80												
 1748 000a 83F31188 		msr basepri, r3											
 1749 000e BFF36F8F 		isb														
 1750 0012 BFF34F8F 		dsb														
 1751              	
 1752              	@ 0 "" 2
 1753              	.LVL191:
 1754              		.thumb
 1755              		.syntax unified
 1756              	.L149:
 1757 0016 FEE7     		b	.L149
 1758              	.LVL192:
 1759              	.L148:
 1760 0018 0446     		mov	r4, r0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 79


 1761              	.LBE156:
 1762              	.LBE155:
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1763              		.loc 1 930 0
 1764 001a 19B9     		cbnz	r1, .L159
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1765              		.loc 1 930 0 is_stmt 0 discriminator 2
 1766 001c 006C     		ldr	r0, [r0, #64]
 1767              	.LVL193:
 1768 001e 18B9     		cbnz	r0, .L160
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1769              		.loc 1 930 0
 1770 0020 0120     		movs	r0, #1
 1771 0022 02E0     		b	.L150
 1772              	.LVL194:
 1773              	.L159:
 1774 0024 0120     		movs	r0, #1
 1775              	.LVL195:
 1776 0026 00E0     		b	.L150
 1777              	.L160:
 1778 0028 0020     		movs	r0, #0
 1779              	.L150:
 930:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 1780              		.loc 1 930 0 discriminator 6
 1781 002a 40B9     		cbnz	r0, .L151
 1782              	.LBB157:
 1783              	.LBB158:
 1784              		.loc 2 195 0 is_stmt 1
 1785              		.syntax unified
 1786              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1787 002c 4FF05003 			mov r3, #80												
 1788 0030 83F31188 		msr basepri, r3											
 1789 0034 BFF36F8F 		isb														
 1790 0038 BFF34F8F 		dsb														
 1791              	
 1792              	@ 0 "" 2
 1793              	.LVL196:
 1794              		.thumb
 1795              		.syntax unified
 1796              	.L152:
 1797 003c FEE7     		b	.L152
 1798              	.LVL197:
 1799              	.L151:
 1800              	.LBE158:
 1801              	.LBE157:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1802              		.loc 1 931 0
 1803 003e 022B     		cmp	r3, #2
 1804 0040 03D1     		bne	.L161
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1805              		.loc 1 931 0 is_stmt 0 discriminator 2
 1806 0042 E06B     		ldr	r0, [r4, #60]
 1807 0044 0128     		cmp	r0, #1
 1808 0046 02D1     		bne	.L162
 1809 0048 02E0     		b	.L153
 1810              	.L161:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 80


 1811              		.loc 1 931 0
 1812 004a 0120     		movs	r0, #1
 1813 004c 00E0     		b	.L153
 1814              	.L162:
 1815 004e 0020     		movs	r0, #0
 1816              	.L153:
 931:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1817              		.loc 1 931 0 discriminator 6
 1818 0050 40B9     		cbnz	r0, .L154
 1819              	.LBB159:
 1820              	.LBB160:
 1821              		.loc 2 195 0 is_stmt 1
 1822              		.syntax unified
 1823              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1824 0052 4FF05003 			mov r3, #80												
 1825 0056 83F31188 		msr basepri, r3											
 1826 005a BFF36F8F 		isb														
 1827 005e BFF34F8F 		dsb														
 1828              	
 1829              	@ 0 "" 2
 1830              	.LVL198:
 1831              		.thumb
 1832              		.syntax unified
 1833              	.L155:
 1834 0062 FEE7     		b	.L155
 1835              	.LVL199:
 1836              	.L154:
 1837 0064 1F46     		mov	r7, r3
 1838 0066 9046     		mov	r8, r2
 1839 0068 8946     		mov	r9, r1
 1840              	.LBE160:
 1841              	.LBE159:
 947:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1842              		.loc 1 947 0
 1843 006a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1844              	.LVL200:
 1845              	.LBB161:
 1846              	.LBB162:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1847              		.loc 2 211 0
 1848              		.syntax unified
 1849              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 81


 1850 006e EFF31186 			mrs r6, basepri											
 1851 0072 4FF05003 		mov r3, #80												
 1852 0076 83F31188 		msr basepri, r3											
 1853 007a BFF36F8F 		isb														
 1854 007e BFF34F8F 		dsb														
 1855              	
 1856              	@ 0 "" 2
 1857              		.thumb
 1858              		.syntax unified
 1859              	.LBE162:
 1860              	.LBE161:
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1861              		.loc 1 956 0
 1862 0082 A26B     		ldr	r2, [r4, #56]
 1863 0084 E36B     		ldr	r3, [r4, #60]
 1864 0086 9A42     		cmp	r2, r3
 1865 0088 01D3     		bcc	.L156
 956:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 1866              		.loc 1 956 0 is_stmt 0 discriminator 1
 1867 008a 022F     		cmp	r7, #2
 1868 008c 1ED1     		bne	.L163
 1869              	.L156:
 1870              	.LBB163:
 958:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1871              		.loc 1 958 0 is_stmt 1
 1872 008e 94F84550 		ldrb	r5, [r4, #69]	@ zero_extendqisi2
 1873 0092 6DB2     		sxtb	r5, r5
 1874              	.LVL201:
 967:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1875              		.loc 1 967 0
 1876 0094 3A46     		mov	r2, r7
 1877 0096 4946     		mov	r1, r9
 1878 0098 2046     		mov	r0, r4
 1879 009a FFF7FEFF 		bl	prvCopyDataToQueue
 1880              	.LVL202:
 971:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 1881              		.loc 1 971 0
 1882 009e B5F1FF3F 		cmp	r5, #-1
 1883 00a2 0DD1     		bne	.L158
1026:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 1884              		.loc 1 1026 0
 1885 00a4 636A     		ldr	r3, [r4, #36]
 1886 00a6 9BB1     		cbz	r3, .L164
1028:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 1887              		.loc 1 1028 0
 1888 00a8 04F12400 		add	r0, r4, #36
 1889 00ac FFF7FEFF 		bl	xTaskRemoveFromEventList
 1890              	.LVL203:
 1891 00b0 80B1     		cbz	r0, .L165
1032:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 1892              		.loc 1 1032 0
 1893 00b2 B8F1000F 		cmp	r8, #0
 1894 00b6 0FD0     		beq	.L166
1034:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 1895              		.loc 1 1034 0
 1896 00b8 0120     		movs	r0, #1
 1897 00ba C8F80000 		str	r0, [r8]
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 82


 1898 00be 0CE0     		b	.L157
 1899              	.L158:
1057:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 1900              		.loc 1 1057 0
 1901 00c0 6B1C     		adds	r3, r5, #1
 1902 00c2 5BB2     		sxtb	r3, r3
 1903 00c4 84F84530 		strb	r3, [r4, #69]
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1904              		.loc 1 1060 0
 1905 00c8 0120     		movs	r0, #1
 1906 00ca 06E0     		b	.L157
 1907              	.LVL204:
 1908              	.L163:
 1909              	.LBE163:
1065:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1910              		.loc 1 1065 0
 1911 00cc 0020     		movs	r0, #0
 1912 00ce 04E0     		b	.L157
 1913              	.LVL205:
 1914              	.L164:
 1915              	.LBB164:
1060:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 1916              		.loc 1 1060 0
 1917 00d0 0120     		movs	r0, #1
 1918 00d2 02E0     		b	.L157
 1919              	.L165:
 1920 00d4 0120     		movs	r0, #1
 1921 00d6 00E0     		b	.L157
 1922              	.L166:
 1923 00d8 0120     		movs	r0, #1
 1924              	.LVL206:
 1925              	.L157:
 1926              	.LBE164:
 1927              	.LBB165:
 1928              	.LBB166:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1929              		.loc 2 229 0
 1930              		.syntax unified
 1931              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1932 00da 86F31188 			msr basepri, r6	
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 83


 1933              	@ 0 "" 2
 1934              	.LVL207:
 1935              		.thumb
 1936              		.syntax unified
 1937              	.LBE166:
 1938              	.LBE165:
1071:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 1939              		.loc 1 1071 0
 1940 00de BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1941              		.cfi_endproc
 1942              	.LFE18:
 1944 00e2 00BF     		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1945              		.align	2
 1946              		.global	xQueueGiveFromISR
 1947              		.thumb
 1948              		.thumb_func
 1950              	xQueueGiveFromISR:
 1951              	.LFB19:
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1952              		.loc 1 1075 0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 0
 1955              		@ frame_needed = 0, uses_anonymous_args = 0
 1956              	.LVL208:
1086:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1957              		.loc 1 1086 0
 1958 0000 40B9     		cbnz	r0, .L169
 1959              	.LBB167:
 1960              	.LBB168:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1961              		.loc 2 195 0
 1962              		.syntax unified
 1963              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1964 0002 4FF05003 			mov r3, #80												
 1965 0006 83F31188 		msr basepri, r3											
 1966 000a BFF36F8F 		isb														
 1967 000e BFF34F8F 		dsb														
 1968              	
 1969              	@ 0 "" 2
 1970              	.LVL209:
 1971              		.thumb
 1972              		.syntax unified
 1973              	.L170:
 1974 0012 FEE7     		b	.L170
 1975              	.L169:
 1976              	.LBE168:
 1977              	.LBE167:
1075:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 1978              		.loc 1 1075 0
 1979 0014 70B5     		push	{r4, r5, r6, lr}
 1980              	.LCFI30:
 1981              		.cfi_def_cfa_offset 16
 1982              		.cfi_offset 4, -16
 1983              		.cfi_offset 5, -12
 1984              		.cfi_offset 6, -8
 1985              		.cfi_offset 14, -4
 1986 0016 0446     		mov	r4, r0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 84


1090:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 1987              		.loc 1 1090 0
 1988 0018 036C     		ldr	r3, [r0, #64]
 1989 001a 43B1     		cbz	r3, .L171
 1990              	.LBB169:
 1991              	.LBB170:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1992              		.loc 2 195 0
 1993              		.syntax unified
 1994              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1995 001c 4FF05003 			mov r3, #80												
 1996 0020 83F31188 		msr basepri, r3											
 1997 0024 BFF36F8F 		isb														
 1998 0028 BFF34F8F 		dsb														
 1999              	
 2000              	@ 0 "" 2
 2001              	.LVL210:
 2002              		.thumb
 2003              		.syntax unified
 2004              	.L172:
 2005 002c FEE7     		b	.L172
 2006              	.L171:
 2007              	.LBE170:
 2008              	.LBE169:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2009              		.loc 1 1095 0
 2010 002e 0368     		ldr	r3, [r0]
 2011 0030 1BB9     		cbnz	r3, .L178
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2012              		.loc 1 1095 0 is_stmt 0 discriminator 2
 2013 0032 4368     		ldr	r3, [r0, #4]
 2014 0034 1BB9     		cbnz	r3, .L179
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2015              		.loc 1 1095 0
 2016 0036 0123     		movs	r3, #1
 2017 0038 02E0     		b	.L173
 2018              	.L178:
 2019 003a 0123     		movs	r3, #1
 2020 003c 00E0     		b	.L173
 2021              	.L179:
 2022 003e 0023     		movs	r3, #0
 2023              	.L173:
1095:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2024              		.loc 1 1095 0 discriminator 6
 2025 0040 43B9     		cbnz	r3, .L174
 2026              	.LBB171:
 2027              	.LBB172:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2028              		.loc 2 195 0 is_stmt 1
 2029              		.syntax unified
 2030              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2031 0042 4FF05003 			mov r3, #80												
 2032 0046 83F31188 		msr basepri, r3											
 2033 004a BFF36F8F 		isb														
 2034 004e BFF34F8F 		dsb														
 2035              	
 2036              	@ 0 "" 2
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 85


 2037              	.LVL211:
 2038              		.thumb
 2039              		.syntax unified
 2040              	.L175:
 2041 0052 FEE7     		b	.L175
 2042              	.L174:
 2043 0054 0E46     		mov	r6, r1
 2044              	.LBE172:
 2045              	.LBE171:
1111:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2046              		.loc 1 1111 0
 2047 0056 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2048              	.LVL212:
 2049              	.LBB173:
 2050              	.LBB174:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2051              		.loc 2 211 0
 2052              		.syntax unified
 2053              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2054 005a EFF31185 			mrs r5, basepri											
 2055 005e 4FF05003 		mov r3, #80												
 2056 0062 83F31188 		msr basepri, r3											
 2057 0066 BFF36F8F 		isb														
 2058 006a BFF34F8F 		dsb														
 2059              	
 2060              	@ 0 "" 2
 2061              		.thumb
 2062              		.syntax unified
 2063              	.LBE174:
 2064              	.LBE173:
 2065              	.LBB175:
1115:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2066              		.loc 1 1115 0
 2067 006e A26B     		ldr	r2, [r4, #56]
 2068              	.LVL213:
1120:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2069              		.loc 1 1120 0
 2070 0070 E36B     		ldr	r3, [r4, #60]
 2071 0072 9A42     		cmp	r2, r3
 2072 0074 18D2     		bcs	.L180
 2073              	.LBB176:
1122:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2074              		.loc 1 1122 0
 2075 0076 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2076 007a 5BB2     		sxtb	r3, r3
 2077              	.LVL214:
1132:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2078              		.loc 1 1132 0
 2079 007c 0132     		adds	r2, r2, #1
 2080              	.LVL215:
 2081 007e A263     		str	r2, [r4, #56]
1136:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2082              		.loc 1 1136 0
 2083 0080 B3F1FF3F 		cmp	r3, #-1
 2084 0084 0AD1     		bne	.L177
1191:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2085              		.loc 1 1191 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 86


 2086 0086 636A     		ldr	r3, [r4, #36]
 2087              	.LVL216:
 2088 0088 83B1     		cbz	r3, .L181
1193:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2089              		.loc 1 1193 0
 2090 008a 04F12400 		add	r0, r4, #36
 2091 008e FFF7FEFF 		bl	xTaskRemoveFromEventList
 2092              	.LVL217:
 2093 0092 68B1     		cbz	r0, .L182
1197:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							{
 2094              		.loc 1 1197 0
 2095 0094 76B1     		cbz	r6, .L183
1199:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							}
 2096              		.loc 1 1199 0
 2097 0096 0120     		movs	r0, #1
 2098 0098 3060     		str	r0, [r6]
 2099 009a 0CE0     		b	.L176
 2100              	.LVL218:
 2101              	.L177:
1222:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2102              		.loc 1 1222 0
 2103 009c 0133     		adds	r3, r3, #1
 2104              	.LVL219:
 2105 009e 5BB2     		sxtb	r3, r3
 2106              	.LVL220:
 2107 00a0 84F84530 		strb	r3, [r4, #69]
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2108              		.loc 1 1225 0
 2109 00a4 0120     		movs	r0, #1
 2110 00a6 06E0     		b	.L176
 2111              	.LVL221:
 2112              	.L180:
 2113              	.LBE176:
1230:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2114              		.loc 1 1230 0
 2115 00a8 0020     		movs	r0, #0
 2116 00aa 04E0     		b	.L176
 2117              	.LVL222:
 2118              	.L181:
 2119              	.LBB177:
1225:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2120              		.loc 1 1225 0
 2121 00ac 0120     		movs	r0, #1
 2122 00ae 02E0     		b	.L176
 2123              	.LVL223:
 2124              	.L182:
 2125 00b0 0120     		movs	r0, #1
 2126 00b2 00E0     		b	.L176
 2127              	.L183:
 2128 00b4 0120     		movs	r0, #1
 2129              	.L176:
 2130              	.LVL224:
 2131              	.LBE177:
 2132              	.LBE175:
 2133              	.LBB178:
 2134              	.LBB179:
 2135              		.loc 2 229 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 87


 2136              		.syntax unified
 2137              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2138 00b6 85F31188 			msr basepri, r5	
 2139              	@ 0 "" 2
 2140              	.LVL225:
 2141              		.thumb
 2142              		.syntax unified
 2143              	.LBE179:
 2144              	.LBE178:
1236:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2145              		.loc 1 1236 0
 2146 00ba 70BD     		pop	{r4, r5, r6, pc}
 2147              		.cfi_endproc
 2148              	.LFE19:
 2150              		.section	.text.xQueueReceive,"ax",%progbits
 2151              		.align	2
 2152              		.global	xQueueReceive
 2153              		.thumb
 2154              		.thumb_func
 2156              	xQueueReceive:
 2157              	.LFB20:
1240:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2158              		.loc 1 1240 0
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 16
 2161              		@ frame_needed = 0, uses_anonymous_args = 0
 2162              	.LVL226:
 2163 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2164              	.LCFI31:
 2165              		.cfi_def_cfa_offset 20
 2166              		.cfi_offset 4, -20
 2167              		.cfi_offset 5, -16
 2168              		.cfi_offset 6, -12
 2169              		.cfi_offset 7, -8
 2170              		.cfi_offset 14, -4
 2171 0002 85B0     		sub	sp, sp, #20
 2172              	.LCFI32:
 2173              		.cfi_def_cfa_offset 40
 2174 0004 0192     		str	r2, [sp, #4]
 2175              	.LVL227:
1246:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2176              		.loc 1 1246 0
 2177 0006 40B9     		cbnz	r0, .L186
 2178              	.LBB180:
 2179              	.LBB181:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2180              		.loc 2 195 0
 2181              		.syntax unified
 2182              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2183 0008 4FF05003 			mov r3, #80												
 2184 000c 83F31188 		msr basepri, r3											
 2185 0010 BFF36F8F 		isb														
 2186 0014 BFF34F8F 		dsb														
 2187              	
 2188              	@ 0 "" 2
 2189              	.LVL228:
 2190              		.thumb
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 88


 2191              		.syntax unified
 2192              	.L187:
 2193 0018 FEE7     		b	.L187
 2194              	.L186:
 2195 001a 0446     		mov	r4, r0
 2196              	.LBE181:
 2197              	.LBE180:
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2198              		.loc 1 1250 0
 2199 001c 19B9     		cbnz	r1, .L204
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2200              		.loc 1 1250 0 is_stmt 0 discriminator 2
 2201 001e 036C     		ldr	r3, [r0, #64]
 2202 0020 1BB9     		cbnz	r3, .L205
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2203              		.loc 1 1250 0
 2204 0022 0123     		movs	r3, #1
 2205 0024 02E0     		b	.L188
 2206              	.L204:
 2207 0026 0123     		movs	r3, #1
 2208 0028 00E0     		b	.L188
 2209              	.L205:
 2210 002a 0023     		movs	r3, #0
 2211              	.L188:
1250:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2212              		.loc 1 1250 0 discriminator 6
 2213 002c 43B9     		cbnz	r3, .L189
 2214              	.LBB182:
 2215              	.LBB183:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2216              		.loc 2 195 0 is_stmt 1
 2217              		.syntax unified
 2218              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2219 002e 4FF05003 			mov r3, #80												
 2220 0032 83F31188 		msr basepri, r3											
 2221 0036 BFF36F8F 		isb														
 2222 003a BFF34F8F 		dsb														
 2223              	
 2224              	@ 0 "" 2
 2225              	.LVL229:
 2226              		.thumb
 2227              		.syntax unified
 2228              	.L190:
 2229 003e FEE7     		b	.L190
 2230              	.L189:
 2231 0040 0E46     		mov	r6, r1
 2232              	.LBE183:
 2233              	.LBE182:
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2234              		.loc 1 1255 0
 2235 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 2236              	.LVL230:
 2237 0046 18B9     		cbnz	r0, .L206
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2238              		.loc 1 1255 0 is_stmt 0 discriminator 2
 2239 0048 019B     		ldr	r3, [sp, #4]
 2240 004a 1BB9     		cbnz	r3, .L207
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 89


1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2241              		.loc 1 1255 0
 2242 004c 0123     		movs	r3, #1
 2243 004e 02E0     		b	.L191
 2244              	.L206:
 2245 0050 0123     		movs	r3, #1
 2246 0052 00E0     		b	.L191
 2247              	.L207:
 2248 0054 0023     		movs	r3, #0
 2249              	.L191:
1255:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2250              		.loc 1 1255 0 discriminator 6
 2251 0056 43B9     		cbnz	r3, .L208
 2252              	.LBB184:
 2253              	.LBB185:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2254              		.loc 2 195 0 is_stmt 1
 2255              		.syntax unified
 2256              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2257 0058 4FF05003 			mov r3, #80												
 2258 005c 83F31188 		msr basepri, r3											
 2259 0060 BFF36F8F 		isb														
 2260 0064 BFF34F8F 		dsb														
 2261              	
 2262              	@ 0 "" 2
 2263              	.LVL231:
 2264              		.thumb
 2265              		.syntax unified
 2266              	.L193:
 2267 0068 FEE7     		b	.L193
 2268              	.L208:
 2269              	.LBE185:
 2270              	.LBE184:
 2271 006a 0027     		movs	r7, #0
 2272              	.LVL232:
 2273              	.L192:
1265:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2274              		.loc 1 1265 0
 2275 006c FFF7FEFF 		bl	vPortEnterCritical
 2276              	.LVL233:
 2277              	.LBB186:
1267:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2278              		.loc 1 1267 0
 2279 0070 A56B     		ldr	r5, [r4, #56]
 2280              	.LVL234:
1271:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2281              		.loc 1 1271 0
 2282 0072 C5B1     		cbz	r5, .L194
1274:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 2283              		.loc 1 1274 0
 2284 0074 3146     		mov	r1, r6
 2285 0076 2046     		mov	r0, r4
 2286 0078 FFF7FEFF 		bl	prvCopyDataFromQueue
 2287              	.LVL235:
1276:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2288              		.loc 1 1276 0
 2289 007c 013D     		subs	r5, r5, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 90


 2290              	.LVL236:
 2291 007e A563     		str	r5, [r4, #56]
1281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2292              		.loc 1 1281 0
 2293 0080 2369     		ldr	r3, [r4, #16]
 2294 0082 63B1     		cbz	r3, .L195
1283:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2295              		.loc 1 1283 0
 2296 0084 04F11000 		add	r0, r4, #16
 2297 0088 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2298              	.LVL237:
 2299 008c 38B1     		cbz	r0, .L195
1285:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2300              		.loc 1 1285 0
 2301 008e 4FF08052 		mov	r2, #268435456
 2302 0092 304B     		ldr	r3, .L210
 2303 0094 1A60     		str	r2, [r3]
 2304              		.syntax unified
 2305              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2306 0096 BFF34F8F 		dsb
 2307              	@ 0 "" 2
 2308              	@ 1285 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2309 009a BFF36F8F 		isb
 2310              	@ 0 "" 2
 2311              		.thumb
 2312              		.syntax unified
 2313              	.L195:
1297:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2314              		.loc 1 1297 0
 2315 009e FFF7FEFF 		bl	vPortExitCritical
 2316              	.LVL238:
1298:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2317              		.loc 1 1298 0
 2318 00a2 0120     		movs	r0, #1
 2319 00a4 53E0     		b	.L196
 2320              	.LVL239:
 2321              	.L194:
1302:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2322              		.loc 1 1302 0
 2323 00a6 019B     		ldr	r3, [sp, #4]
 2324 00a8 1BB9     		cbnz	r3, .L197
1306:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2325              		.loc 1 1306 0
 2326 00aa FFF7FEFF 		bl	vPortExitCritical
 2327              	.LVL240:
1308:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2328              		.loc 1 1308 0
 2329 00ae 0020     		movs	r0, #0
 2330 00b0 4DE0     		b	.L196
 2331              	.L197:
1310:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2332              		.loc 1 1310 0
 2333 00b2 1FB9     		cbnz	r7, .L198
1314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2334              		.loc 1 1314 0
 2335 00b4 02A8     		add	r0, sp, #8
 2336 00b6 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 91


 2337              	.LVL241:
1315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2338              		.loc 1 1315 0
 2339 00ba 0127     		movs	r7, #1
 2340              	.LVL242:
 2341              	.L198:
 2342              	.LBE186:
1324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2343              		.loc 1 1324 0
 2344 00bc FFF7FEFF 		bl	vPortExitCritical
 2345              	.LVL243:
1329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2346              		.loc 1 1329 0
 2347 00c0 FFF7FEFF 		bl	vTaskSuspendAll
 2348              	.LVL244:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2349              		.loc 1 1330 0
 2350 00c4 FFF7FEFF 		bl	vPortEnterCritical
 2351              	.LVL245:
 2352 00c8 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2353 00cc 5BB2     		sxtb	r3, r3
 2354 00ce B3F1FF3F 		cmp	r3, #-1
 2355 00d2 02D1     		bne	.L199
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2356              		.loc 1 1330 0 is_stmt 0 discriminator 1
 2357 00d4 0023     		movs	r3, #0
 2358 00d6 84F84430 		strb	r3, [r4, #68]
 2359              	.L199:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2360              		.loc 1 1330 0 discriminator 3
 2361 00da 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2362 00de 5BB2     		sxtb	r3, r3
 2363 00e0 B3F1FF3F 		cmp	r3, #-1
 2364 00e4 02D1     		bne	.L200
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2365              		.loc 1 1330 0 discriminator 4
 2366 00e6 0023     		movs	r3, #0
 2367 00e8 84F84530 		strb	r3, [r4, #69]
 2368              	.L200:
1330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2369              		.loc 1 1330 0 discriminator 6
 2370 00ec FFF7FEFF 		bl	vPortExitCritical
 2371              	.LVL246:
1333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2372              		.loc 1 1333 0 is_stmt 1 discriminator 6
 2373 00f0 01A9     		add	r1, sp, #4
 2374              	.LVL247:
 2375 00f2 02A8     		add	r0, sp, #8
 2376 00f4 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2377              	.LVL248:
 2378 00f8 F0B9     		cbnz	r0, .L201
1337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2379              		.loc 1 1337 0
 2380 00fa 2046     		mov	r0, r4
 2381 00fc FFF7FEFF 		bl	prvIsQueueEmpty
 2382              	.LVL249:
 2383 0100 A0B1     		cbz	r0, .L202
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 92


1340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2384              		.loc 1 1340 0
 2385 0102 0199     		ldr	r1, [sp, #4]
 2386 0104 04F12400 		add	r0, r4, #36
 2387 0108 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2388              	.LVL250:
1341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2389              		.loc 1 1341 0
 2390 010c 2046     		mov	r0, r4
 2391 010e FFF7FEFF 		bl	prvUnlockQueue
 2392              	.LVL251:
1342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2393              		.loc 1 1342 0
 2394 0112 FFF7FEFF 		bl	xTaskResumeAll
 2395              	.LVL252:
 2396 0116 0028     		cmp	r0, #0
 2397 0118 A8D1     		bne	.L192
1344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2398              		.loc 1 1344 0
 2399 011a 4FF08052 		mov	r2, #268435456
 2400 011e 0D4B     		ldr	r3, .L210
 2401 0120 1A60     		str	r2, [r3]
 2402              		.syntax unified
 2403              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2404 0122 BFF34F8F 		dsb
 2405              	@ 0 "" 2
 2406              	@ 1344 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2407 0126 BFF36F8F 		isb
 2408              	@ 0 "" 2
 2409              		.thumb
 2410              		.syntax unified
 2411 012a 9FE7     		b	.L192
 2412              	.L202:
1355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2413              		.loc 1 1355 0
 2414 012c 2046     		mov	r0, r4
 2415 012e FFF7FEFF 		bl	prvUnlockQueue
 2416              	.LVL253:
1356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2417              		.loc 1 1356 0
 2418 0132 FFF7FEFF 		bl	xTaskResumeAll
 2419              	.LVL254:
 2420 0136 99E7     		b	.L192
 2421              	.L201:
1363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2422              		.loc 1 1363 0
 2423 0138 2046     		mov	r0, r4
 2424 013a FFF7FEFF 		bl	prvUnlockQueue
 2425              	.LVL255:
1364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2426              		.loc 1 1364 0
 2427 013e FFF7FEFF 		bl	xTaskResumeAll
 2428              	.LVL256:
1366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2429              		.loc 1 1366 0
 2430 0142 2046     		mov	r0, r4
 2431 0144 FFF7FEFF 		bl	prvIsQueueEmpty
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 93


 2432              	.LVL257:
 2433 0148 0028     		cmp	r0, #0
 2434 014a 8FD0     		beq	.L192
1369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2435              		.loc 1 1369 0
 2436 014c 0020     		movs	r0, #0
 2437              	.LVL258:
 2438              	.L196:
1377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2439              		.loc 1 1377 0
 2440 014e 05B0     		add	sp, sp, #20
 2441              	.LCFI33:
 2442              		.cfi_def_cfa_offset 20
 2443              		@ sp needed
 2444 0150 F0BD     		pop	{r4, r5, r6, r7, pc}
 2445              	.LVL259:
 2446              	.L211:
 2447 0152 00BF     		.align	2
 2448              	.L210:
 2449 0154 04ED00E0 		.word	-536810236
 2450              		.cfi_endproc
 2451              	.LFE20:
 2453              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 2454              		.align	2
 2455              		.global	xQueueSemaphoreTake
 2456              		.thumb
 2457              		.thumb_func
 2459              	xQueueSemaphoreTake:
 2460              	.LFB21:
1381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2461              		.loc 1 1381 0
 2462              		.cfi_startproc
 2463              		@ args = 0, pretend = 0, frame = 16
 2464              		@ frame_needed = 0, uses_anonymous_args = 0
 2465              	.LVL260:
 2466 0000 70B5     		push	{r4, r5, r6, lr}
 2467              	.LCFI34:
 2468              		.cfi_def_cfa_offset 16
 2469              		.cfi_offset 4, -16
 2470              		.cfi_offset 5, -12
 2471              		.cfi_offset 6, -8
 2472              		.cfi_offset 14, -4
 2473 0002 84B0     		sub	sp, sp, #16
 2474              	.LCFI35:
 2475              		.cfi_def_cfa_offset 32
 2476 0004 0191     		str	r1, [sp, #4]
 2477              	.LVL261:
1391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2478              		.loc 1 1391 0
 2479 0006 40B9     		cbnz	r0, .L213
 2480              	.LBB187:
 2481              	.LBB188:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2482              		.loc 2 195 0
 2483              		.syntax unified
 2484              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2485 0008 4FF05003 			mov r3, #80												
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 94


 2486 000c 83F31188 		msr basepri, r3											
 2487 0010 BFF36F8F 		isb														
 2488 0014 BFF34F8F 		dsb														
 2489              	
 2490              	@ 0 "" 2
 2491              	.LVL262:
 2492              		.thumb
 2493              		.syntax unified
 2494              	.L214:
 2495 0018 FEE7     		b	.L214
 2496              	.L213:
 2497 001a 0446     		mov	r4, r0
 2498              	.LBE188:
 2499              	.LBE187:
1395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2500              		.loc 1 1395 0
 2501 001c 036C     		ldr	r3, [r0, #64]
 2502 001e 43B1     		cbz	r3, .L215
 2503              	.LBB189:
 2504              	.LBB190:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2505              		.loc 2 195 0
 2506              		.syntax unified
 2507              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2508 0020 4FF05003 			mov r3, #80												
 2509 0024 83F31188 		msr basepri, r3											
 2510 0028 BFF36F8F 		isb														
 2511 002c BFF34F8F 		dsb														
 2512              	
 2513              	@ 0 "" 2
 2514              	.LVL263:
 2515              		.thumb
 2516              		.syntax unified
 2517              	.L216:
 2518 0030 FEE7     		b	.L216
 2519              	.L215:
 2520              	.LBE190:
 2521              	.LBE189:
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2522              		.loc 1 1400 0
 2523 0032 FFF7FEFF 		bl	xTaskGetSchedulerState
 2524              	.LVL264:
 2525 0036 18B9     		cbnz	r0, .L234
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2526              		.loc 1 1400 0 is_stmt 0 discriminator 2
 2527 0038 019B     		ldr	r3, [sp, #4]
 2528 003a 1BB9     		cbnz	r3, .L235
1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2529              		.loc 1 1400 0
 2530 003c 0123     		movs	r3, #1
 2531 003e 02E0     		b	.L217
 2532              	.L234:
 2533 0040 0123     		movs	r3, #1
 2534 0042 00E0     		b	.L217
 2535              	.L235:
 2536 0044 0023     		movs	r3, #0
 2537              	.L217:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 95


1400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2538              		.loc 1 1400 0 discriminator 6
 2539 0046 43B9     		cbnz	r3, .L236
 2540              	.LBB191:
 2541              	.LBB192:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2542              		.loc 2 195 0 is_stmt 1
 2543              		.syntax unified
 2544              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2545 0048 4FF05003 			mov r3, #80												
 2546 004c 83F31188 		msr basepri, r3											
 2547 0050 BFF36F8F 		isb														
 2548 0054 BFF34F8F 		dsb														
 2549              	
 2550              	@ 0 "" 2
 2551              	.LVL265:
 2552              		.thumb
 2553              		.syntax unified
 2554              	.L219:
 2555 0058 FEE7     		b	.L219
 2556              	.L236:
 2557              	.LBE192:
 2558              	.LBE191:
 2559 005a 0025     		movs	r5, #0
 2560 005c 2E46     		mov	r6, r5
 2561              	.LVL266:
 2562              	.L218:
1411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2563              		.loc 1 1411 0
 2564 005e FFF7FEFF 		bl	vPortEnterCritical
 2565              	.LVL267:
 2566              	.LBB193:
1415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2567              		.loc 1 1415 0
 2568 0062 A36B     		ldr	r3, [r4, #56]
 2569              	.LVL268:
1419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2570              		.loc 1 1419 0
 2571 0064 CBB1     		cbz	r3, .L220
1425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2572              		.loc 1 1425 0
 2573 0066 013B     		subs	r3, r3, #1
 2574              	.LVL269:
 2575 0068 A363     		str	r3, [r4, #56]
1429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2576              		.loc 1 1429 0
 2577 006a 2368     		ldr	r3, [r4]
 2578              	.LVL270:
 2579 006c 13B9     		cbnz	r3, .L221
1433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2580              		.loc 1 1433 0
 2581 006e FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 2582              	.LVL271:
 2583 0072 6060     		str	r0, [r4, #4]
 2584              	.L221:
1444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2585              		.loc 1 1444 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 96


 2586 0074 2369     		ldr	r3, [r4, #16]
 2587 0076 63B1     		cbz	r3, .L222
1446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2588              		.loc 1 1446 0
 2589 0078 04F11000 		add	r0, r4, #16
 2590 007c FFF7FEFF 		bl	xTaskRemoveFromEventList
 2591              	.LVL272:
 2592 0080 38B1     		cbz	r0, .L222
1448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2593              		.loc 1 1448 0
 2594 0082 4FF08052 		mov	r2, #268435456
 2595 0086 414B     		ldr	r3, .L239
 2596 0088 1A60     		str	r2, [r3]
 2597              		.syntax unified
 2598              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2599 008a BFF34F8F 		dsb
 2600              	@ 0 "" 2
 2601              	@ 1448 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2602 008e BFF36F8F 		isb
 2603              	@ 0 "" 2
 2604              		.thumb
 2605              		.syntax unified
 2606              	.L222:
1460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 2607              		.loc 1 1460 0
 2608 0092 FFF7FEFF 		bl	vPortExitCritical
 2609              	.LVL273:
1461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2610              		.loc 1 1461 0
 2611 0096 0120     		movs	r0, #1
 2612 0098 76E0     		b	.L223
 2613              	.LVL274:
 2614              	.L220:
1465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2615              		.loc 1 1465 0
 2616 009a 019B     		ldr	r3, [sp, #4]
 2617              	.LVL275:
 2618 009c 6BB9     		cbnz	r3, .L224
1472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2619              		.loc 1 1472 0
 2620 009e 45B1     		cbz	r5, .L225
 2621              	.LBB194:
 2622              	.LBB195:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2623              		.loc 2 195 0
 2624              		.syntax unified
 2625              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2626 00a0 4FF05003 			mov r3, #80												
 2627 00a4 83F31188 		msr basepri, r3											
 2628 00a8 BFF36F8F 		isb														
 2629 00ac BFF34F8F 		dsb														
 2630              	
 2631              	@ 0 "" 2
 2632              	.LVL276:
 2633              		.thumb
 2634              		.syntax unified
 2635              	.L226:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 97


 2636 00b0 FEE7     		b	.L226
 2637              	.L225:
 2638              	.LBE195:
 2639              	.LBE194:
1478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 2640              		.loc 1 1478 0
 2641 00b2 FFF7FEFF 		bl	vPortExitCritical
 2642              	.LVL277:
1480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2643              		.loc 1 1480 0
 2644 00b6 0020     		movs	r0, #0
 2645 00b8 66E0     		b	.L223
 2646              	.L224:
1482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2647              		.loc 1 1482 0
 2648 00ba 1EB9     		cbnz	r6, .L227
1486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 2649              		.loc 1 1486 0
 2650 00bc 02A8     		add	r0, sp, #8
 2651 00be FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 2652              	.LVL278:
1487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2653              		.loc 1 1487 0
 2654 00c2 0126     		movs	r6, #1
 2655              	.LVL279:
 2656              	.L227:
 2657              	.LBE193:
1496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2658              		.loc 1 1496 0
 2659 00c4 FFF7FEFF 		bl	vPortExitCritical
 2660              	.LVL280:
1501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 2661              		.loc 1 1501 0
 2662 00c8 FFF7FEFF 		bl	vTaskSuspendAll
 2663              	.LVL281:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2664              		.loc 1 1502 0
 2665 00cc FFF7FEFF 		bl	vPortEnterCritical
 2666              	.LVL282:
 2667 00d0 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 2668 00d4 5BB2     		sxtb	r3, r3
 2669 00d6 B3F1FF3F 		cmp	r3, #-1
 2670 00da 02D1     		bne	.L228
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2671              		.loc 1 1502 0 is_stmt 0 discriminator 1
 2672 00dc 0023     		movs	r3, #0
 2673 00de 84F84430 		strb	r3, [r4, #68]
 2674              	.L228:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2675              		.loc 1 1502 0 discriminator 3
 2676 00e2 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 2677 00e6 5BB2     		sxtb	r3, r3
 2678 00e8 B3F1FF3F 		cmp	r3, #-1
 2679 00ec 02D1     		bne	.L229
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2680              		.loc 1 1502 0 discriminator 4
 2681 00ee 0023     		movs	r3, #0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 98


 2682 00f0 84F84530 		strb	r3, [r4, #69]
 2683              	.L229:
1502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2684              		.loc 1 1502 0 discriminator 6
 2685 00f4 FFF7FEFF 		bl	vPortExitCritical
 2686              	.LVL283:
1505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2687              		.loc 1 1505 0 is_stmt 1 discriminator 6
 2688 00f8 01A9     		add	r1, sp, #4
 2689              	.LVL284:
 2690 00fa 02A8     		add	r0, sp, #8
 2691 00fc FFF7FEFF 		bl	xTaskCheckForTimeOut
 2692              	.LVL285:
 2693 0100 40BB     		cbnz	r0, .L230
1511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2694              		.loc 1 1511 0
 2695 0102 2046     		mov	r0, r4
 2696 0104 FFF7FEFF 		bl	prvIsQueueEmpty
 2697              	.LVL286:
 2698 0108 F0B1     		cbz	r0, .L231
1517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2699              		.loc 1 1517 0
 2700 010a 2368     		ldr	r3, [r4]
 2701 010c 3BB9     		cbnz	r3, .L232
1519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2702              		.loc 1 1519 0
 2703 010e FFF7FEFF 		bl	vPortEnterCritical
 2704              	.LVL287:
1521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 2705              		.loc 1 1521 0
 2706 0112 6068     		ldr	r0, [r4, #4]
 2707 0114 FFF7FEFF 		bl	xTaskPriorityInherit
 2708              	.LVL288:
 2709 0118 0546     		mov	r5, r0
 2710              	.LVL289:
1523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2711              		.loc 1 1523 0
 2712 011a FFF7FEFF 		bl	vPortExitCritical
 2713              	.LVL290:
 2714              	.L232:
1532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 2715              		.loc 1 1532 0
 2716 011e 0199     		ldr	r1, [sp, #4]
 2717 0120 04F12400 		add	r0, r4, #36
 2718 0124 FFF7FEFF 		bl	vTaskPlaceOnEventList
 2719              	.LVL291:
1533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 2720              		.loc 1 1533 0
 2721 0128 2046     		mov	r0, r4
 2722 012a FFF7FEFF 		bl	prvUnlockQueue
 2723              	.LVL292:
1534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 2724              		.loc 1 1534 0
 2725 012e FFF7FEFF 		bl	xTaskResumeAll
 2726              	.LVL293:
 2727 0132 0028     		cmp	r0, #0
 2728 0134 93D1     		bne	.L218
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 99


1536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 2729              		.loc 1 1536 0
 2730 0136 4FF08052 		mov	r2, #268435456
 2731 013a 144B     		ldr	r3, .L239
 2732 013c 1A60     		str	r2, [r3]
 2733              		.syntax unified
 2734              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2735 013e BFF34F8F 		dsb
 2736              	@ 0 "" 2
 2737              	@ 1536 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 2738 0142 BFF36F8F 		isb
 2739              	@ 0 "" 2
 2740              		.thumb
 2741              		.syntax unified
 2742 0146 8AE7     		b	.L218
 2743              	.L231:
1547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 2744              		.loc 1 1547 0
 2745 0148 2046     		mov	r0, r4
 2746 014a FFF7FEFF 		bl	prvUnlockQueue
 2747              	.LVL294:
1548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2748              		.loc 1 1548 0
 2749 014e FFF7FEFF 		bl	xTaskResumeAll
 2750              	.LVL295:
 2751 0152 84E7     		b	.L218
 2752              	.L230:
1554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 2753              		.loc 1 1554 0
 2754 0154 2046     		mov	r0, r4
 2755 0156 FFF7FEFF 		bl	prvUnlockQueue
 2756              	.LVL296:
1555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2757              		.loc 1 1555 0
 2758 015a FFF7FEFF 		bl	xTaskResumeAll
 2759              	.LVL297:
1561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2760              		.loc 1 1561 0
 2761 015e 2046     		mov	r0, r4
 2762 0160 FFF7FEFF 		bl	prvIsQueueEmpty
 2763              	.LVL298:
 2764 0164 0028     		cmp	r0, #0
 2765 0166 3FF47AAF 		beq	.L218
1568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 2766              		.loc 1 1568 0
 2767 016a 65B1     		cbz	r5, .L237
1570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 2768              		.loc 1 1570 0
 2769 016c FFF7FEFF 		bl	vPortEnterCritical
 2770              	.LVL299:
 2771              	.LBB196:
1579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 2772              		.loc 1 1579 0
 2773 0170 2046     		mov	r0, r4
 2774 0172 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 2775              	.LVL300:
1580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 100


 2776              		.loc 1 1580 0
 2777 0176 0146     		mov	r1, r0
 2778 0178 6068     		ldr	r0, [r4, #4]
 2779              	.LVL301:
 2780 017a FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 2781              	.LVL302:
 2782              	.LBE196:
1582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 2783              		.loc 1 1582 0
 2784 017e FFF7FEFF 		bl	vPortExitCritical
 2785              	.LVL303:
1588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2786              		.loc 1 1588 0
 2787 0182 0020     		movs	r0, #0
 2788 0184 00E0     		b	.L223
 2789              	.L237:
 2790 0186 0020     		movs	r0, #0
 2791              	.L223:
1596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 2792              		.loc 1 1596 0
 2793 0188 04B0     		add	sp, sp, #16
 2794              	.LCFI36:
 2795              		.cfi_def_cfa_offset 16
 2796              		@ sp needed
 2797 018a 70BD     		pop	{r4, r5, r6, pc}
 2798              	.LVL304:
 2799              	.L240:
 2800              		.align	2
 2801              	.L239:
 2802 018c 04ED00E0 		.word	-536810236
 2803              		.cfi_endproc
 2804              	.LFE21:
 2806              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 2807              		.align	2
 2808              		.global	xQueueTakeMutexRecursive
 2809              		.thumb
 2810              		.thumb_func
 2812              	xQueueTakeMutexRecursive:
 2813              	.LFB14:
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2814              		.loc 1 630 0
 2815              		.cfi_startproc
 2816              		@ args = 0, pretend = 0, frame = 0
 2817              		@ frame_needed = 0, uses_anonymous_args = 0
 2818              	.LVL305:
 634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2819              		.loc 1 634 0
 2820 0000 40B9     		cbnz	r0, .L242
 2821              	.LBB197:
 2822              	.LBB198:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2823              		.loc 2 195 0
 2824              		.syntax unified
 2825              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2826 0002 4FF05003 			mov r3, #80												
 2827 0006 83F31188 		msr basepri, r3											
 2828 000a BFF36F8F 		isb														
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 101


 2829 000e BFF34F8F 		dsb														
 2830              	
 2831              	@ 0 "" 2
 2832              	.LVL306:
 2833              		.thumb
 2834              		.syntax unified
 2835              	.L243:
 2836 0012 FEE7     		b	.L243
 2837              	.L242:
 2838              	.LBE198:
 2839              	.LBE197:
 630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
 2840              		.loc 1 630 0
 2841 0014 70B5     		push	{r4, r5, r6, lr}
 2842              	.LCFI37:
 2843              		.cfi_def_cfa_offset 16
 2844              		.cfi_offset 4, -16
 2845              		.cfi_offset 5, -12
 2846              		.cfi_offset 6, -8
 2847              		.cfi_offset 14, -4
 2848 0016 0446     		mov	r4, r0
 2849 0018 0D46     		mov	r5, r1
 641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 2850              		.loc 1 641 0
 2851 001a 4668     		ldr	r6, [r0, #4]
 2852 001c FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 2853              	.LVL307:
 2854 0020 8642     		cmp	r6, r0
 2855 0022 04D1     		bne	.L244
 643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
 2856              		.loc 1 643 0
 2857 0024 E368     		ldr	r3, [r4, #12]
 2858 0026 0133     		adds	r3, r3, #1
 2859 0028 E360     		str	r3, [r4, #12]
 2860              	.LVL308:
 644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 2861              		.loc 1 644 0
 2862 002a 0122     		movs	r2, #1
 2863 002c 08E0     		b	.L245
 2864              	.LVL309:
 2865              	.L244:
 648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2866              		.loc 1 648 0
 2867 002e 2946     		mov	r1, r5
 2868 0030 2046     		mov	r0, r4
 2869 0032 FFF7FEFF 		bl	xQueueSemaphoreTake
 2870              	.LVL310:
 653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 2871              		.loc 1 653 0
 2872 0036 0246     		mov	r2, r0
 2873 0038 10B1     		cbz	r0, .L245
 655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 2874              		.loc 1 655 0
 2875 003a E368     		ldr	r3, [r4, #12]
 2876 003c 0133     		adds	r3, r3, #1
 2877 003e E360     		str	r3, [r4, #12]
 2878              	.LVL311:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 102


 2879              	.L245:
 664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2880              		.loc 1 664 0
 2881 0040 1046     		mov	r0, r2
 2882 0042 70BD     		pop	{r4, r5, r6, pc}
 2883              		.cfi_endproc
 2884              	.LFE14:
 2886              		.section	.text.xQueuePeek,"ax",%progbits
 2887              		.align	2
 2888              		.global	xQueuePeek
 2889              		.thumb
 2890              		.thumb_func
 2892              	xQueuePeek:
 2893              	.LFB22:
1600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 2894              		.loc 1 1600 0
 2895              		.cfi_startproc
 2896              		@ args = 0, pretend = 0, frame = 16
 2897              		@ frame_needed = 0, uses_anonymous_args = 0
 2898              	.LVL312:
 2899 0000 70B5     		push	{r4, r5, r6, lr}
 2900              	.LCFI38:
 2901              		.cfi_def_cfa_offset 16
 2902              		.cfi_offset 4, -16
 2903              		.cfi_offset 5, -12
 2904              		.cfi_offset 6, -8
 2905              		.cfi_offset 14, -4
 2906 0002 84B0     		sub	sp, sp, #16
 2907              	.LCFI39:
 2908              		.cfi_def_cfa_offset 32
 2909 0004 0192     		str	r2, [sp, #4]
 2910              	.LVL313:
1607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2911              		.loc 1 1607 0
 2912 0006 40B9     		cbnz	r0, .L248
 2913              	.LBB199:
 2914              	.LBB200:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2915              		.loc 2 195 0
 2916              		.syntax unified
 2917              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2918 0008 4FF05003 			mov r3, #80												
 2919 000c 83F31188 		msr basepri, r3											
 2920 0010 BFF36F8F 		isb														
 2921 0014 BFF34F8F 		dsb														
 2922              	
 2923              	@ 0 "" 2
 2924              	.LVL314:
 2925              		.thumb
 2926              		.syntax unified
 2927              	.L249:
 2928 0018 FEE7     		b	.L249
 2929              	.L248:
 2930 001a 0446     		mov	r4, r0
 2931              	.LBE200:
 2932              	.LBE199:
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 103


 2933              		.loc 1 1611 0
 2934 001c 19B9     		cbnz	r1, .L266
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2935              		.loc 1 1611 0 is_stmt 0 discriminator 2
 2936 001e 036C     		ldr	r3, [r0, #64]
 2937 0020 1BB9     		cbnz	r3, .L267
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2938              		.loc 1 1611 0
 2939 0022 0123     		movs	r3, #1
 2940 0024 02E0     		b	.L250
 2941              	.L266:
 2942 0026 0123     		movs	r3, #1
 2943 0028 00E0     		b	.L250
 2944              	.L267:
 2945 002a 0023     		movs	r3, #0
 2946              	.L250:
1611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 2947              		.loc 1 1611 0 discriminator 6
 2948 002c 43B9     		cbnz	r3, .L251
 2949              	.LBB201:
 2950              	.LBB202:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2951              		.loc 2 195 0 is_stmt 1
 2952              		.syntax unified
 2953              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2954 002e 4FF05003 			mov r3, #80												
 2955 0032 83F31188 		msr basepri, r3											
 2956 0036 BFF36F8F 		isb														
 2957 003a BFF34F8F 		dsb														
 2958              	
 2959              	@ 0 "" 2
 2960              	.LVL315:
 2961              		.thumb
 2962              		.syntax unified
 2963              	.L252:
 2964 003e FEE7     		b	.L252
 2965              	.L251:
 2966 0040 0E46     		mov	r6, r1
 2967              	.LBE202:
 2968              	.LBE201:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2969              		.loc 1 1616 0
 2970 0042 FFF7FEFF 		bl	xTaskGetSchedulerState
 2971              	.LVL316:
 2972 0046 18B9     		cbnz	r0, .L268
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2973              		.loc 1 1616 0 is_stmt 0 discriminator 2
 2974 0048 019B     		ldr	r3, [sp, #4]
 2975 004a 1BB9     		cbnz	r3, .L269
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2976              		.loc 1 1616 0
 2977 004c 0123     		movs	r3, #1
 2978 004e 02E0     		b	.L253
 2979              	.L268:
 2980 0050 0123     		movs	r3, #1
 2981 0052 00E0     		b	.L253
 2982              	.L269:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 104


 2983 0054 0023     		movs	r3, #0
 2984              	.L253:
1616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 2985              		.loc 1 1616 0 discriminator 6
 2986 0056 43B9     		cbnz	r3, .L270
 2987              	.LBB203:
 2988              	.LBB204:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2989              		.loc 2 195 0 is_stmt 1
 2990              		.syntax unified
 2991              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2992 0058 4FF05003 			mov r3, #80												
 2993 005c 83F31188 		msr basepri, r3											
 2994 0060 BFF36F8F 		isb														
 2995 0064 BFF34F8F 		dsb														
 2996              	
 2997              	@ 0 "" 2
 2998              	.LVL317:
 2999              		.thumb
 3000              		.syntax unified
 3001              	.L255:
 3002 0068 FEE7     		b	.L255
 3003              	.L270:
 3004              	.LBE204:
 3005              	.LBE203:
 3006 006a 0025     		movs	r5, #0
 3007              	.LVL318:
 3008              	.L254:
1627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3009              		.loc 1 1627 0
 3010 006c FFF7FEFF 		bl	vPortEnterCritical
 3011              	.LVL319:
 3012              	.LBB205:
1629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3013              		.loc 1 1629 0
 3014 0070 A36B     		ldr	r3, [r4, #56]
 3015              	.LVL320:
1633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3016              		.loc 1 1633 0
 3017 0072 C3B1     		cbz	r3, .L256
1638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3018              		.loc 1 1638 0
 3019 0074 E568     		ldr	r5, [r4, #12]
 3020              	.LVL321:
1640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 3021              		.loc 1 1640 0
 3022 0076 3146     		mov	r1, r6
 3023 0078 2046     		mov	r0, r4
 3024 007a FFF7FEFF 		bl	prvCopyDataFromQueue
 3025              	.LVL322:
1644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3026              		.loc 1 1644 0
 3027 007e E560     		str	r5, [r4, #12]
1648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3028              		.loc 1 1648 0
 3029 0080 636A     		ldr	r3, [r4, #36]
 3030 0082 63B1     		cbz	r3, .L257
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 105


1650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3031              		.loc 1 1650 0
 3032 0084 04F12400 		add	r0, r4, #36
 3033 0088 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3034              	.LVL323:
 3035 008c 38B1     		cbz	r0, .L257
1653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
 3036              		.loc 1 1653 0
 3037 008e 4FF08052 		mov	r2, #268435456
 3038 0092 304B     		ldr	r3, .L272
 3039 0094 1A60     		str	r2, [r3]
 3040              		.syntax unified
 3041              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3042 0096 BFF34F8F 		dsb
 3043              	@ 0 "" 2
 3044              	@ 1653 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3045 009a BFF36F8F 		isb
 3046              	@ 0 "" 2
 3047              		.thumb
 3048              		.syntax unified
 3049              	.L257:
1665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				return pdPASS;
 3050              		.loc 1 1665 0
 3051 009e FFF7FEFF 		bl	vPortExitCritical
 3052              	.LVL324:
1666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3053              		.loc 1 1666 0
 3054 00a2 0120     		movs	r0, #1
 3055 00a4 53E0     		b	.L258
 3056              	.LVL325:
 3057              	.L256:
1670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3058              		.loc 1 1670 0
 3059 00a6 019B     		ldr	r3, [sp, #4]
 3060              	.LVL326:
 3061 00a8 1BB9     		cbnz	r3, .L259
1674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 3062              		.loc 1 1674 0
 3063 00aa FFF7FEFF 		bl	vPortExitCritical
 3064              	.LVL327:
1676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3065              		.loc 1 1676 0
 3066 00ae 0020     		movs	r0, #0
 3067 00b0 4DE0     		b	.L258
 3068              	.L259:
1678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3069              		.loc 1 1678 0
 3070 00b2 1DB9     		cbnz	r5, .L260
1683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					xEntryTimeSet = pdTRUE;
 3071              		.loc 1 1683 0
 3072 00b4 02A8     		add	r0, sp, #8
 3073 00b6 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3074              	.LVL328:
1684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3075              		.loc 1 1684 0
 3076 00ba 0125     		movs	r5, #1
 3077              	.LVL329:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 106


 3078              	.L260:
 3079              	.LBE205:
1693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3080              		.loc 1 1693 0
 3081 00bc FFF7FEFF 		bl	vPortExitCritical
 3082              	.LVL330:
1698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 3083              		.loc 1 1698 0
 3084 00c0 FFF7FEFF 		bl	vTaskSuspendAll
 3085              	.LVL331:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3086              		.loc 1 1699 0
 3087 00c4 FFF7FEFF 		bl	vPortEnterCritical
 3088              	.LVL332:
 3089 00c8 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 3090 00cc 5BB2     		sxtb	r3, r3
 3091 00ce B3F1FF3F 		cmp	r3, #-1
 3092 00d2 02D1     		bne	.L261
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3093              		.loc 1 1699 0 is_stmt 0 discriminator 1
 3094 00d4 0023     		movs	r3, #0
 3095 00d6 84F84430 		strb	r3, [r4, #68]
 3096              	.L261:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3097              		.loc 1 1699 0 discriminator 3
 3098 00da 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 3099 00de 5BB2     		sxtb	r3, r3
 3100 00e0 B3F1FF3F 		cmp	r3, #-1
 3101 00e4 02D1     		bne	.L262
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3102              		.loc 1 1699 0 discriminator 4
 3103 00e6 0023     		movs	r3, #0
 3104 00e8 84F84530 		strb	r3, [r4, #69]
 3105              	.L262:
1699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3106              		.loc 1 1699 0 discriminator 6
 3107 00ec FFF7FEFF 		bl	vPortExitCritical
 3108              	.LVL333:
1702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3109              		.loc 1 1702 0 is_stmt 1 discriminator 6
 3110 00f0 01A9     		add	r1, sp, #4
 3111              	.LVL334:
 3112 00f2 02A8     		add	r0, sp, #8
 3113 00f4 FFF7FEFF 		bl	xTaskCheckForTimeOut
 3114              	.LVL335:
 3115 00f8 F0B9     		cbnz	r0, .L263
1706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3116              		.loc 1 1706 0
 3117 00fa 2046     		mov	r0, r4
 3118 00fc FFF7FEFF 		bl	prvIsQueueEmpty
 3119              	.LVL336:
 3120 0100 A0B1     		cbz	r0, .L264
1709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvUnlockQueue( pxQueue );
 3121              		.loc 1 1709 0
 3122 0102 0199     		ldr	r1, [sp, #4]
 3123 0104 04F12400 		add	r0, r4, #36
 3124 0108 FFF7FEFF 		bl	vTaskPlaceOnEventList
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 107


 3125              	.LVL337:
1710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 3126              		.loc 1 1710 0
 3127 010c 2046     		mov	r0, r4
 3128 010e FFF7FEFF 		bl	prvUnlockQueue
 3129              	.LVL338:
1711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3130              		.loc 1 1711 0
 3131 0112 FFF7FEFF 		bl	xTaskResumeAll
 3132              	.LVL339:
 3133 0116 0028     		cmp	r0, #0
 3134 0118 A8D1     		bne	.L254
1713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
 3135              		.loc 1 1713 0
 3136 011a 4FF08052 		mov	r2, #268435456
 3137 011e 0D4B     		ldr	r3, .L272
 3138 0120 1A60     		str	r2, [r3]
 3139              		.syntax unified
 3140              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3141 0122 BFF34F8F 		dsb
 3142              	@ 0 "" 2
 3143              	@ 1713 "Middlewares/Third_Party/FreeRTOS/Source/queue.c" 1
 3144 0126 BFF36F8F 		isb
 3145              	@ 0 "" 2
 3146              		.thumb
 3147              		.syntax unified
 3148 012a 9FE7     		b	.L254
 3149              	.L264:
1724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) xTaskResumeAll();
 3150              		.loc 1 1724 0
 3151 012c 2046     		mov	r0, r4
 3152 012e FFF7FEFF 		bl	prvUnlockQueue
 3153              	.LVL340:
1725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3154              		.loc 1 1725 0
 3155 0132 FFF7FEFF 		bl	xTaskResumeAll
 3156              	.LVL341:
 3157 0136 99E7     		b	.L254
 3158              	.L263:
1732:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) xTaskResumeAll();
 3159              		.loc 1 1732 0
 3160 0138 2046     		mov	r0, r4
 3161 013a FFF7FEFF 		bl	prvUnlockQueue
 3162              	.LVL342:
1733:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3163              		.loc 1 1733 0
 3164 013e FFF7FEFF 		bl	xTaskResumeAll
 3165              	.LVL343:
1735:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3166              		.loc 1 1735 0
 3167 0142 2046     		mov	r0, r4
 3168 0144 FFF7FEFF 		bl	prvIsQueueEmpty
 3169              	.LVL344:
 3170 0148 0028     		cmp	r0, #0
 3171 014a 8FD0     		beq	.L254
1738:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3172              		.loc 1 1738 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 108


 3173 014c 0020     		movs	r0, #0
 3174              	.LVL345:
 3175              	.L258:
1746:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3176              		.loc 1 1746 0
 3177 014e 04B0     		add	sp, sp, #16
 3178              	.LCFI40:
 3179              		.cfi_def_cfa_offset 16
 3180              		@ sp needed
 3181 0150 70BD     		pop	{r4, r5, r6, pc}
 3182              	.LVL346:
 3183              	.L273:
 3184 0152 00BF     		.align	2
 3185              	.L272:
 3186 0154 04ED00E0 		.word	-536810236
 3187              		.cfi_endproc
 3188              	.LFE22:
 3190              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 3191              		.align	2
 3192              		.global	xQueueReceiveFromISR
 3193              		.thumb
 3194              		.thumb_func
 3196              	xQueueReceiveFromISR:
 3197              	.LFB23:
1750:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3198              		.loc 1 1750 0
 3199              		.cfi_startproc
 3200              		@ args = 0, pretend = 0, frame = 0
 3201              		@ frame_needed = 0, uses_anonymous_args = 0
 3202              	.LVL347:
 3203 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3204              	.LCFI41:
 3205              		.cfi_def_cfa_offset 32
 3206              		.cfi_offset 3, -32
 3207              		.cfi_offset 4, -28
 3208              		.cfi_offset 5, -24
 3209              		.cfi_offset 6, -20
 3210              		.cfi_offset 7, -16
 3211              		.cfi_offset 8, -12
 3212              		.cfi_offset 9, -8
 3213              		.cfi_offset 14, -4
 3214              	.LVL348:
1755:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3215              		.loc 1 1755 0
 3216 0004 40B9     		cbnz	r0, .L275
 3217              	.LBB206:
 3218              	.LBB207:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3219              		.loc 2 195 0
 3220              		.syntax unified
 3221              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3222 0006 4FF05003 			mov r3, #80												
 3223 000a 83F31188 		msr basepri, r3											
 3224 000e BFF36F8F 		isb														
 3225 0012 BFF34F8F 		dsb														
 3226              	
 3227              	@ 0 "" 2
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 109


 3228              	.LVL349:
 3229              		.thumb
 3230              		.syntax unified
 3231              	.L276:
 3232 0016 FEE7     		b	.L276
 3233              	.L275:
 3234 0018 0446     		mov	r4, r0
 3235              	.LBE207:
 3236              	.LBE206:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3237              		.loc 1 1756 0
 3238 001a 19B9     		cbnz	r1, .L282
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3239              		.loc 1 1756 0 is_stmt 0 discriminator 2
 3240 001c 036C     		ldr	r3, [r0, #64]
 3241 001e 1BB9     		cbnz	r3, .L283
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3242              		.loc 1 1756 0
 3243 0020 0123     		movs	r3, #1
 3244 0022 02E0     		b	.L277
 3245              	.L282:
 3246 0024 0123     		movs	r3, #1
 3247 0026 00E0     		b	.L277
 3248              	.L283:
 3249 0028 0023     		movs	r3, #0
 3250              	.L277:
1756:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3251              		.loc 1 1756 0 discriminator 6
 3252 002a 43B9     		cbnz	r3, .L278
 3253              	.LBB208:
 3254              	.LBB209:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3255              		.loc 2 195 0 is_stmt 1
 3256              		.syntax unified
 3257              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3258 002c 4FF05003 			mov r3, #80												
 3259 0030 83F31188 		msr basepri, r3											
 3260 0034 BFF36F8F 		isb														
 3261 0038 BFF34F8F 		dsb														
 3262              	
 3263              	@ 0 "" 2
 3264              	.LVL350:
 3265              		.thumb
 3266              		.syntax unified
 3267              	.L279:
 3268 003c FEE7     		b	.L279
 3269              	.L278:
 3270 003e 1746     		mov	r7, r2
 3271 0040 8946     		mov	r9, r1
 3272              	.LBE209:
 3273              	.LBE208:
1772:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3274              		.loc 1 1772 0
 3275 0042 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3276              	.LVL351:
 3277              	.LBB210:
 3278              	.LBB211:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 110


 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3279              		.loc 2 211 0
 3280              		.syntax unified
 3281              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3282 0046 EFF31186 			mrs r6, basepri											
 3283 004a 4FF05003 		mov r3, #80												
 3284 004e 83F31188 		msr basepri, r3											
 3285 0052 BFF36F8F 		isb														
 3286 0056 BFF34F8F 		dsb														
 3287              	
 3288              	@ 0 "" 2
 3289              		.thumb
 3290              		.syntax unified
 3291              	.LBE211:
 3292              	.LBE210:
 3293              	.LBB212:
1776:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3294              		.loc 1 1776 0
 3295 005a D4F83880 		ldr	r8, [r4, #56]
 3296              	.LVL352:
1779:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3297              		.loc 1 1779 0
 3298 005e B8F1000F 		cmp	r8, #0
 3299 0062 1DD0     		beq	.L284
 3300              	.LBB213:
1781:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3301              		.loc 1 1781 0
 3302 0064 94F84450 		ldrb	r5, [r4, #68]	@ zero_extendqisi2
 3303 0068 6DB2     		sxtb	r5, r5
 3304              	.LVL353:
1785:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 3305              		.loc 1 1785 0
 3306 006a 4946     		mov	r1, r9
 3307 006c 2046     		mov	r0, r4
 3308 006e FFF7FEFF 		bl	prvCopyDataFromQueue
 3309              	.LVL354:
1786:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3310              		.loc 1 1786 0
 3311 0072 08F1FF33 		add	r3, r8, #-1
 3312 0076 A363     		str	r3, [r4, #56]
1792:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
 3313              		.loc 1 1792 0
 3314 0078 B5F1FF3F 		cmp	r5, #-1
 3315 007c 0AD1     		bne	.L281
1794:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
 3316              		.loc 1 1794 0
 3317 007e 2369     		ldr	r3, [r4, #16]
 3318 0080 83B1     		cbz	r3, .L285
1796:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
 3319              		.loc 1 1796 0
 3320 0082 04F11000 		add	r0, r4, #16
 3321 0086 FFF7FEFF 		bl	xTaskRemoveFromEventList
 3322              	.LVL355:
 3323 008a 68B1     		cbz	r0, .L286
1800:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						{
 3324              		.loc 1 1800 0
 3325 008c 77B1     		cbz	r7, .L287
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 111


1802:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						}
 3326              		.loc 1 1802 0
 3327 008e 0120     		movs	r0, #1
 3328 0090 3860     		str	r0, [r7]
 3329 0092 0CE0     		b	.L280
 3330              	.L281:
1823:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
 3331              		.loc 1 1823 0
 3332 0094 6B1C     		adds	r3, r5, #1
 3333 0096 5BB2     		sxtb	r3, r3
 3334 0098 84F84430 		strb	r3, [r4, #68]
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3335              		.loc 1 1826 0
 3336 009c 0120     		movs	r0, #1
 3337 009e 06E0     		b	.L280
 3338              	.LVL356:
 3339              	.L284:
 3340              	.LBE213:
1830:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 3341              		.loc 1 1830 0
 3342 00a0 0020     		movs	r0, #0
 3343 00a2 04E0     		b	.L280
 3344              	.LVL357:
 3345              	.L285:
 3346              	.LBB214:
1826:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3347              		.loc 1 1826 0
 3348 00a4 0120     		movs	r0, #1
 3349 00a6 02E0     		b	.L280
 3350              	.L286:
 3351 00a8 0120     		movs	r0, #1
 3352 00aa 00E0     		b	.L280
 3353              	.L287:
 3354 00ac 0120     		movs	r0, #1
 3355              	.LVL358:
 3356              	.L280:
 3357              	.LBE214:
 3358              	.LBE212:
 3359              	.LBB215:
 3360              	.LBB216:
 3361              		.loc 2 229 0
 3362              		.syntax unified
 3363              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3364 00ae 86F31188 			msr basepri, r6	
 3365              	@ 0 "" 2
 3366              	.LVL359:
 3367              		.thumb
 3368              		.syntax unified
 3369              	.LBE216:
 3370              	.LBE215:
1837:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3371              		.loc 1 1837 0
 3372 00b2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3373              		.cfi_endproc
 3374              	.LFE23:
 3376 00b6 00BF     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 3377              		.align	2
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 112


 3378              		.global	xQueuePeekFromISR
 3379              		.thumb
 3380              		.thumb_func
 3382              	xQueuePeekFromISR:
 3383              	.LFB24:
1841:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3384              		.loc 1 1841 0
 3385              		.cfi_startproc
 3386              		@ args = 0, pretend = 0, frame = 0
 3387              		@ frame_needed = 0, uses_anonymous_args = 0
 3388              	.LVL360:
 3389 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3390              	.LCFI42:
 3391              		.cfi_def_cfa_offset 24
 3392              		.cfi_offset 3, -24
 3393              		.cfi_offset 4, -20
 3394              		.cfi_offset 5, -16
 3395              		.cfi_offset 6, -12
 3396              		.cfi_offset 7, -8
 3397              		.cfi_offset 14, -4
 3398              	.LVL361:
1847:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 3399              		.loc 1 1847 0
 3400 0002 40B9     		cbnz	r0, .L290
 3401              	.LBB217:
 3402              	.LBB218:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3403              		.loc 2 195 0
 3404              		.syntax unified
 3405              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3406 0004 4FF05003 			mov r3, #80												
 3407 0008 83F31188 		msr basepri, r3											
 3408 000c BFF36F8F 		isb														
 3409 0010 BFF34F8F 		dsb														
 3410              	
 3411              	@ 0 "" 2
 3412              	.LVL362:
 3413              		.thumb
 3414              		.syntax unified
 3415              	.L291:
 3416 0014 FEE7     		b	.L291
 3417              	.L290:
 3418 0016 0446     		mov	r4, r0
 3419              	.LBE218:
 3420              	.LBE217:
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3421              		.loc 1 1848 0
 3422 0018 19B9     		cbnz	r1, .L298
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3423              		.loc 1 1848 0 is_stmt 0 discriminator 2
 3424 001a 036C     		ldr	r3, [r0, #64]
 3425 001c 1BB9     		cbnz	r3, .L299
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3426              		.loc 1 1848 0
 3427 001e 0123     		movs	r3, #1
 3428 0020 02E0     		b	.L292
 3429              	.L298:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 113


 3430 0022 0123     		movs	r3, #1
 3431 0024 00E0     		b	.L292
 3432              	.L299:
 3433 0026 0023     		movs	r3, #0
 3434              	.L292:
1848:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
 3435              		.loc 1 1848 0 discriminator 6
 3436 0028 43B9     		cbnz	r3, .L293
 3437              	.LBB219:
 3438              	.LBB220:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3439              		.loc 2 195 0 is_stmt 1
 3440              		.syntax unified
 3441              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3442 002a 4FF05003 			mov r3, #80												
 3443 002e 83F31188 		msr basepri, r3											
 3444 0032 BFF36F8F 		isb														
 3445 0036 BFF34F8F 		dsb														
 3446              	
 3447              	@ 0 "" 2
 3448              	.LVL363:
 3449              		.thumb
 3450              		.syntax unified
 3451              	.L294:
 3452 003a FEE7     		b	.L294
 3453              	.L293:
 3454              	.LBE220:
 3455              	.LBE219:
1849:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3456              		.loc 1 1849 0
 3457 003c 236C     		ldr	r3, [r4, #64]
 3458 003e 43B9     		cbnz	r3, .L295
 3459              	.LBB221:
 3460              	.LBB222:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3461              		.loc 2 195 0
 3462              		.syntax unified
 3463              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3464 0040 4FF05003 			mov r3, #80												
 3465 0044 83F31188 		msr basepri, r3											
 3466 0048 BFF36F8F 		isb														
 3467 004c BFF34F8F 		dsb														
 3468              	
 3469              	@ 0 "" 2
 3470              	.LVL364:
 3471              		.thumb
 3472              		.syntax unified
 3473              	.L296:
 3474 0050 FEE7     		b	.L296
 3475              	.L295:
 3476 0052 0D46     		mov	r5, r1
 3477              	.LBE222:
 3478              	.LBE221:
1865:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3479              		.loc 1 1865 0
 3480 0054 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3481              	.LVL365:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 114


 3482              	.LBB223:
 3483              	.LBB224:
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3484              		.loc 2 211 0
 3485              		.syntax unified
 3486              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3487 0058 EFF31186 			mrs r6, basepri											
 3488 005c 4FF05003 		mov r3, #80												
 3489 0060 83F31188 		msr basepri, r3											
 3490 0064 BFF36F8F 		isb														
 3491 0068 BFF34F8F 		dsb														
 3492              	
 3493              	@ 0 "" 2
 3494              		.thumb
 3495              		.syntax unified
 3496              	.LBE224:
 3497              	.LBE223:
1870:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3498              		.loc 1 1870 0
 3499 006c A36B     		ldr	r3, [r4, #56]
 3500 006e 3BB1     		cbz	r3, .L300
1876:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 3501              		.loc 1 1876 0
 3502 0070 E768     		ldr	r7, [r4, #12]
 3503              	.LVL366:
1877:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 3504              		.loc 1 1877 0
 3505 0072 2946     		mov	r1, r5
 3506 0074 2046     		mov	r0, r4
 3507 0076 FFF7FEFF 		bl	prvCopyDataFromQueue
 3508              	.LVL367:
1878:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3509              		.loc 1 1878 0
 3510 007a E760     		str	r7, [r4, #12]
 3511              	.LVL368:
1880:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 3512              		.loc 1 1880 0
 3513 007c 0120     		movs	r0, #1
 3514 007e 00E0     		b	.L297
 3515              	.LVL369:
 3516              	.L300:
1884:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 3517              		.loc 1 1884 0
 3518 0080 0020     		movs	r0, #0
 3519              	.L297:
 3520              	.LVL370:
 3521              	.LBB225:
 3522              	.LBB226:
 3523              		.loc 2 229 0
 3524              		.syntax unified
 3525              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3526 0082 86F31188 			msr basepri, r6	
 3527              	@ 0 "" 2
 3528              	.LVL371:
 3529              		.thumb
 3530              		.syntax unified
 3531              	.LBE226:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 115


 3532              	.LBE225:
1891:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3533              		.loc 1 1891 0
 3534 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3535              		.cfi_endproc
 3536              	.LFE24:
 3538              		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 3539              		.align	2
 3540              		.global	uxQueueMessagesWaiting
 3541              		.thumb
 3542              		.thumb_func
 3544              	uxQueueMessagesWaiting:
 3545              	.LFB25:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3546              		.loc 1 1895 0
 3547              		.cfi_startproc
 3548              		@ args = 0, pretend = 0, frame = 0
 3549              		@ frame_needed = 0, uses_anonymous_args = 0
 3550              	.LVL372:
1898:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3551              		.loc 1 1898 0
 3552 0000 40B9     		cbnz	r0, .L303
 3553              	.LBB227:
 3554              	.LBB228:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3555              		.loc 2 195 0
 3556              		.syntax unified
 3557              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3558 0002 4FF05003 			mov r3, #80												
 3559 0006 83F31188 		msr basepri, r3											
 3560 000a BFF36F8F 		isb														
 3561 000e BFF34F8F 		dsb														
 3562              	
 3563              	@ 0 "" 2
 3564              	.LVL373:
 3565              		.thumb
 3566              		.syntax unified
 3567              	.L304:
 3568 0012 FEE7     		b	.L304
 3569              	.L303:
 3570              	.LBE228:
 3571              	.LBE227:
1895:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3572              		.loc 1 1895 0
 3573 0014 10B5     		push	{r4, lr}
 3574              	.LCFI43:
 3575              		.cfi_def_cfa_offset 8
 3576              		.cfi_offset 4, -8
 3577              		.cfi_offset 14, -4
 3578 0016 0446     		mov	r4, r0
1900:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3579              		.loc 1 1900 0
 3580 0018 FFF7FEFF 		bl	vPortEnterCritical
 3581              	.LVL374:
1902:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3582              		.loc 1 1902 0
 3583 001c A46B     		ldr	r4, [r4, #56]
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 116


 3584              	.LVL375:
1904:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3585              		.loc 1 1904 0
 3586 001e FFF7FEFF 		bl	vPortExitCritical
 3587              	.LVL376:
1907:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3588              		.loc 1 1907 0
 3589 0022 2046     		mov	r0, r4
 3590 0024 10BD     		pop	{r4, pc}
 3591              		.cfi_endproc
 3592              	.LFE25:
 3594 0026 00BF     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 3595              		.align	2
 3596              		.global	uxQueueSpacesAvailable
 3597              		.thumb
 3598              		.thumb_func
 3600              	uxQueueSpacesAvailable:
 3601              	.LFB26:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3602              		.loc 1 1911 0
 3603              		.cfi_startproc
 3604              		@ args = 0, pretend = 0, frame = 0
 3605              		@ frame_needed = 0, uses_anonymous_args = 0
 3606              	.LVL377:
1916:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3607              		.loc 1 1916 0
 3608 0000 40B9     		cbnz	r0, .L307
 3609              	.LBB229:
 3610              	.LBB230:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3611              		.loc 2 195 0
 3612              		.syntax unified
 3613              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3614 0002 4FF05003 			mov r3, #80												
 3615 0006 83F31188 		msr basepri, r3											
 3616 000a BFF36F8F 		isb														
 3617 000e BFF34F8F 		dsb														
 3618              	
 3619              	@ 0 "" 2
 3620              	.LVL378:
 3621              		.thumb
 3622              		.syntax unified
 3623              	.L308:
 3624 0012 FEE7     		b	.L308
 3625              	.L307:
 3626              	.LBE230:
 3627              	.LBE229:
1911:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3628              		.loc 1 1911 0
 3629 0014 10B5     		push	{r4, lr}
 3630              	.LCFI44:
 3631              		.cfi_def_cfa_offset 8
 3632              		.cfi_offset 4, -8
 3633              		.cfi_offset 14, -4
 3634 0016 0446     		mov	r4, r0
1918:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3635              		.loc 1 1918 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 117


 3636 0018 FFF7FEFF 		bl	vPortEnterCritical
 3637              	.LVL379:
1920:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3638              		.loc 1 1920 0
 3639 001c E36B     		ldr	r3, [r4, #60]
 3640 001e A46B     		ldr	r4, [r4, #56]
 3641              	.LVL380:
 3642 0020 1C1B     		subs	r4, r3, r4
 3643              	.LVL381:
1922:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3644              		.loc 1 1922 0
 3645 0022 FFF7FEFF 		bl	vPortExitCritical
 3646              	.LVL382:
1925:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3647              		.loc 1 1925 0
 3648 0026 2046     		mov	r0, r4
 3649 0028 10BD     		pop	{r4, pc}
 3650              		.cfi_endproc
 3651              	.LFE26:
 3653 002a 00BF     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 3654              		.align	2
 3655              		.global	uxQueueMessagesWaitingFromISR
 3656              		.thumb
 3657              		.thumb_func
 3659              	uxQueueMessagesWaitingFromISR:
 3660              	.LFB27:
1929:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** UBaseType_t uxReturn;
 3661              		.loc 1 1929 0
 3662              		.cfi_startproc
 3663              		@ args = 0, pretend = 0, frame = 0
 3664              		@ frame_needed = 0, uses_anonymous_args = 0
 3665              		@ link register save eliminated.
 3666              	.LVL383:
1932:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3667              		.loc 1 1932 0
 3668 0000 40B9     		cbnz	r0, .L311
 3669              	.LBB231:
 3670              	.LBB232:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3671              		.loc 2 195 0
 3672              		.syntax unified
 3673              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3674 0002 4FF05003 			mov r3, #80												
 3675 0006 83F31188 		msr basepri, r3											
 3676 000a BFF36F8F 		isb														
 3677 000e BFF34F8F 		dsb														
 3678              	
 3679              	@ 0 "" 2
 3680              	.LVL384:
 3681              		.thumb
 3682              		.syntax unified
 3683              	.L312:
 3684 0012 FEE7     		b	.L312
 3685              	.L311:
 3686              	.LBE232:
 3687              	.LBE231:
1934:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 118


 3688              		.loc 1 1934 0
 3689 0014 806B     		ldr	r0, [r0, #56]
 3690              	.LVL385:
1937:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3691              		.loc 1 1937 0
 3692 0016 7047     		bx	lr
 3693              		.cfi_endproc
 3694              	.LFE27:
 3696              		.section	.text.uxQueueGetQueueNumber,"ax",%progbits
 3697              		.align	2
 3698              		.global	uxQueueGetQueueNumber
 3699              		.thumb
 3700              		.thumb_func
 3702              	uxQueueGetQueueNumber:
 3703              	.LFB29:
1985:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
 3704              		.loc 1 1985 0
 3705              		.cfi_startproc
 3706              		@ args = 0, pretend = 0, frame = 0
 3707              		@ frame_needed = 0, uses_anonymous_args = 0
 3708              		@ link register save eliminated.
 3709              	.LVL386:
1987:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3710              		.loc 1 1987 0
 3711 0000 806C     		ldr	r0, [r0, #72]
 3712              	.LVL387:
 3713 0002 7047     		bx	lr
 3714              		.cfi_endproc
 3715              	.LFE29:
 3717              		.section	.text.vQueueSetQueueNumber,"ax",%progbits
 3718              		.align	2
 3719              		.global	vQueueSetQueueNumber
 3720              		.thumb
 3721              		.thumb_func
 3723              	vQueueSetQueueNumber:
 3724              	.LFB30:
1995:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
 3725              		.loc 1 1995 0
 3726              		.cfi_startproc
 3727              		@ args = 0, pretend = 0, frame = 0
 3728              		@ frame_needed = 0, uses_anonymous_args = 0
 3729              		@ link register save eliminated.
 3730              	.LVL388:
1996:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3731              		.loc 1 1996 0
 3732 0000 8164     		str	r1, [r0, #72]
 3733 0002 7047     		bx	lr
 3734              		.cfi_endproc
 3735              	.LFE30:
 3737              		.section	.text.ucQueueGetQueueType,"ax",%progbits
 3738              		.align	2
 3739              		.global	ucQueueGetQueueType
 3740              		.thumb
 3741              		.thumb_func
 3743              	ucQueueGetQueueType:
 3744              	.LFB31:
2005:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 119


 3745              		.loc 1 2005 0
 3746              		.cfi_startproc
 3747              		@ args = 0, pretend = 0, frame = 0
 3748              		@ frame_needed = 0, uses_anonymous_args = 0
 3749              		@ link register save eliminated.
 3750              	.LVL389:
2007:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3751              		.loc 1 2007 0
 3752 0000 90F84C00 		ldrb	r0, [r0, #76]	@ zero_extendqisi2
 3753              	.LVL390:
 3754 0004 7047     		bx	lr
 3755              		.cfi_endproc
 3756              	.LFE31:
 3758 0006 00BF     		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 3759              		.align	2
 3760              		.global	xQueueIsQueueEmptyFromISR
 3761              		.thumb
 3762              		.thumb_func
 3764              	xQueueIsQueueEmptyFromISR:
 3765              	.LFB37:
2278:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
 3766              		.loc 1 2278 0
 3767              		.cfi_startproc
 3768              		@ args = 0, pretend = 0, frame = 0
 3769              		@ frame_needed = 0, uses_anonymous_args = 0
 3770              		@ link register save eliminated.
 3771              	.LVL391:
2281:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
 3772              		.loc 1 2281 0
 3773 0000 40B9     		cbnz	r0, .L317
 3774              	.LBB233:
 3775              	.LBB234:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3776              		.loc 2 195 0
 3777              		.syntax unified
 3778              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3779 0002 4FF05003 			mov r3, #80												
 3780 0006 83F31188 		msr basepri, r3											
 3781 000a BFF36F8F 		isb														
 3782 000e BFF34F8F 		dsb														
 3783              	
 3784              	@ 0 "" 2
 3785              	.LVL392:
 3786              		.thumb
 3787              		.syntax unified
 3788              	.L318:
 3789 0012 FEE7     		b	.L318
 3790              	.L317:
 3791              	.LBE234:
 3792              	.LBE233:
2282:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3793              		.loc 1 2282 0
 3794 0014 836B     		ldr	r3, [r0, #56]
 3795 0016 0BB9     		cbnz	r3, .L320
2284:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3796              		.loc 1 2284 0
 3797 0018 0120     		movs	r0, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 120


 3798              	.LVL393:
 3799 001a 7047     		bx	lr
 3800              	.LVL394:
 3801              	.L320:
2288:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 3802              		.loc 1 2288 0
 3803 001c 0020     		movs	r0, #0
 3804              	.LVL395:
2292:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
 3805              		.loc 1 2292 0
 3806 001e 7047     		bx	lr
 3807              		.cfi_endproc
 3808              	.LFE37:
 3810              		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 3811              		.align	2
 3812              		.global	xQueueIsQueueFullFromISR
 3813              		.thumb
 3814              		.thumb_func
 3816              	xQueueIsQueueFullFromISR:
 3817              	.LFB39:
2314:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2315:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2316:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2317:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** {
 3818              		.loc 1 2317 0
 3819              		.cfi_startproc
 3820              		@ args = 0, pretend = 0, frame = 0
 3821              		@ frame_needed = 0, uses_anonymous_args = 0
 3822              		@ link register save eliminated.
 3823              	.LVL396:
2318:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** BaseType_t xReturn;
2319:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2320:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	configASSERT( xQueue );
 3824              		.loc 1 2320 0
 3825 0000 40B9     		cbnz	r0, .L322
 3826              	.LBB235:
 3827              	.LBB236:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3828              		.loc 2 195 0
 3829              		.syntax unified
 3830              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3831 0002 4FF05003 			mov r3, #80												
 3832 0006 83F31188 		msr basepri, r3											
 3833 000a BFF36F8F 		isb														
 3834 000e BFF34F8F 		dsb														
 3835              	
 3836              	@ 0 "" 2
 3837              	.LVL397:
 3838              		.thumb
 3839              		.syntax unified
 3840              	.L323:
 3841 0012 FEE7     		b	.L323
 3842              	.L322:
 3843              	.LBE236:
 3844              	.LBE235:
2321:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 3845              		.loc 1 2321 0
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 121


 3846 0014 826B     		ldr	r2, [r0, #56]
 3847 0016 C36B     		ldr	r3, [r0, #60]
 3848 0018 9A42     		cmp	r2, r3
 3849 001a 01D1     		bne	.L325
2322:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2323:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdTRUE;
 3850              		.loc 1 2323 0
 3851 001c 0120     		movs	r0, #1
 3852              	.LVL398:
 3853 001e 7047     		bx	lr
 3854              	.LVL399:
 3855              	.L325:
2324:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2325:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	else
2326:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2327:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		xReturn = pdFALSE;
 3856              		.loc 1 2327 0
 3857 0020 0020     		movs	r0, #0
 3858              	.LVL400:
2328:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2329:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	return xReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 3859              		.loc 1 2331 0
 3860 0022 7047     		bx	lr
 3861              		.cfi_endproc
 3862              	.LFE39:
 3864              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 3865              		.align	2
 3866              		.global	vQueueAddToRegistry
 3867              		.thumb
 3868              		.thumb_func
 3870              	vQueueAddToRegistry:
 3871              	.LFB40:
2332:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2333:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2334:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2335:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2337:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2338:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2339:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2340:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2341:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2342:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt removing something from the queue
2343:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2344:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2345:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2346:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2347:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2348:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* The queue is full - do we want to block or just leave without
2349:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				posting? */
2350:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2351:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2352:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2353:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return indicating that we need to block. */
2354:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 122


2355:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2356:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2357:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2358:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2359:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2360:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2361:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2362:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2363:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2364:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2365:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2366:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2367:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2368:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2369:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2370:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2371:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2372:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2373:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2374:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2375:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2376:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2377:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2378:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2379:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2380:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2381:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2382:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2383:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2384:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						/* The co-routine waiting has a higher priority so record
2385:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						that a yield might be appropriate. */
2386:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2387:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2388:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2389:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2390:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2391:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2392:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2393:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2394:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2395:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2396:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2397:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2398:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2399:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2400:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = errQUEUE_FULL;
2401:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2402:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2403:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2404:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2405:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2406:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2407:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2408:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2409:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2410:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2411:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 123


2412:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2413:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2414:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2415:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2416:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2417:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2418:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2419:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		is required to prevent an interrupt adding something to the queue
2420:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2421:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2422:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2423:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2424:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2425:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2426:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				leave with nothing? */
2427:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2428:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2429:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2430:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					indicating that we need to block. */
2431:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2432:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2433:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_BLOCKED;
2434:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2435:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2436:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2437:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					portENABLE_INTERRUPTS();
2438:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					return errQUEUE_FULL;
2439:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2441:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2442:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2443:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2444:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2445:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2446:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2447:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portDISABLE_INTERRUPTS();
2449:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2451:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2452:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Data is available from the queue. */
2453:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2454:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2455:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2456:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2457:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2458:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2459:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2460:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2461:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2462:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2463:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2464:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2465:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdPASS;
2466:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2467:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2468:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 124


2469:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2470:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					/* In this instance the co-routine could be placed directly
2471:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					into the ready list as we are within a critical section.
2472:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					Instead the same pending ready list mechanism is used as if
2473:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					the event were caused from within an interrupt. */
2474:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2475:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2476:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						xReturn = errQUEUE_YIELD;
2477:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2478:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2479:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2480:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2481:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2482:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2483:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2484:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2485:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2486:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2487:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2488:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2489:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2490:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xReturn = pdFAIL;
2491:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2492:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2493:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		portENABLE_INTERRUPTS();
2494:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2495:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2496:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2497:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2498:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2499:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2500:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2501:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2502:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2504:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2505:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2506:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2508:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		exit without doing anything. */
2509:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2510:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2512:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2513:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2514:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			co-routine has not already been woken. */
2515:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2516:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2517:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2518:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2519:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2520:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2521:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						return pdTRUE;
2522:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2523:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2524:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2525:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 125


2526:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2527:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2528:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2529:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2531:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2532:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2533:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2534:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2535:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2536:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2537:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2538:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2539:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2540:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2541:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2542:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2543:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xCoRoutinePreviouslyWoken;
2544:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2545:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2546:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2547:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2548:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2549:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2550:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2551:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2552:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
2553:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	BaseType_t xReturn;
2554:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2555:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2556:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2557:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		not then just leave without doing anything. */
2558:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2559:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2560:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* Copy the data from the queue. */
2561:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2562:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2563:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2564:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2565:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2566:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2567:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2568:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2569:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2571:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2572:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2573:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2574:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2575:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2576:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2577:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2578:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
2579:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2580:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2581:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					else
2582:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					{
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 126


2583:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2584:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					}
2585:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2586:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				else
2587:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				{
2588:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2589:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				}
2590:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2591:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2592:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2593:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2594:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2595:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdPASS;
2597:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2598:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2599:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2600:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			xReturn = pdFAIL;
2601:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2602:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return xReturn;
2604:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configUSE_CO_ROUTINES */
2607:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2610:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2611:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2612:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3872              		.loc 1 2612 0
 3873              		.cfi_startproc
 3874              		@ args = 0, pretend = 0, frame = 0
 3875              		@ frame_needed = 0, uses_anonymous_args = 0
 3876              		@ link register save eliminated.
 3877              	.LVL401:
2613:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2614:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2615:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2616:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		a free slot. */
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3878              		.loc 1 2617 0
 3879 0000 0023     		movs	r3, #0
 3880 0002 0BE0     		b	.L327
 3881              	.LVL402:
 3882              	.L330:
2618:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2619:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 3883              		.loc 1 2619 0
 3884 0004 074A     		ldr	r2, .L331
 3885 0006 52F83320 		ldr	r2, [r2, r3, lsl #3]
 3886 000a 32B9     		cbnz	r2, .L328
2620:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2621:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Store the information on this queue. */
2622:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 3887              		.loc 1 2622 0
 3888 000c 054A     		ldr	r2, .L331
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 127


 3889 000e 42F83310 		str	r1, [r2, r3, lsl #3]
2623:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 3890              		.loc 1 2623 0
 3891 0012 02EBC303 		add	r3, r2, r3, lsl #3
 3892              	.LVL403:
 3893 0016 5860     		str	r0, [r3, #4]
2624:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2625:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2626:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3894              		.loc 1 2626 0
 3895 0018 7047     		bx	lr
 3896              	.LVL404:
 3897              	.L328:
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3898              		.loc 1 2617 0 discriminator 2
 3899 001a 0133     		adds	r3, r3, #1
 3900              	.LVL405:
 3901              	.L327:
2617:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3902              		.loc 1 2617 0 is_stmt 0 discriminator 1
 3903 001c 072B     		cmp	r3, #7
 3904 001e F1D9     		bls	.L330
 3905 0020 7047     		bx	lr
 3906              	.L332:
 3907 0022 00BF     		.align	2
 3908              	.L331:
 3909 0024 00000000 		.word	xQueueRegistry
 3910              		.cfi_endproc
 3911              	.LFE40:
 3913              		.section	.text.pcQueueGetName,"ax",%progbits
 3914              		.align	2
 3915              		.global	pcQueueGetName
 3916              		.thumb
 3917              		.thumb_func
 3919              	pcQueueGetName:
 3920              	.LFB41:
2627:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2628:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2629:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2630:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2631:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2632:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2633:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
2634:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2635:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2636:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2637:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2638:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2639:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2640:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2641:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3921              		.loc 1 2641 0 is_stmt 1
 3922              		.cfi_startproc
 3923              		@ args = 0, pretend = 0, frame = 0
 3924              		@ frame_needed = 0, uses_anonymous_args = 0
 3925              		@ link register save eliminated.
 3926              	.LVL406:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 128


2642:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2644:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2645:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2646:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		removing entries from the registry while it is being searched. */
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3927              		.loc 1 2647 0
 3928 0000 0023     		movs	r3, #0
 3929 0002 0AE0     		b	.L334
 3930              	.LVL407:
 3931              	.L337:
2648:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2649:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3932              		.loc 1 2649 0
 3933 0004 074A     		ldr	r2, .L338
 3934 0006 02EBC302 		add	r2, r2, r3, lsl #3
 3935 000a 5268     		ldr	r2, [r2, #4]
 3936 000c 8242     		cmp	r2, r0
 3937 000e 03D1     		bne	.L335
2650:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2651:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 3938              		.loc 1 2651 0
 3939 0010 044A     		ldr	r2, .L338
 3940 0012 52F83300 		ldr	r0, [r2, r3, lsl #3]
 3941              	.LVL408:
2652:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3942              		.loc 1 2652 0
 3943 0016 7047     		bx	lr
 3944              	.LVL409:
 3945              	.L335:
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3946              		.loc 1 2647 0 discriminator 2
 3947 0018 0133     		adds	r3, r3, #1
 3948              	.LVL410:
 3949              	.L334:
2647:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 3950              		.loc 1 2647 0 is_stmt 0 discriminator 1
 3951 001a 072B     		cmp	r3, #7
 3952 001c F2D9     		bls	.L337
2643:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
 3953              		.loc 1 2643 0 is_stmt 1
 3954 001e 0020     		movs	r0, #0
 3955              	.LVL411:
2653:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2654:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2655:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2656:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2657:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2658:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2659:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2660:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		return pcReturn;
2661:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 3956              		.loc 1 2661 0
 3957 0020 7047     		bx	lr
 3958              	.L339:
 3959 0022 00BF     		.align	2
 3960              	.L338:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 129


 3961 0024 00000000 		.word	xQueueRegistry
 3962              		.cfi_endproc
 3963              	.LFE41:
 3965              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 3966              		.align	2
 3967              		.global	vQueueUnregisterQueue
 3968              		.thumb
 3969              		.thumb_func
 3971              	vQueueUnregisterQueue:
 3972              	.LFB42:
2662:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2663:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2664:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2665:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2666:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2667:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2669:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 3973              		.loc 1 2669 0
 3974              		.cfi_startproc
 3975              		@ args = 0, pretend = 0, frame = 0
 3976              		@ frame_needed = 0, uses_anonymous_args = 0
 3977              		@ link register save eliminated.
 3978              	.LVL412:
2670:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	UBaseType_t ux;
2671:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2673:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		registry. */
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 3979              		.loc 1 2674 0
 3980 0000 0023     		movs	r3, #0
 3981 0002 0EE0     		b	.L341
 3982              	.LVL413:
 3983              	.L344:
2675:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2676:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 3984              		.loc 1 2676 0
 3985 0004 084A     		ldr	r2, .L345
 3986 0006 02EBC302 		add	r2, r2, r3, lsl #3
 3987 000a 5268     		ldr	r2, [r2, #4]
 3988 000c 8242     		cmp	r2, r0
 3989 000e 07D1     		bne	.L342
2677:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2678:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2679:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 3990              		.loc 1 2679 0
 3991 0010 054A     		ldr	r2, .L345
 3992 0012 0021     		movs	r1, #0
 3993 0014 42F83310 		str	r1, [r2, r3, lsl #3]
2680:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2681:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2682:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				appear in the registry twice if it is added, removed, then
2683:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				added again. */
2684:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 3994              		.loc 1 2684 0
 3995 0018 02EBC303 		add	r3, r2, r3, lsl #3
 3996              	.LVL414:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 130


 3997 001c 5960     		str	r1, [r3, #4]
2685:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				break;
 3998              		.loc 1 2685 0
 3999 001e 7047     		bx	lr
 4000              	.LVL415:
 4001              	.L342:
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4002              		.loc 1 2674 0 discriminator 2
 4003 0020 0133     		adds	r3, r3, #1
 4004              	.LVL416:
 4005              	.L341:
2674:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4006              		.loc 1 2674 0 is_stmt 0 discriminator 1
 4007 0022 072B     		cmp	r3, #7
 4008 0024 EED9     		bls	.L344
 4009 0026 7047     		bx	lr
 4010              	.L346:
 4011              		.align	2
 4012              	.L345:
 4013 0028 00000000 		.word	xQueueRegistry
 4014              		.cfi_endproc
 4015              	.LFE42:
 4017              		.section	.text.vQueueDelete,"ax",%progbits
 4018              		.align	2
 4019              		.global	vQueueDelete
 4020              		.thumb
 4021              		.thumb_func
 4023              	vQueueDelete:
 4024              	.LFB28:
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4025              		.loc 1 1941 0 is_stmt 1
 4026              		.cfi_startproc
 4027              		@ args = 0, pretend = 0, frame = 0
 4028              		@ frame_needed = 0, uses_anonymous_args = 0
 4029              	.LVL417:
1944:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	traceQUEUE_DELETE( pxQueue );
 4030              		.loc 1 1944 0
 4031 0000 40B9     		cbnz	r0, .L348
 4032              	.LBB237:
 4033              	.LBB238:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4034              		.loc 2 195 0
 4035              		.syntax unified
 4036              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4037 0002 4FF05003 			mov r3, #80												
 4038 0006 83F31188 		msr basepri, r3											
 4039 000a BFF36F8F 		isb														
 4040 000e BFF34F8F 		dsb														
 4041              	
 4042              	@ 0 "" 2
 4043              	.LVL418:
 4044              		.thumb
 4045              		.syntax unified
 4046              	.L349:
 4047 0012 FEE7     		b	.L349
 4048              	.L348:
 4049              	.LBE238:
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 131


 4050              	.LBE237:
1941:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 4051              		.loc 1 1941 0
 4052 0014 10B5     		push	{r4, lr}
 4053              	.LCFI45:
 4054              		.cfi_def_cfa_offset 8
 4055              		.cfi_offset 4, -8
 4056              		.cfi_offset 14, -4
 4057 0016 0446     		mov	r4, r0
1949:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	}
 4058              		.loc 1 1949 0
 4059 0018 FFF7FEFF 		bl	vQueueUnregisterQueue
 4060              	.LVL419:
1963:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
 4061              		.loc 1 1963 0
 4062 001c 94F84630 		ldrb	r3, [r4, #70]	@ zero_extendqisi2
 4063 0020 13B9     		cbnz	r3, .L347
1965:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
 4064              		.loc 1 1965 0
 4065 0022 2046     		mov	r0, r4
 4066 0024 FFF7FEFF 		bl	vPortFree
 4067              	.LVL420:
 4068              	.L347:
 4069 0028 10BD     		pop	{r4, pc}
 4070              		.cfi_endproc
 4071              	.LFE28:
 4073 002a 00BF     		.section	.text.vQueueWaitForMessageRestricted,"ax",%progbits
 4074              		.align	2
 4075              		.global	vQueueWaitForMessageRestricted
 4076              		.thumb
 4077              		.thumb_func
 4079              	vQueueWaitForMessageRestricted:
 4080              	.LFB43:
2686:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2687:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			else
2688:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			{
2689:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			}
2691:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2692:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2693:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2694:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2695:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2696:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** /*-----------------------------------------------------------*/
2697:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2698:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** #if ( configUSE_TIMERS == 1 )
2699:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2700:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType
2701:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	{
 4081              		.loc 1 2701 0
 4082              		.cfi_startproc
 4083              		@ args = 0, pretend = 0, frame = 0
 4084              		@ frame_needed = 0, uses_anonymous_args = 0
 4085              	.LVL421:
 4086 0000 70B5     		push	{r4, r5, r6, lr}
 4087              	.LCFI46:
 4088              		.cfi_def_cfa_offset 16
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 132


 4089              		.cfi_offset 4, -16
 4090              		.cfi_offset 5, -12
 4091              		.cfi_offset 6, -8
 4092              		.cfi_offset 14, -4
 4093 0002 0446     		mov	r4, r0
 4094 0004 0D46     		mov	r5, r1
 4095 0006 1646     		mov	r6, r2
 4096              	.LVL422:
2702:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2703:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* This function should not be called by application code hence the
2705:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2706:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		designed for use by kernel code, and has special calling requirements.
2707:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		It can result in vListInsert() being called on a list that can only
2708:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		possibly ever have one item in it, so the list will be fast, but even
2709:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		so it should be called with the scheduler locked and not from a critical
2710:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		section. */
2711:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 
2712:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		/* Only do anything if there are no messages in the queue.  This function
2713:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		will not actually cause the task to block, just place it on a blocked
2714:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		list.  It will not block until the scheduler is unlocked - at which
2715:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		time a yield will be performed.  If an item is added to the queue while
2716:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		the queue is locked, and the calling task blocks on the queue, then the
2717:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		calling task will be immediately unblocked when the queue is unlocked. */
2718:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvLockQueue( pxQueue );
 4097              		.loc 1 2718 0
 4098 0008 FFF7FEFF 		bl	vPortEnterCritical
 4099              	.LVL423:
 4100 000c 94F84430 		ldrb	r3, [r4, #68]	@ zero_extendqisi2
 4101 0010 5BB2     		sxtb	r3, r3
 4102 0012 B3F1FF3F 		cmp	r3, #-1
 4103 0016 02D1     		bne	.L353
 4104              		.loc 1 2718 0 is_stmt 0 discriminator 1
 4105 0018 0023     		movs	r3, #0
 4106 001a 84F84430 		strb	r3, [r4, #68]
 4107              	.L353:
 4108              		.loc 1 2718 0 discriminator 3
 4109 001e 94F84530 		ldrb	r3, [r4, #69]	@ zero_extendqisi2
 4110 0022 5BB2     		sxtb	r3, r3
 4111 0024 B3F1FF3F 		cmp	r3, #-1
 4112 0028 02D1     		bne	.L354
 4113              		.loc 1 2718 0 discriminator 4
 4114 002a 0023     		movs	r3, #0
 4115 002c 84F84530 		strb	r3, [r4, #69]
 4116              	.L354:
 4117              		.loc 1 2718 0 discriminator 6
 4118 0030 FFF7FEFF 		bl	vPortExitCritical
 4119              	.LVL424:
2719:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 4120              		.loc 1 2719 0 is_stmt 1 discriminator 6
 4121 0034 A36B     		ldr	r3, [r4, #56]
 4122 0036 2BB9     		cbnz	r3, .L355
2720:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2721:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			/* There is nothing in the queue, block for the specified period. */
2722:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefi
 4123              		.loc 1 2722 0
 4124 0038 3246     		mov	r2, r6
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 133


 4125 003a 2946     		mov	r1, r5
 4126 003c 04F12400 		add	r0, r4, #36
 4127 0040 FFF7FEFF 		bl	vTaskPlaceOnEventListRestricted
 4128              	.LVL425:
 4129              	.L355:
2723:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2724:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		else
2725:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		{
2726:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2727:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		}
2728:Middlewares/Third_Party/FreeRTOS/Source/queue.c **** 		prvUnlockQueue( pxQueue );
 4130              		.loc 1 2728 0
 4131 0044 2046     		mov	r0, r4
 4132 0046 FFF7FEFF 		bl	prvUnlockQueue
 4133              	.LVL426:
 4134 004a 70BD     		pop	{r4, r5, r6, pc}
 4135              		.cfi_endproc
 4136              	.LFE43:
 4138              		.comm	xQueueRegistry,64,4
 4139              		.text
 4140              	.Letext0:
 4141              		.file 3 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4.1\\include\\s
 4142              		.file 4 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_
 4143              		.file 5 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 4144              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 4145              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 4146              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 4147              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 4148              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 134


DEFINED SYMBOLS
                            *ABS*:00000000 queue.c
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:22     .text.prvGetDisinheritPriorityAfterTimeout:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:26     .text.prvGetDisinheritPriorityAfterTimeout:00000000 prvGetDisinheritPriorityAfterTimeout
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:56     .text.prvIsQueueFull:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:60     .text.prvIsQueueFull:00000000 prvIsQueueFull
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:101    .text.prvIsQueueEmpty:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:105    .text.prvIsQueueEmpty:00000000 prvIsQueueEmpty
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:144    .text.prvCopyDataToQueue:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:148    .text.prvCopyDataToQueue:00000000 prvCopyDataToQueue
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:267    .text.prvCopyDataFromQueue:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:271    .text.prvCopyDataFromQueue:00000000 prvCopyDataFromQueue
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:319    .text.prvUnlockQueue:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:323    .text.prvUnlockQueue:00000000 prvUnlockQueue
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:424    .text.xQueueGenericReset:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:429    .text.xQueueGenericReset:00000000 xQueueGenericReset
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:535    .text.xQueueGenericReset:0000007c $d
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:540    .text.prvInitialiseNewQueue:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:544    .text.prvInitialiseNewQueue:00000000 prvInitialiseNewQueue
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:589    .text.xQueueGenericCreateStatic:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:594    .text.xQueueGenericCreateStatic:00000000 xQueueGenericCreateStatic
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:786    .text.xQueueGenericCreate:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:791    .text.xQueueGenericCreate:00000000 xQueueGenericCreate
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:882    .text.xQueueGetMutexHolder:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:887    .text.xQueueGetMutexHolder:00000000 xQueueGetMutexHolder
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:926    .text.xQueueGetMutexHolderFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:931    .text.xQueueGetMutexHolderFromISR:00000000 xQueueGetMutexHolderFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:978    .text.xQueueCreateCountingSemaphoreStatic:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:983    .text.xQueueCreateCountingSemaphoreStatic:00000000 xQueueCreateCountingSemaphoreStatic
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1071   .text.xQueueCreateCountingSemaphore:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1076   .text.xQueueCreateCountingSemaphore:00000000 xQueueCreateCountingSemaphore
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1153   .text.xQueueGenericSend:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1158   .text.xQueueGenericSend:00000000 xQueueGenericSend
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1505   .text.xQueueGenericSend:0000018c $d
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1510   .text.prvInitialiseMutex:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1514   .text.prvInitialiseMutex:00000000 prvInitialiseMutex
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1553   .text.xQueueCreateMutex:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1558   .text.xQueueCreateMutex:00000000 xQueueCreateMutex
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1590   .text.xQueueCreateMutexStatic:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1595   .text.xQueueCreateMutexStatic:00000000 xQueueCreateMutexStatic
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1637   .text.xQueueGiveMutexRecursive:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1642   .text.xQueueGiveMutexRecursive:00000000 xQueueGiveMutexRecursive
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1716   .text.xQueueGenericSendFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1721   .text.xQueueGenericSendFromISR:00000000 xQueueGenericSendFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1945   .text.xQueueGiveFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:1950   .text.xQueueGiveFromISR:00000000 xQueueGiveFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2151   .text.xQueueReceive:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2156   .text.xQueueReceive:00000000 xQueueReceive
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2449   .text.xQueueReceive:00000154 $d
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2454   .text.xQueueSemaphoreTake:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2459   .text.xQueueSemaphoreTake:00000000 xQueueSemaphoreTake
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2802   .text.xQueueSemaphoreTake:0000018c $d
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2807   .text.xQueueTakeMutexRecursive:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2812   .text.xQueueTakeMutexRecursive:00000000 xQueueTakeMutexRecursive
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2887   .text.xQueuePeek:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:2892   .text.xQueuePeek:00000000 xQueuePeek
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3186   .text.xQueuePeek:00000154 $d
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 135


D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3191   .text.xQueueReceiveFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3196   .text.xQueueReceiveFromISR:00000000 xQueueReceiveFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3377   .text.xQueuePeekFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3382   .text.xQueuePeekFromISR:00000000 xQueuePeekFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3539   .text.uxQueueMessagesWaiting:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3544   .text.uxQueueMessagesWaiting:00000000 uxQueueMessagesWaiting
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3595   .text.uxQueueSpacesAvailable:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3600   .text.uxQueueSpacesAvailable:00000000 uxQueueSpacesAvailable
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3654   .text.uxQueueMessagesWaitingFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3659   .text.uxQueueMessagesWaitingFromISR:00000000 uxQueueMessagesWaitingFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3697   .text.uxQueueGetQueueNumber:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3702   .text.uxQueueGetQueueNumber:00000000 uxQueueGetQueueNumber
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3718   .text.vQueueSetQueueNumber:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3723   .text.vQueueSetQueueNumber:00000000 vQueueSetQueueNumber
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3738   .text.ucQueueGetQueueType:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3743   .text.ucQueueGetQueueType:00000000 ucQueueGetQueueType
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3759   .text.xQueueIsQueueEmptyFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3764   .text.xQueueIsQueueEmptyFromISR:00000000 xQueueIsQueueEmptyFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3811   .text.xQueueIsQueueFullFromISR:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3816   .text.xQueueIsQueueFullFromISR:00000000 xQueueIsQueueFullFromISR
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3865   .text.vQueueAddToRegistry:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3870   .text.vQueueAddToRegistry:00000000 vQueueAddToRegistry
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3909   .text.vQueueAddToRegistry:00000024 $d
                            *COM*:00000040 xQueueRegistry
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3914   .text.pcQueueGetName:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3919   .text.pcQueueGetName:00000000 pcQueueGetName
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3961   .text.pcQueueGetName:00000024 $d
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3966   .text.vQueueUnregisterQueue:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:3971   .text.vQueueUnregisterQueue:00000000 vQueueUnregisterQueue
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:4013   .text.vQueueUnregisterQueue:00000028 $d
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:4018   .text.vQueueDelete:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:4023   .text.vQueueDelete:00000000 vQueueDelete
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:4074   .text.vQueueWaitForMessageRestricted:00000000 $t
D:\Programme\Cygwin\tmp\ccRLkmeJ.s:4079   .text.vQueueWaitForMessageRestricted:00000000 vQueueWaitForMessageRestricted
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
xTaskPriorityDisinherit
memcpy
xTaskRemoveFromEventList
vTaskMissedYield
vListInitialise
pvPortMalloc
xTaskGetSchedulerState
vTaskInternalSetTimeOutState
vTaskSuspendAll
xTaskCheckForTimeOut
vTaskPlaceOnEventList
xTaskResumeAll
xTaskGetCurrentTaskHandle
vPortValidateInterruptPriority
pvTaskIncrementMutexHeldCount
xTaskPriorityInherit
vTaskPriorityDisinheritAfterTimeout
vPortFree
ARM GAS  D:\Programme\Cygwin\tmp\ccRLkmeJ.s 			page 136


vTaskPlaceOnEventListRestricted
