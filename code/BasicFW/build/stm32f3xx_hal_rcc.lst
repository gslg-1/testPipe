ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"stm32f3xx_hal_rcc.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_RCC_DeInit
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RCC_DeInit:
  28              	.LFB123:
  29              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 2


  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 3


  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 4


 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 5


 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  30              		.loc 1 217 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 16
  37              		.cfi_offset 3, -16
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41              	.LVL0:
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0;
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit */
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  42              		.loc 1 221 0
  43 0002 384A     		ldr	r2, .L14
  44 0004 1368     		ldr	r3, [r2]
  45 0006 43F00103 		orr	r3, r3, #1
  46 000a 1360     		str	r3, [r2]
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSIRDY bit is set before writing default HSITRIM value */
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  47              		.loc 1 225 0
  48 000c FFF7FEFF 		bl	HAL_GetTick
  49              	.LVL1:
  50 0010 0446     		mov	r4, r0
  51              	.LVL2:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till HSI is ready */
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  52              		.loc 1 228 0
  53 0012 04E0     		b	.L2
  54              	.LVL3:
  55              	.L4:
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  56              		.loc 1 230 0
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 6


  57 0014 FFF7FEFF 		bl	HAL_GetTick
  58              	.LVL4:
  59 0018 001B     		subs	r0, r0, r4
  60 001a 0228     		cmp	r0, #2
  61 001c 58D8     		bhi	.L9
  62              	.L2:
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
  63              		.loc 1 228 0
  64 001e 314B     		ldr	r3, .L14
  65 0020 1B68     		ldr	r3, [r3]
  66 0022 13F0020F 		tst	r3, #2
  67 0026 F5D0     		beq	.L4
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSITRIM default value */
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, RCC_CR_HSITRIM_4);
  68              		.loc 1 237 0
  69 0028 2E4A     		ldr	r2, .L14
  70 002a 1368     		ldr	r3, [r2]
  71 002c 23F0F803 		bic	r3, r3, #248
  72 0030 43F08003 		orr	r3, r3, #128
  73 0034 1360     		str	r3, [r2]
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
  74              		.loc 1 240 0
  75 0036 5168     		ldr	r1, [r2, #4]
  76 0038 2B4B     		ldr	r3, .L14+4
  77 003a 0B40     		ands	r3, r3, r1
  78 003c 5360     		str	r3, [r2, #4]
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure HSI selected as system clock source */
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  79              		.loc 1 244 0
  80 003e FFF7FEFF 		bl	HAL_GetTick
  81              	.LVL5:
  82 0042 0446     		mov	r4, r0
  83              	.LVL6:
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Wait till system clock source is ready */
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
  84              		.loc 1 247 0
  85 0044 06E0     		b	.L5
  86              	.LVL7:
  87              	.L6:
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  88              		.loc 1 249 0
  89 0046 FFF7FEFF 		bl	HAL_GetTick
  90              	.LVL8:
  91 004a 001B     		subs	r0, r0, r4
  92 004c 41F28833 		movw	r3, #5000
  93 0050 9842     		cmp	r0, r3
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 7


  94 0052 3FD8     		bhi	.L10
  95              	.L5:
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
  96              		.loc 1 247 0
  97 0054 234B     		ldr	r3, .L14
  98 0056 5B68     		ldr	r3, [r3, #4]
  99 0058 13F00C0F 		tst	r3, #12
 100 005c F3D1     		bne	.L6
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable for HSI as system clock source */
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 101              		.loc 1 256 0
 102 005e 234A     		ldr	r2, .L14+8
 103 0060 234B     		ldr	r3, .L14+12
 104 0062 1A60     		str	r2, [r3]
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clock settings  */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(HAL_InitTick(uwTickPrio) != HAL_OK)
 105              		.loc 1 259 0
 106 0064 234B     		ldr	r3, .L14+16
 107 0066 1868     		ldr	r0, [r3]
 108 0068 FFF7FEFF 		bl	HAL_InitTick
 109              	.LVL9:
 110 006c 0446     		mov	r4, r0
 111              	.LVL10:
 112 006e 0028     		cmp	r0, #0
 113 0070 32D1     		bne	.L11
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
 114              		.loc 1 265 0
 115 0072 1C4A     		ldr	r2, .L14
 116 0074 1368     		ldr	r3, [r2]
 117 0076 23F08473 		bic	r3, r3, #17301504
 118 007a 23F48033 		bic	r3, r3, #65536
 119 007e 1360     		str	r3, [r2]
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 120              		.loc 1 268 0
 121 0080 1368     		ldr	r3, [r2]
 122 0082 23F48023 		bic	r3, r3, #262144
 123 0086 1360     		str	r3, [r2]
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Insure PLLRDY is reset */
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get start tick */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 124              		.loc 1 272 0
 125 0088 FFF7FEFF 		bl	HAL_GetTick
 126              	.LVL11:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 8


 127 008c 0546     		mov	r5, r0
 128              	.LVL12:
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 129              		.loc 1 273 0
 130 008e 04E0     		b	.L7
 131              	.LVL13:
 132              	.L8:
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 133              		.loc 1 275 0
 134 0090 FFF7FEFF 		bl	HAL_GetTick
 135              	.LVL14:
 136 0094 401B     		subs	r0, r0, r5
 137 0096 0228     		cmp	r0, #2
 138 0098 20D8     		bhi	.L12
 139              	.L7:
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   while(READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 140              		.loc 1 273 0
 141 009a 124B     		ldr	r3, .L14
 142 009c 1B68     		ldr	r3, [r3]
 143 009e 13F0007F 		tst	r3, #33554432
 144 00a2 F5D1     		bne	.L8
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_TIMEOUT;
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 145              		.loc 1 282 0
 146 00a4 0F4B     		ldr	r3, .L14
 147 00a6 0022     		movs	r2, #0
 148 00a8 5A60     		str	r2, [r3, #4]
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 149              		.loc 1 285 0
 150 00aa DA62     		str	r2, [r3, #44]
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
 151              		.loc 1 288 0
 152 00ac 1A63     		str	r2, [r3, #48]
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Clear all interrupt flags */
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CIR, RCC_CIR_LSIRDYC | RCC_CIR_LSERDYC | RCC_CIR_HSIRDYC | RCC_CIR_HSERDYC | RCC_CIR
 153              		.loc 1 291 0
 154 00ae 9968     		ldr	r1, [r3, #8]
 155 00b0 41F41F01 		orr	r1, r1, #10420224
 156 00b4 9960     		str	r1, [r3, #8]
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 157              		.loc 1 294 0
 158 00b6 9A60     		str	r2, [r3, #8]
 159              	.LVL15:
 160              	.LBB168:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 9


 161              	.LBB169:
 162              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 10


  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 11


 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 12


 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 13


 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 14


 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 15


 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 16


 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 17


 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 18


 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 19


 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 20


 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 21


 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 22


 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 23


 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 24


 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 25


 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 26


 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 163              		.loc 2 988 0
 164 00b8 4FF08072 		mov	r2, #16777216
 165              		.syntax unified
 166              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 167 00bc 92FAA2F2 		rbit r2, r2
 168              	@ 0 "" 2
 169              	.LVL16:
 170              		.thumb
 171              		.syntax unified
 172              	.LBE169:
 173              	.LBE168:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset all CSR flags */
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_CLEAR_RESET_FLAGS();
 174              		.loc 1 297 0
 175 00c0 B2FA82F2 		clz	r2, r2
 176 00c4 0C4B     		ldr	r3, .L14+20
 177 00c6 1344     		add	r3, r3, r2
 178 00c8 9B00     		lsls	r3, r3, #2
 179 00ca 0122     		movs	r2, #1
 180 00cc 1A60     		str	r2, [r3]
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 181              		.loc 1 299 0
 182 00ce 06E0     		b	.L3
 183              	.LVL17:
 184              	.L9:
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 185              		.loc 1 232 0
 186 00d0 0324     		movs	r4, #3
 187              	.LVL18:
 188 00d2 04E0     		b	.L3
 189              	.LVL19:
 190              	.L10:
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 191              		.loc 1 251 0
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 27


 192 00d4 0324     		movs	r4, #3
 193              	.LVL20:
 194 00d6 02E0     		b	.L3
 195              	.L11:
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 196              		.loc 1 261 0
 197 00d8 0124     		movs	r4, #1
 198 00da 00E0     		b	.L3
 199              	.LVL21:
 200              	.L12:
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 201              		.loc 1 277 0
 202 00dc 0324     		movs	r4, #3
 203              	.LVL22:
 204              	.L3:
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 205              		.loc 1 300 0
 206 00de 2046     		mov	r0, r4
 207 00e0 38BD     		pop	{r3, r4, r5, pc}
 208              	.L15:
 209 00e2 00BF     		.align	2
 210              	.L14:
 211 00e4 00100240 		.word	1073876992
 212 00e8 0CC0FFF8 		.word	-117456884
 213 00ec 00127A00 		.word	8000000
 214 00f0 00000000 		.word	SystemCoreClock
 215 00f4 00000000 		.word	uwTickPrio
 216 00f8 20819010 		.word	277905696
 217              		.cfi_endproc
 218              	.LFE123:
 220              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 221              		.align	2
 222              		.global	HAL_RCC_OscConfig
 223              		.thumb
 224              		.thumb_func
 226              	HAL_RCC_OscConfig:
 227              	.LFB124:
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 228              		.loc 1 317 0
 229              		.cfi_startproc
 230              		@ args = 0, pretend = 0, frame = 8
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 28


 231              		@ frame_needed = 0, uses_anonymous_args = 0
 232              	.LVL23:
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t pll_config;
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t pll_config2;
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_OscInitStruct == NULL)
 233              		.loc 1 325 0
 234 0000 0028     		cmp	r0, #0
 235 0002 00F0FA82 		beq	.L90
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart;
 236              		.loc 1 317 0
 237 0006 70B5     		push	{r4, r5, r6, lr}
 238              	.LCFI1:
 239              		.cfi_def_cfa_offset 16
 240              		.cfi_offset 4, -16
 241              		.cfi_offset 5, -12
 242              		.cfi_offset 6, -8
 243              		.cfi_offset 14, -4
 244 0008 82B0     		sub	sp, sp, #8
 245              	.LCFI2:
 246              		.cfi_def_cfa_offset 24
 247 000a 0446     		mov	r4, r0
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 248              		.loc 1 334 0
 249 000c 0368     		ldr	r3, [r0]
 250 000e 13F0010F 		tst	r3, #1
 251 0012 00F09D80 		beq	.L18
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 252              		.loc 1 340 0
 253 0016 B74B     		ldr	r3, .L111
 254 0018 5B68     		ldr	r3, [r3, #4]
 255 001a 03F00C03 		and	r3, r3, #12
 256 001e 042B     		cmp	r3, #4
 257 0020 0AD0     		beq	.L19
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 258              		.loc 1 341 0
 259 0022 B44B     		ldr	r3, .L111
 260 0024 5B68     		ldr	r3, [r3, #4]
 261 0026 03F00C03 		and	r3, r3, #12
 262 002a 082B     		cmp	r3, #8
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 29


 263 002c 1BD1     		bne	.L20
 264              		.loc 1 341 0 is_stmt 0 discriminator 1
 265 002e B14B     		ldr	r3, .L111
 266 0030 5B68     		ldr	r3, [r3, #4]
 267 0032 13F4803F 		tst	r3, #65536
 268 0036 16D0     		beq	.L20
 269              	.L19:
 270              	.LVL24:
 271              	.LBB170:
 272              	.LBB171:
 273              		.loc 2 988 0 is_stmt 1
 274 0038 4FF40033 		mov	r3, #131072
 275              		.syntax unified
 276              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 277 003c 93FAA3F3 		rbit r3, r3
 278              	@ 0 "" 2
 279              	.LVL25:
 280              		.thumb
 281              		.syntax unified
 282              	.LBE171:
 283              	.LBE170:
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 284              		.loc 1 343 0
 285 0040 AC4B     		ldr	r3, .L111
 286 0042 1968     		ldr	r1, [r3]
 287              	.LVL26:
 288              	.LBB172:
 289              	.LBB173:
 290              		.loc 2 988 0
 291 0044 4FF40033 		mov	r3, #131072
 292              		.syntax unified
 293              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 294 0048 93FAA3F3 		rbit r3, r3
 295              	@ 0 "" 2
 296              	.LVL27:
 297              		.thumb
 298              		.syntax unified
 299              	.LBE173:
 300              	.LBE172:
 301              		.loc 1 343 0
 302 004c B3FA83F3 		clz	r3, r3
 303 0050 03F01F03 		and	r3, r3, #31
 304 0054 0122     		movs	r2, #1
 305 0056 02FA03F3 		lsl	r3, r2, r3
 306 005a 1942     		tst	r1, r3
 307 005c 78D0     		beq	.L18
 308              		.loc 1 343 0 is_stmt 0 discriminator 13
 309 005e 6368     		ldr	r3, [r4, #4]
 310 0060 002B     		cmp	r3, #0
 311 0062 75D1     		bne	.L18
 312 0064 CBE2     		b	.L91
 313              	.L20:
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 30


 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 314              		.loc 1 351 0 is_stmt 1
 315 0066 6368     		ldr	r3, [r4, #4]
 316 0068 B3F5803F 		cmp	r3, #65536
 317 006c 05D1     		bne	.L23
 318              		.loc 1 351 0 is_stmt 0 discriminator 1
 319 006e A14A     		ldr	r2, .L111
 320 0070 1368     		ldr	r3, [r2]
 321 0072 43F48033 		orr	r3, r3, #65536
 322 0076 1360     		str	r3, [r2]
 323 0078 26E0     		b	.L24
 324              	.L23:
 325              		.loc 1 351 0 discriminator 2
 326 007a 63B9     		cbnz	r3, .L25
 327              		.loc 1 351 0 discriminator 3
 328 007c 03F18043 		add	r3, r3, #1073741824
 329 0080 03F50433 		add	r3, r3, #135168
 330 0084 1A68     		ldr	r2, [r3]
 331 0086 22F48032 		bic	r2, r2, #65536
 332 008a 1A60     		str	r2, [r3]
 333 008c 1A68     		ldr	r2, [r3]
 334 008e 22F48022 		bic	r2, r2, #262144
 335 0092 1A60     		str	r2, [r3]
 336 0094 18E0     		b	.L24
 337              	.L25:
 338              		.loc 1 351 0 discriminator 4
 339 0096 B3F5A02F 		cmp	r3, #327680
 340 009a 0CD1     		bne	.L26
 341              		.loc 1 351 0 discriminator 5
 342 009c 03F18043 		add	r3, r3, #1073741824
 343 00a0 A3F53C33 		sub	r3, r3, #192512
 344 00a4 1A68     		ldr	r2, [r3]
 345 00a6 42F48022 		orr	r2, r2, #262144
 346 00aa 1A60     		str	r2, [r3]
 347 00ac 1A68     		ldr	r2, [r3]
 348 00ae 42F48032 		orr	r2, r2, #65536
 349 00b2 1A60     		str	r2, [r3]
 350 00b4 08E0     		b	.L24
 351              	.L26:
 352              		.loc 1 351 0 discriminator 6
 353 00b6 8F4B     		ldr	r3, .L111
 354 00b8 1A68     		ldr	r2, [r3]
 355 00ba 22F48032 		bic	r2, r2, #65536
 356 00be 1A60     		str	r2, [r3]
 357 00c0 1A68     		ldr	r2, [r3]
 358 00c2 22F48022 		bic	r2, r2, #262144
 359 00c6 1A60     		str	r2, [r3]
 360              	.L24:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 361              		.loc 1 355 0 is_stmt 1
 362 00c8 8A49     		ldr	r1, .L111
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 31


 363 00ca CB6A     		ldr	r3, [r1, #44]
 364 00cc 23F00F02 		bic	r2, r3, #15
 365 00d0 A368     		ldr	r3, [r4, #8]
 366 00d2 1343     		orrs	r3, r3, r2
 367 00d4 CB62     		str	r3, [r1, #44]
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 368              		.loc 1 359 0
 369 00d6 6368     		ldr	r3, [r4, #4]
 370 00d8 EBB1     		cbz	r3, .L27
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 371              		.loc 1 362 0
 372 00da FFF7FEFF 		bl	HAL_GetTick
 373              	.LVL28:
 374 00de 0546     		mov	r5, r0
 375              	.LVL29:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 376              		.loc 1 365 0
 377 00e0 05E0     		b	.L28
 378              	.LVL30:
 379              	.L31:
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 380              		.loc 1 367 0
 381 00e2 FFF7FEFF 		bl	HAL_GetTick
 382              	.LVL31:
 383 00e6 401B     		subs	r0, r0, r5
 384 00e8 6428     		cmp	r0, #100
 385 00ea 00F28A82 		bhi	.L92
 386              	.L28:
 387              	.LVL32:
 388              	.LBB174:
 389              	.LBB175:
 390              		.loc 2 988 0
 391 00ee 4FF40033 		mov	r3, #131072
 392              		.syntax unified
 393              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 394 00f2 93FAA3F3 		rbit r3, r3
 395              	@ 0 "" 2
 396              	.LVL33:
 397              		.thumb
 398              		.syntax unified
 399              	.LBE175:
 400              	.LBE174:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 401              		.loc 1 365 0
 402 00f6 7F4B     		ldr	r3, .L111
 403 00f8 1968     		ldr	r1, [r3]
 404              	.LVL34:
 405              	.LBB176:
 406              	.LBB177:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 32


 407              		.loc 2 988 0
 408 00fa 4FF40033 		mov	r3, #131072
 409              		.syntax unified
 410              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 411 00fe 93FAA3F3 		rbit r3, r3
 412              	@ 0 "" 2
 413              	.LVL35:
 414              		.thumb
 415              		.syntax unified
 416              	.LBE177:
 417              	.LBE176:
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 418              		.loc 1 365 0
 419 0102 B3FA83F3 		clz	r3, r3
 420 0106 03F01F03 		and	r3, r3, #31
 421 010a 0122     		movs	r2, #1
 422 010c 02FA03F3 		lsl	r3, r2, r3
 423 0110 1942     		tst	r1, r3
 424 0112 E6D0     		beq	.L31
 425 0114 1CE0     		b	.L18
 426              	.LVL36:
 427              	.L27:
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 428              		.loc 1 376 0
 429 0116 FFF7FEFF 		bl	HAL_GetTick
 430              	.LVL37:
 431 011a 0546     		mov	r5, r0
 432              	.LVL38:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 433              		.loc 1 379 0
 434 011c 05E0     		b	.L32
 435              	.LVL39:
 436              	.L35:
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 437              		.loc 1 381 0
 438 011e FFF7FEFF 		bl	HAL_GetTick
 439              	.LVL40:
 440 0122 401B     		subs	r0, r0, r5
 441 0124 6428     		cmp	r0, #100
 442 0126 00F26E82 		bhi	.L93
 443              	.L32:
 444              	.LVL41:
 445              	.LBB178:
 446              	.LBB179:
 447              		.loc 2 988 0
 448 012a 4FF40033 		mov	r3, #131072
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 33


 449              		.syntax unified
 450              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 451 012e 93FAA3F3 		rbit r3, r3
 452              	@ 0 "" 2
 453              	.LVL42:
 454              		.thumb
 455              		.syntax unified
 456              	.LBE179:
 457              	.LBE178:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 458              		.loc 1 379 0
 459 0132 704B     		ldr	r3, .L111
 460 0134 1968     		ldr	r1, [r3]
 461              	.LVL43:
 462              	.LBB180:
 463              	.LBB181:
 464              		.loc 2 988 0
 465 0136 4FF40033 		mov	r3, #131072
 466              		.syntax unified
 467              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 468 013a 93FAA3F3 		rbit r3, r3
 469              	@ 0 "" 2
 470              	.LVL44:
 471              		.thumb
 472              		.syntax unified
 473              	.LBE181:
 474              	.LBE180:
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 475              		.loc 1 379 0
 476 013e B3FA83F3 		clz	r3, r3
 477 0142 03F01F03 		and	r3, r3, #31
 478 0146 0122     		movs	r2, #1
 479 0148 02FA03F3 		lsl	r3, r2, r3
 480 014c 1942     		tst	r1, r3
 481 014e E6D1     		bne	.L35
 482              	.LVL45:
 483              	.L18:
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 484              		.loc 1 390 0
 485 0150 2368     		ldr	r3, [r4]
 486 0152 13F0020F 		tst	r3, #2
 487 0156 00F09080 		beq	.L36
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 34


 488              		.loc 1 397 0
 489 015a 664B     		ldr	r3, .L111
 490 015c 5B68     		ldr	r3, [r3, #4]
 491 015e 13F00C0F 		tst	r3, #12
 492 0162 0AD0     		beq	.L37
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 493              		.loc 1 398 0
 494 0164 634B     		ldr	r3, .L111
 495 0166 5B68     		ldr	r3, [r3, #4]
 496 0168 03F00C03 		and	r3, r3, #12
 497 016c 082B     		cmp	r3, #8
 498 016e 27D1     		bne	.L38
 499              		.loc 1 398 0 is_stmt 0 discriminator 1
 500 0170 604B     		ldr	r3, .L111
 501 0172 5B68     		ldr	r3, [r3, #4]
 502 0174 13F4803F 		tst	r3, #65536
 503 0178 22D1     		bne	.L38
 504              	.L37:
 505              	.LVL46:
 506              	.LBB182:
 507              	.LBB183:
 508              		.loc 2 988 0 is_stmt 1
 509 017a 0223     		movs	r3, #2
 510              		.syntax unified
 511              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 512 017c 93FAA3F3 		rbit r3, r3
 513              	@ 0 "" 2
 514              	.LVL47:
 515              		.thumb
 516              		.syntax unified
 517              	.LBE183:
 518              	.LBE182:
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 519              		.loc 1 401 0
 520 0180 5C4B     		ldr	r3, .L111
 521 0182 1968     		ldr	r1, [r3]
 522              	.LVL48:
 523              	.LBB184:
 524              	.LBB185:
 525              		.loc 2 988 0
 526 0184 0223     		movs	r3, #2
 527              		.syntax unified
 528              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 529 0186 93FAA3F3 		rbit r3, r3
 530              	@ 0 "" 2
 531              	.LVL49:
 532              		.thumb
 533              		.syntax unified
 534              	.LBE185:
 535              	.LBE184:
 536              		.loc 1 401 0
 537 018a B3FA83F3 		clz	r3, r3
 538 018e 03F01F03 		and	r3, r3, #31
 539 0192 0122     		movs	r2, #1
 540 0194 02FA03F3 		lsl	r3, r2, r3
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 35


 541 0198 1942     		tst	r1, r3
 542 019a 03D0     		beq	.L41
 543              		.loc 1 401 0 is_stmt 0 discriminator 13
 544 019c 2369     		ldr	r3, [r4, #16]
 545 019e 9342     		cmp	r3, r2
 546 01a0 40F03382 		bne	.L94
 547              	.L41:
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 548              		.loc 1 409 0 is_stmt 1
 549 01a4 5348     		ldr	r0, .L111
 550 01a6 0368     		ldr	r3, [r0]
 551 01a8 23F0F801 		bic	r1, r3, #248
 552 01ac 6369     		ldr	r3, [r4, #20]
 553              	.LVL50:
 554              	.LBB186:
 555              	.LBB187:
 556              		.loc 2 988 0
 557 01ae F822     		movs	r2, #248
 558              		.syntax unified
 559              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 560 01b0 92FAA2F2 		rbit r2, r2
 561              	@ 0 "" 2
 562              	.LVL51:
 563              		.thumb
 564              		.syntax unified
 565              	.LBE187:
 566              	.LBE186:
 567              		.loc 1 409 0
 568 01b4 B2FA82F2 		clz	r2, r2
 569 01b8 9340     		lsls	r3, r3, r2
 570 01ba 0B43     		orrs	r3, r3, r1
 571 01bc 0360     		str	r3, [r0]
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 572              		.loc 1 401 0
 573 01be 5CE0     		b	.L36
 574              	.L38:
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 575              		.loc 1 415 0
 576 01c0 2369     		ldr	r3, [r4, #16]
 577 01c2 9BB3     		cbz	r3, .L42
 578              	.LVL52:
 579              	.LBB188:
 580              	.LBB189:
 581              		.loc 2 988 0
 582 01c4 0122     		movs	r2, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 36


 583              		.syntax unified
 584              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 585 01c6 92FAA2F3 		rbit r3, r2
 586              	@ 0 "" 2
 587              	.LVL53:
 588              		.thumb
 589              		.syntax unified
 590              	.LBE189:
 591              	.LBE188:
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 592              		.loc 1 418 0
 593 01ca B3FA83F3 		clz	r3, r3
 594 01ce 03F18453 		add	r3, r3, #276824064
 595 01d2 03F58413 		add	r3, r3, #1081344
 596 01d6 9B00     		lsls	r3, r3, #2
 597 01d8 1A60     		str	r2, [r3]
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 598              		.loc 1 421 0
 599 01da FFF7FEFF 		bl	HAL_GetTick
 600              	.LVL54:
 601 01de 0546     		mov	r5, r0
 602              	.LVL55:
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 603              		.loc 1 424 0
 604 01e0 05E0     		b	.L43
 605              	.LVL56:
 606              	.L46:
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 607              		.loc 1 426 0
 608 01e2 FFF7FEFF 		bl	HAL_GetTick
 609              	.LVL57:
 610 01e6 401B     		subs	r0, r0, r5
 611 01e8 0228     		cmp	r0, #2
 612 01ea 00F21582 		bhi	.L95
 613              	.L43:
 614              	.LVL58:
 615              	.LBB190:
 616              	.LBB191:
 617              		.loc 2 988 0
 618 01ee 0223     		movs	r3, #2
 619              		.syntax unified
 620              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 621 01f0 93FAA3F3 		rbit r3, r3
 622              	@ 0 "" 2
 623              	.LVL59:
 624              		.thumb
 625              		.syntax unified
 626              	.LBE191:
 627              	.LBE190:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 37


 628              		.loc 1 424 0
 629 01f4 3F4B     		ldr	r3, .L111
 630 01f6 1968     		ldr	r1, [r3]
 631              	.LVL60:
 632              	.LBB192:
 633              	.LBB193:
 634              		.loc 2 988 0
 635 01f8 0223     		movs	r3, #2
 636              		.syntax unified
 637              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 638 01fa 93FAA3F3 		rbit r3, r3
 639              	@ 0 "" 2
 640              	.LVL61:
 641              		.thumb
 642              		.syntax unified
 643              	.LBE193:
 644              	.LBE192:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 645              		.loc 1 424 0
 646 01fe B3FA83F3 		clz	r3, r3
 647 0202 03F01F03 		and	r3, r3, #31
 648 0206 0122     		movs	r2, #1
 649 0208 02FA03F3 		lsl	r3, r2, r3
 650 020c 1942     		tst	r1, r3
 651 020e E8D0     		beq	.L46
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 652              		.loc 1 433 0
 653 0210 3848     		ldr	r0, .L111
 654 0212 0368     		ldr	r3, [r0]
 655 0214 23F0F801 		bic	r1, r3, #248
 656 0218 6369     		ldr	r3, [r4, #20]
 657              	.LVL62:
 658              	.LBB194:
 659              	.LBB195:
 660              		.loc 2 988 0
 661 021a F822     		movs	r2, #248
 662              		.syntax unified
 663              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 664 021c 92FAA2F2 		rbit r2, r2
 665              	@ 0 "" 2
 666              	.LVL63:
 667              		.thumb
 668              		.syntax unified
 669              	.LBE195:
 670              	.LBE194:
 671              		.loc 1 433 0
 672 0220 B2FA82F2 		clz	r2, r2
 673 0224 9340     		lsls	r3, r3, r2
 674 0226 0B43     		orrs	r3, r3, r1
 675 0228 0360     		str	r3, [r0]
 676 022a 26E0     		b	.L36
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 38


 677              	.LVL64:
 678              	.L42:
 679              	.LBB196:
 680              	.LBB197:
 681              		.loc 2 988 0
 682 022c 0123     		movs	r3, #1
 683              		.syntax unified
 684              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 685 022e 93FAA3F3 		rbit r3, r3
 686              	@ 0 "" 2
 687              	.LVL65:
 688              		.thumb
 689              		.syntax unified
 690              	.LBE197:
 691              	.LBE196:
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 692              		.loc 1 438 0
 693 0232 B3FA83F3 		clz	r3, r3
 694 0236 03F18453 		add	r3, r3, #276824064
 695 023a 03F58413 		add	r3, r3, #1081344
 696 023e 9B00     		lsls	r3, r3, #2
 697 0240 0022     		movs	r2, #0
 698 0242 1A60     		str	r2, [r3]
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 699              		.loc 1 441 0
 700 0244 FFF7FEFF 		bl	HAL_GetTick
 701              	.LVL66:
 702 0248 0546     		mov	r5, r0
 703              	.LVL67:
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 704              		.loc 1 444 0
 705 024a 05E0     		b	.L47
 706              	.LVL68:
 707              	.L50:
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 708              		.loc 1 446 0
 709 024c FFF7FEFF 		bl	HAL_GetTick
 710              	.LVL69:
 711 0250 401B     		subs	r0, r0, r5
 712 0252 0228     		cmp	r0, #2
 713 0254 00F2E281 		bhi	.L96
 714              	.L47:
 715              	.LVL70:
 716              	.LBB198:
 717              	.LBB199:
 718              		.loc 2 988 0
 719 0258 0223     		movs	r3, #2
 720              		.syntax unified
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 39


 721              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 722 025a 93FAA3F3 		rbit r3, r3
 723              	@ 0 "" 2
 724              	.LVL71:
 725              		.thumb
 726              		.syntax unified
 727              	.LBE199:
 728              	.LBE198:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 729              		.loc 1 444 0
 730 025e 254B     		ldr	r3, .L111
 731 0260 1968     		ldr	r1, [r3]
 732              	.LVL72:
 733              	.LBB200:
 734              	.LBB201:
 735              		.loc 2 988 0
 736 0262 0223     		movs	r3, #2
 737              		.syntax unified
 738              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 739 0264 93FAA3F3 		rbit r3, r3
 740              	@ 0 "" 2
 741              	.LVL73:
 742              		.thumb
 743              		.syntax unified
 744              	.LBE201:
 745              	.LBE200:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 746              		.loc 1 444 0
 747 0268 B3FA83F3 		clz	r3, r3
 748 026c 03F01F03 		and	r3, r3, #31
 749 0270 0122     		movs	r2, #1
 750 0272 02FA03F3 		lsl	r3, r2, r3
 751 0276 1942     		tst	r1, r3
 752 0278 E8D1     		bne	.L50
 753              	.LVL74:
 754              	.L36:
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 755              		.loc 1 455 0
 756 027a 2368     		ldr	r3, [r4]
 757 027c 13F0080F 		tst	r3, #8
 758 0280 56D0     		beq	.L51
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 759              		.loc 1 461 0
 760 0282 A369     		ldr	r3, [r4, #24]
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 40


 761 0284 3BB3     		cbz	r3, .L52
 762              	.LVL75:
 763              	.LBB202:
 764              	.LBB203:
 765              		.loc 2 988 0
 766 0286 0121     		movs	r1, #1
 767              		.syntax unified
 768              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 769 0288 91FAA1F2 		rbit r2, r1
 770              	@ 0 "" 2
 771              	.LVL76:
 772              		.thumb
 773              		.syntax unified
 774              	.LBE203:
 775              	.LBE202:
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 776              		.loc 1 464 0
 777 028c B2FA82F2 		clz	r2, r2
 778 0290 194B     		ldr	r3, .L111+4
 779 0292 1344     		add	r3, r3, r2
 780 0294 9B00     		lsls	r3, r3, #2
 781 0296 1960     		str	r1, [r3]
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 782              		.loc 1 467 0
 783 0298 FFF7FEFF 		bl	HAL_GetTick
 784              	.LVL77:
 785 029c 0546     		mov	r5, r0
 786              	.LVL78:
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 787              		.loc 1 470 0
 788 029e 05E0     		b	.L53
 789              	.LVL79:
 790              	.L54:
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 791              		.loc 1 472 0
 792 02a0 FFF7FEFF 		bl	HAL_GetTick
 793              	.LVL80:
 794 02a4 401B     		subs	r0, r0, r5
 795 02a6 0228     		cmp	r0, #2
 796 02a8 00F2BA81 		bhi	.L97
 797              	.L53:
 798              	.LVL81:
 799              	.LBB204:
 800              	.LBB205:
 801              		.loc 2 988 0
 802 02ac 0223     		movs	r3, #2
 803              		.syntax unified
 804              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 805 02ae 93FAA3F2 		rbit r2, r3
 806              	@ 0 "" 2
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 41


 807              	.LVL82:
 808              		.thumb
 809              		.syntax unified
 810              	.LBE205:
 811              	.LBE204:
 812              	.LBB206:
 813              	.LBB207:
 814              		.syntax unified
 815              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 816 02b2 93FAA3F2 		rbit r2, r3
 817              	@ 0 "" 2
 818              	.LVL83:
 819              		.thumb
 820              		.syntax unified
 821              	.LBE207:
 822              	.LBE206:
 823              	.LBB208:
 824              	.LBB209:
 825              		.syntax unified
 826              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 827 02b6 93FAA3F2 		rbit r2, r3
 828              	@ 0 "" 2
 829              	.LVL84:
 830              		.thumb
 831              		.syntax unified
 832              	.LBE209:
 833              	.LBE208:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 834              		.loc 1 470 0
 835 02ba 0E4A     		ldr	r2, .L111
 836 02bc 516A     		ldr	r1, [r2, #36]
 837              	.LVL85:
 838              	.LBB210:
 839              	.LBB211:
 840              		.loc 2 988 0
 841              		.syntax unified
 842              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 843 02be 93FAA3F3 		rbit r3, r3
 844              	@ 0 "" 2
 845              	.LVL86:
 846              		.thumb
 847              		.syntax unified
 848              	.LBE211:
 849              	.LBE210:
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 850              		.loc 1 470 0
 851 02c2 B3FA83F3 		clz	r3, r3
 852 02c6 03F01F03 		and	r3, r3, #31
 853 02ca 0122     		movs	r2, #1
 854 02cc 02FA03F3 		lsl	r3, r2, r3
 855 02d0 1942     		tst	r1, r3
 856 02d2 E5D0     		beq	.L54
 857 02d4 2CE0     		b	.L51
 858              	.LVL87:
 859              	.L52:
 860              	.LBB212:
 861              	.LBB213:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 42


 862              		.loc 2 988 0
 863 02d6 0122     		movs	r2, #1
 864              		.syntax unified
 865              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 866 02d8 92FAA2F2 		rbit r2, r2
 867              	@ 0 "" 2
 868              	.LVL88:
 869              		.thumb
 870              		.syntax unified
 871              	.LBE213:
 872              	.LBE212:
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 873              		.loc 1 481 0
 874 02dc B2FA82F2 		clz	r2, r2
 875 02e0 054B     		ldr	r3, .L111+4
 876 02e2 1344     		add	r3, r3, r2
 877 02e4 9B00     		lsls	r3, r3, #2
 878 02e6 0022     		movs	r2, #0
 879 02e8 1A60     		str	r2, [r3]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 880              		.loc 1 484 0
 881 02ea FFF7FEFF 		bl	HAL_GetTick
 882              	.LVL89:
 883 02ee 0546     		mov	r5, r0
 884              	.LVL90:
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 885              		.loc 1 487 0
 886 02f0 0AE0     		b	.L55
 887              	.L112:
 888 02f2 00BF     		.align	2
 889              	.L111:
 890 02f4 00100240 		.word	1073876992
 891 02f8 20819010 		.word	277905696
 892              	.LVL91:
 893              	.L56:
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 894              		.loc 1 489 0
 895 02fc FFF7FEFF 		bl	HAL_GetTick
 896              	.LVL92:
 897 0300 401B     		subs	r0, r0, r5
 898 0302 0228     		cmp	r0, #2
 899 0304 00F28E81 		bhi	.L98
 900              	.L55:
 901              	.LVL93:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 43


 902              	.LBB214:
 903              	.LBB215:
 904              		.loc 2 988 0
 905 0308 0223     		movs	r3, #2
 906              		.syntax unified
 907              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 908 030a 93FAA3F2 		rbit r2, r3
 909              	@ 0 "" 2
 910              	.LVL94:
 911              		.thumb
 912              		.syntax unified
 913              	.LBE215:
 914              	.LBE214:
 915              	.LBB216:
 916              	.LBB217:
 917              		.syntax unified
 918              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 919 030e 93FAA3F2 		rbit r2, r3
 920              	@ 0 "" 2
 921              	.LVL95:
 922              		.thumb
 923              		.syntax unified
 924              	.LBE217:
 925              	.LBE216:
 926              	.LBB218:
 927              	.LBB219:
 928              		.syntax unified
 929              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 930 0312 93FAA3F2 		rbit r2, r3
 931              	@ 0 "" 2
 932              	.LVL96:
 933              		.thumb
 934              		.syntax unified
 935              	.LBE219:
 936              	.LBE218:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 937              		.loc 1 487 0
 938 0316 BE4A     		ldr	r2, .L113
 939 0318 516A     		ldr	r1, [r2, #36]
 940              	.LVL97:
 941              	.LBB220:
 942              	.LBB221:
 943              		.loc 2 988 0
 944              		.syntax unified
 945              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 946 031a 93FAA3F3 		rbit r3, r3
 947              	@ 0 "" 2
 948              	.LVL98:
 949              		.thumb
 950              		.syntax unified
 951              	.LBE221:
 952              	.LBE220:
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 953              		.loc 1 487 0
 954 031e B3FA83F3 		clz	r3, r3
 955 0322 03F01F03 		and	r3, r3, #31
 956 0326 0122     		movs	r2, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 44


 957 0328 02FA03F3 		lsl	r3, r2, r3
 958 032c 1942     		tst	r1, r3
 959 032e E5D1     		bne	.L56
 960              	.LVL99:
 961              	.L51:
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 962              		.loc 1 497 0
 963 0330 2368     		ldr	r3, [r4]
 964 0332 13F0040F 		tst	r3, #4
 965 0336 00F0BA80 		beq	.L57
 966              	.LVL100:
 967              	.LBB222:
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 968              		.loc 1 506 0
 969 033a B54B     		ldr	r3, .L113
 970 033c DB69     		ldr	r3, [r3, #28]
 971 033e 13F0805F 		tst	r3, #268435456
 972 0342 0BD1     		bne	.L99
 973              	.LBB223:
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 974              		.loc 1 508 0
 975 0344 B24B     		ldr	r3, .L113
 976 0346 DA69     		ldr	r2, [r3, #28]
 977 0348 42F08052 		orr	r2, r2, #268435456
 978 034c DA61     		str	r2, [r3, #28]
 979 034e DB69     		ldr	r3, [r3, #28]
 980 0350 03F08053 		and	r3, r3, #268435456
 981 0354 0193     		str	r3, [sp, #4]
 982 0356 019B     		ldr	r3, [sp, #4]
 983              	.LVL101:
 984              	.LBE223:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 985              		.loc 1 509 0
 986 0358 0125     		movs	r5, #1
 987 035a 00E0     		b	.L58
 988              	.LVL102:
 989              	.L99:
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 990              		.loc 1 499 0
 991 035c 0025     		movs	r5, #0
 992              	.LVL103:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 45


 993              	.L58:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 994              		.loc 1 512 0
 995 035e AD4B     		ldr	r3, .L113+4
 996 0360 1B68     		ldr	r3, [r3]
 997 0362 13F4807F 		tst	r3, #256
 998 0366 13D1     		bne	.L59
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 999              		.loc 1 515 0
 1000 0368 AA4A     		ldr	r2, .L113+4
 1001 036a 1368     		ldr	r3, [r2]
 1002 036c 43F48073 		orr	r3, r3, #256
 1003 0370 1360     		str	r3, [r2]
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1004              		.loc 1 518 0
 1005 0372 FFF7FEFF 		bl	HAL_GetTick
 1006              	.LVL104:
 1007 0376 0646     		mov	r6, r0
 1008              	.LVL105:
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 1009              		.loc 1 520 0
 1010 0378 05E0     		b	.L60
 1011              	.LVL106:
 1012              	.L61:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 1013              		.loc 1 522 0
 1014 037a FFF7FEFF 		bl	HAL_GetTick
 1015              	.LVL107:
 1016 037e 801B     		subs	r0, r0, r6
 1017 0380 6428     		cmp	r0, #100
 1018 0382 00F25181 		bhi	.L100
 1019              	.L60:
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1020              		.loc 1 520 0
 1021 0386 A34B     		ldr	r3, .L113+4
 1022 0388 1B68     		ldr	r3, [r3]
 1023 038a 13F4807F 		tst	r3, #256
 1024 038e F4D0     		beq	.L61
 1025              	.LVL108:
 1026              	.L59:
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 1027              		.loc 1 530 0
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 46


 1028 0390 E368     		ldr	r3, [r4, #12]
 1029 0392 012B     		cmp	r3, #1
 1030 0394 05D1     		bne	.L62
 1031              		.loc 1 530 0 is_stmt 0 discriminator 1
 1032 0396 9E4A     		ldr	r2, .L113
 1033 0398 136A     		ldr	r3, [r2, #32]
 1034 039a 43F00103 		orr	r3, r3, #1
 1035 039e 1362     		str	r3, [r2, #32]
 1036 03a0 22E0     		b	.L63
 1037              	.L62:
 1038              		.loc 1 530 0 discriminator 2
 1039 03a2 63B9     		cbnz	r3, .L64
 1040              		.loc 1 530 0 discriminator 3
 1041 03a4 03F18043 		add	r3, r3, #1073741824
 1042 03a8 03F50433 		add	r3, r3, #135168
 1043 03ac 1A6A     		ldr	r2, [r3, #32]
 1044 03ae 22F00102 		bic	r2, r2, #1
 1045 03b2 1A62     		str	r2, [r3, #32]
 1046 03b4 1A6A     		ldr	r2, [r3, #32]
 1047 03b6 22F00402 		bic	r2, r2, #4
 1048 03ba 1A62     		str	r2, [r3, #32]
 1049 03bc 14E0     		b	.L63
 1050              	.L64:
 1051              		.loc 1 530 0 discriminator 4
 1052 03be 052B     		cmp	r3, #5
 1053 03c0 09D1     		bne	.L65
 1054              		.loc 1 530 0 discriminator 5
 1055 03c2 934B     		ldr	r3, .L113
 1056 03c4 1A6A     		ldr	r2, [r3, #32]
 1057 03c6 42F00402 		orr	r2, r2, #4
 1058 03ca 1A62     		str	r2, [r3, #32]
 1059 03cc 1A6A     		ldr	r2, [r3, #32]
 1060 03ce 42F00102 		orr	r2, r2, #1
 1061 03d2 1A62     		str	r2, [r3, #32]
 1062 03d4 08E0     		b	.L63
 1063              	.L65:
 1064              		.loc 1 530 0 discriminator 6
 1065 03d6 8E4B     		ldr	r3, .L113
 1066 03d8 1A6A     		ldr	r2, [r3, #32]
 1067 03da 22F00102 		bic	r2, r2, #1
 1068 03de 1A62     		str	r2, [r3, #32]
 1069 03e0 1A6A     		ldr	r2, [r3, #32]
 1070 03e2 22F00402 		bic	r2, r2, #4
 1071 03e6 1A62     		str	r2, [r3, #32]
 1072              	.L63:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 1073              		.loc 1 532 0 is_stmt 1
 1074 03e8 E368     		ldr	r3, [r4, #12]
 1075 03ea 6BB3     		cbz	r3, .L66
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1076              		.loc 1 535 0
 1077 03ec FFF7FEFF 		bl	HAL_GetTick
 1078              	.LVL109:
 1079 03f0 0646     		mov	r6, r0
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 47


 1080              	.LVL110:
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 1081              		.loc 1 538 0
 1082 03f2 07E0     		b	.L67
 1083              	.LVL111:
 1084              	.L70:
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1085              		.loc 1 540 0
 1086 03f4 FFF7FEFF 		bl	HAL_GetTick
 1087              	.LVL112:
 1088 03f8 801B     		subs	r0, r0, r6
 1089 03fa 41F28833 		movw	r3, #5000
 1090 03fe 9842     		cmp	r0, r3
 1091 0400 00F21481 		bhi	.L101
 1092              	.L67:
 1093              	.LVL113:
 1094              	.LBB224:
 1095              	.LBB225:
 1096              		.loc 2 988 0
 1097 0404 0223     		movs	r3, #2
 1098              		.syntax unified
 1099              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1100 0406 93FAA3F2 		rbit r2, r3
 1101              	@ 0 "" 2
 1102              	.LVL114:
 1103              		.thumb
 1104              		.syntax unified
 1105              	.LBE225:
 1106              	.LBE224:
 1107              	.LBB226:
 1108              	.LBB227:
 1109              		.syntax unified
 1110              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1111 040a 93FAA3F3 		rbit r3, r3
 1112              	@ 0 "" 2
 1113              	.LVL115:
 1114              		.thumb
 1115              		.syntax unified
 1116              	.LBE227:
 1117              	.LBE226:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1118              		.loc 1 538 0
 1119 040e B3FA83F3 		clz	r3, r3
 1120 0412 5B09     		lsrs	r3, r3, #5
 1121 0414 43F00203 		orr	r3, r3, #2
 1122 0418 DBB2     		uxtb	r3, r3
 1123 041a 022B     		cmp	r3, #2
 1124 041c 02D1     		bne	.L68
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1125              		.loc 1 538 0 is_stmt 0 discriminator 4
 1126 041e 7C4B     		ldr	r3, .L113
 1127 0420 196A     		ldr	r1, [r3, #32]
 1128 0422 04E0     		b	.L69
 1129              	.L68:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 48


 1130              	.LVL116:
 1131              	.LBB228:
 1132              	.LBB229:
 1133              		.loc 2 988 0 is_stmt 1
 1134 0424 0223     		movs	r3, #2
 1135              		.syntax unified
 1136              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1137 0426 93FAA3F3 		rbit r3, r3
 1138              	@ 0 "" 2
 1139              	.LVL117:
 1140              		.thumb
 1141              		.syntax unified
 1142              	.LBE229:
 1143              	.LBE228:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1144              		.loc 1 538 0
 1145 042a 794B     		ldr	r3, .L113
 1146 042c 596A     		ldr	r1, [r3, #36]
 1147              	.L69:
 1148              	.LVL118:
 1149              	.LBB230:
 1150              	.LBB231:
 1151              		.loc 2 988 0 discriminator 11
 1152 042e 0223     		movs	r3, #2
 1153              		.syntax unified
 1154              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1155 0430 93FAA3F3 		rbit r3, r3
 1156              	@ 0 "" 2
 1157              	.LVL119:
 1158              		.thumb
 1159              		.syntax unified
 1160              	.LBE231:
 1161              	.LBE230:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1162              		.loc 1 538 0 discriminator 11
 1163 0434 B3FA83F3 		clz	r3, r3
 1164 0438 03F01F03 		and	r3, r3, #31
 1165 043c 0122     		movs	r2, #1
 1166 043e 02FA03F3 		lsl	r3, r2, r3
 1167 0442 1942     		tst	r1, r3
 1168 0444 D6D0     		beq	.L70
 1169 0446 2CE0     		b	.L71
 1170              	.LVL120:
 1171              	.L66:
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1172              		.loc 1 549 0
 1173 0448 FFF7FEFF 		bl	HAL_GetTick
 1174              	.LVL121:
 1175 044c 0646     		mov	r6, r0
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 49


 1176              	.LVL122:
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1177              		.loc 1 552 0
 1178 044e 07E0     		b	.L72
 1179              	.LVL123:
 1180              	.L75:
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1181              		.loc 1 554 0
 1182 0450 FFF7FEFF 		bl	HAL_GetTick
 1183              	.LVL124:
 1184 0454 801B     		subs	r0, r0, r6
 1185 0456 41F28833 		movw	r3, #5000
 1186 045a 9842     		cmp	r0, r3
 1187 045c 00F2E880 		bhi	.L102
 1188              	.L72:
 1189              	.LVL125:
 1190              	.LBB232:
 1191              	.LBB233:
 1192              		.loc 2 988 0
 1193 0460 0223     		movs	r3, #2
 1194              		.syntax unified
 1195              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1196 0462 93FAA3F2 		rbit r2, r3
 1197              	@ 0 "" 2
 1198              	.LVL126:
 1199              		.thumb
 1200              		.syntax unified
 1201              	.LBE233:
 1202              	.LBE232:
 1203              	.LBB234:
 1204              	.LBB235:
 1205              		.syntax unified
 1206              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1207 0466 93FAA3F3 		rbit r3, r3
 1208              	@ 0 "" 2
 1209              	.LVL127:
 1210              		.thumb
 1211              		.syntax unified
 1212              	.LBE235:
 1213              	.LBE234:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1214              		.loc 1 552 0
 1215 046a B3FA83F3 		clz	r3, r3
 1216 046e 5B09     		lsrs	r3, r3, #5
 1217 0470 43F00203 		orr	r3, r3, #2
 1218 0474 DBB2     		uxtb	r3, r3
 1219 0476 022B     		cmp	r3, #2
 1220 0478 02D1     		bne	.L73
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1221              		.loc 1 552 0 is_stmt 0 discriminator 4
 1222 047a 654B     		ldr	r3, .L113
 1223 047c 196A     		ldr	r1, [r3, #32]
 1224 047e 04E0     		b	.L74
 1225              	.L73:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 50


 1226              	.LVL128:
 1227              	.LBB236:
 1228              	.LBB237:
 1229              		.loc 2 988 0 is_stmt 1
 1230 0480 0223     		movs	r3, #2
 1231              		.syntax unified
 1232              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1233 0482 93FAA3F3 		rbit r3, r3
 1234              	@ 0 "" 2
 1235              	.LVL129:
 1236              		.thumb
 1237              		.syntax unified
 1238              	.LBE237:
 1239              	.LBE236:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1240              		.loc 1 552 0
 1241 0486 624B     		ldr	r3, .L113
 1242 0488 596A     		ldr	r1, [r3, #36]
 1243              	.L74:
 1244              	.LVL130:
 1245              	.LBB238:
 1246              	.LBB239:
 1247              		.loc 2 988 0 discriminator 11
 1248 048a 0223     		movs	r3, #2
 1249              		.syntax unified
 1250              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1251 048c 93FAA3F3 		rbit r3, r3
 1252              	@ 0 "" 2
 1253              	.LVL131:
 1254              		.thumb
 1255              		.syntax unified
 1256              	.LBE239:
 1257              	.LBE238:
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1258              		.loc 1 552 0 discriminator 11
 1259 0490 B3FA83F3 		clz	r3, r3
 1260 0494 03F01F03 		and	r3, r3, #31
 1261 0498 0122     		movs	r2, #1
 1262 049a 02FA03F3 		lsl	r3, r2, r3
 1263 049e 1942     		tst	r1, r3
 1264 04a0 D6D1     		bne	.L75
 1265              	.L71:
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1266              		.loc 1 562 0
 1267 04a2 25B1     		cbz	r5, .L57
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1268              		.loc 1 564 0
 1269 04a4 5A4A     		ldr	r2, .L113
 1270 04a6 D369     		ldr	r3, [r2, #28]
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 51


 1271 04a8 23F08053 		bic	r3, r3, #268435456
 1272 04ac D361     		str	r3, [r2, #28]
 1273              	.LVL132:
 1274              	.L57:
 1275              	.LBE222:
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1276              		.loc 1 571 0
 1277 04ae E369     		ldr	r3, [r4, #28]
 1278 04b0 002B     		cmp	r3, #0
 1279 04b2 00F0BF80 		beq	.L103
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1280              		.loc 1 574 0
 1281 04b6 564A     		ldr	r2, .L113
 1282 04b8 5268     		ldr	r2, [r2, #4]
 1283 04ba 02F00C02 		and	r2, r2, #12
 1284 04be 082A     		cmp	r2, #8
 1285 04c0 00F08B80 		beq	.L76
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1286              		.loc 1 576 0
 1287 04c4 022B     		cmp	r3, #2
 1288 04c6 5DD1     		bne	.L77
 1289              	.LVL133:
 1290              	.LBB240:
 1291              	.LBB241:
 1292              		.loc 2 988 0
 1293 04c8 4FF08073 		mov	r3, #16777216
 1294              		.syntax unified
 1295              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1296 04cc 93FAA3F3 		rbit r3, r3
 1297              	@ 0 "" 2
 1298              	.LVL134:
 1299              		.thumb
 1300              		.syntax unified
 1301              	.LBE241:
 1302              	.LBE240:
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1303              		.loc 1 586 0
 1304 04d0 B3FA83F3 		clz	r3, r3
 1305 04d4 03F18453 		add	r3, r3, #276824064
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 52


 1306 04d8 03F58413 		add	r3, r3, #1081344
 1307 04dc 9B00     		lsls	r3, r3, #2
 1308 04de 0022     		movs	r2, #0
 1309 04e0 1A60     		str	r2, [r3]
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1310              		.loc 1 589 0
 1311 04e2 FFF7FEFF 		bl	HAL_GetTick
 1312              	.LVL135:
 1313 04e6 0546     		mov	r5, r0
 1314              	.LVL136:
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1315              		.loc 1 592 0
 1316 04e8 05E0     		b	.L78
 1317              	.LVL137:
 1318              	.L81:
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1319              		.loc 1 594 0
 1320 04ea FFF7FEFF 		bl	HAL_GetTick
 1321              	.LVL138:
 1322 04ee 401B     		subs	r0, r0, r5
 1323 04f0 0228     		cmp	r0, #2
 1324 04f2 00F2A180 		bhi	.L104
 1325              	.L78:
 1326              	.LVL139:
 1327              	.LBB242:
 1328              	.LBB243:
 1329              		.loc 2 988 0
 1330 04f6 4FF00073 		mov	r3, #33554432
 1331              		.syntax unified
 1332              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1333 04fa 93FAA3F3 		rbit r3, r3
 1334              	@ 0 "" 2
 1335              	.LVL140:
 1336              		.thumb
 1337              		.syntax unified
 1338              	.LBE243:
 1339              	.LBE242:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1340              		.loc 1 592 0
 1341 04fe 444B     		ldr	r3, .L113
 1342 0500 1968     		ldr	r1, [r3]
 1343              	.LVL141:
 1344              	.LBB244:
 1345              	.LBB245:
 1346              		.loc 2 988 0
 1347 0502 4FF00073 		mov	r3, #33554432
 1348              		.syntax unified
 1349              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1350 0506 93FAA3F3 		rbit r3, r3
 1351              	@ 0 "" 2
 1352              	.LVL142:
 1353              		.thumb
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 53


 1354              		.syntax unified
 1355              	.LBE245:
 1356              	.LBE244:
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1357              		.loc 1 592 0
 1358 050a B3FA83F3 		clz	r3, r3
 1359 050e 03F01F03 		and	r3, r3, #31
 1360 0512 0122     		movs	r2, #1
 1361 0514 02FA03F3 		lsl	r3, r2, r3
 1362 0518 1942     		tst	r1, r3
 1363 051a E6D1     		bne	.L81
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1364              		.loc 1 607 0
 1365 051c 3C48     		ldr	r0, .L113
 1366 051e 4368     		ldr	r3, [r0, #4]
 1367 0520 23F47411 		bic	r1, r3, #3997696
 1368 0524 636A     		ldr	r3, [r4, #36]
 1369 0526 226A     		ldr	r2, [r4, #32]
 1370 0528 1343     		orrs	r3, r3, r2
 1371 052a 0B43     		orrs	r3, r3, r1
 1372 052c 4360     		str	r3, [r0, #4]
 1373              	.LVL143:
 1374              	.LBB246:
 1375              	.LBB247:
 1376              		.loc 2 988 0
 1377 052e 4FF08073 		mov	r3, #16777216
 1378              		.syntax unified
 1379              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1380 0532 93FAA3F3 		rbit r3, r3
 1381              	@ 0 "" 2
 1382              	.LVL144:
 1383              		.thumb
 1384              		.syntax unified
 1385              	.LBE247:
 1386              	.LBE246:
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1387              		.loc 1 611 0
 1388 0536 B3FA83F3 		clz	r3, r3
 1389 053a 03F18453 		add	r3, r3, #276824064
 1390 053e 03F58413 		add	r3, r3, #1081344
 1391 0542 9B00     		lsls	r3, r3, #2
 1392 0544 0122     		movs	r2, #1
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 54


 1393 0546 1A60     		str	r2, [r3]
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1394              		.loc 1 614 0
 1395 0548 FFF7FEFF 		bl	HAL_GetTick
 1396              	.LVL145:
 1397 054c 0446     		mov	r4, r0
 1398              	.LVL146:
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1399              		.loc 1 617 0
 1400 054e 04E0     		b	.L82
 1401              	.LVL147:
 1402              	.L85:
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1403              		.loc 1 619 0
 1404 0550 FFF7FEFF 		bl	HAL_GetTick
 1405              	.LVL148:
 1406 0554 001B     		subs	r0, r0, r4
 1407 0556 0228     		cmp	r0, #2
 1408 0558 70D8     		bhi	.L105
 1409              	.L82:
 1410              	.LVL149:
 1411              	.LBB248:
 1412              	.LBB249:
 1413              		.loc 2 988 0
 1414 055a 4FF00073 		mov	r3, #33554432
 1415              		.syntax unified
 1416              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1417 055e 93FAA3F3 		rbit r3, r3
 1418              	@ 0 "" 2
 1419              	.LVL150:
 1420              		.thumb
 1421              		.syntax unified
 1422              	.LBE249:
 1423              	.LBE248:
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1424              		.loc 1 617 0
 1425 0562 2B4B     		ldr	r3, .L113
 1426 0564 1968     		ldr	r1, [r3]
 1427              	.LVL151:
 1428              	.LBB250:
 1429              	.LBB251:
 1430              		.loc 2 988 0
 1431 0566 4FF00073 		mov	r3, #33554432
 1432              		.syntax unified
 1433              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1434 056a 93FAA3F3 		rbit r3, r3
 1435              	@ 0 "" 2
 1436              	.LVL152:
 1437              		.thumb
 1438              		.syntax unified
 1439              	.LBE251:
 1440              	.LBE250:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 55


 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1441              		.loc 1 617 0
 1442 056e B3FA83F3 		clz	r3, r3
 1443 0572 03F01F03 		and	r3, r3, #31
 1444 0576 0122     		movs	r2, #1
 1445 0578 02FA03F3 		lsl	r3, r2, r3
 1446 057c 1942     		tst	r1, r3
 1447 057e E7D0     		beq	.L85
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pll_config = RCC->CFGR;
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pll_config2 = RCC->CFGR2;
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL)    ||      
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config2, RCC_CFGR2_PREDIV)  != RCC_OscInitStruct->PLL.PREDIV))     
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((READ_BIT(pll_config, RCC_CFGR_PLLSRC)   != RCC_OscInitStruct->PLL.PLLSource) ||      
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL))
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_ERROR;
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 56


 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1448              		.loc 1 670 0
 1449 0580 0020     		movs	r0, #0
 1450 0582 64E0     		b	.L17
 1451              	.LVL153:
 1452              	.L77:
 1453              	.LBB252:
 1454              	.LBB253:
 1455              		.loc 2 988 0
 1456 0584 4FF08073 		mov	r3, #16777216
 1457              		.syntax unified
 1458              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1459 0588 93FAA3F3 		rbit r3, r3
 1460              	@ 0 "" 2
 1461              	.LVL154:
 1462              		.thumb
 1463              		.syntax unified
 1464              	.LBE253:
 1465              	.LBE252:
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 1466              		.loc 1 628 0
 1467 058c B3FA83F3 		clz	r3, r3
 1468 0590 03F18453 		add	r3, r3, #276824064
 1469 0594 03F58413 		add	r3, r3, #1081344
 1470 0598 9B00     		lsls	r3, r3, #2
 1471 059a 0022     		movs	r2, #0
 1472 059c 1A60     		str	r2, [r3]
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 1473              		.loc 1 631 0
 1474 059e FFF7FEFF 		bl	HAL_GetTick
 1475              	.LVL155:
 1476 05a2 0446     		mov	r4, r0
 1477              	.LVL156:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1478              		.loc 1 634 0
 1479 05a4 04E0     		b	.L86
 1480              	.LVL157:
 1481              	.L89:
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 1482              		.loc 1 636 0
 1483 05a6 FFF7FEFF 		bl	HAL_GetTick
 1484              	.LVL158:
 1485 05aa 001B     		subs	r0, r0, r4
 1486 05ac 0228     		cmp	r0, #2
 1487 05ae 47D8     		bhi	.L106
 1488              	.L86:
 1489              	.LVL159:
 1490              	.LBB254:
 1491              	.LBB255:
 1492              		.loc 2 988 0
 1493 05b0 4FF00073 		mov	r3, #33554432
 1494              		.syntax unified
 1495              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1496 05b4 93FAA3F3 		rbit r3, r3
 1497              	@ 0 "" 2
 1498              	.LVL160:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 57


 1499              		.thumb
 1500              		.syntax unified
 1501              	.LBE255:
 1502              	.LBE254:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1503              		.loc 1 634 0
 1504 05b8 154B     		ldr	r3, .L113
 1505 05ba 1968     		ldr	r1, [r3]
 1506              	.LVL161:
 1507              	.LBB256:
 1508              	.LBB257:
 1509              		.loc 2 988 0
 1510 05bc 4FF00073 		mov	r3, #33554432
 1511              		.syntax unified
 1512              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1513 05c0 93FAA3F3 		rbit r3, r3
 1514              	@ 0 "" 2
 1515              	.LVL162:
 1516              		.thumb
 1517              		.syntax unified
 1518              	.LBE257:
 1519              	.LBE256:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 1520              		.loc 1 634 0
 1521 05c4 B3FA83F3 		clz	r3, r3
 1522 05c8 03F01F03 		and	r3, r3, #31
 1523 05cc 0122     		movs	r2, #1
 1524 05ce 02FA03F3 		lsl	r3, r2, r3
 1525 05d2 1942     		tst	r1, r3
 1526 05d4 E7D1     		bne	.L89
 1527              		.loc 1 670 0
 1528 05d6 0020     		movs	r0, #0
 1529 05d8 39E0     		b	.L17
 1530              	.LVL163:
 1531              	.L76:
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 1532              		.loc 1 646 0
 1533 05da 012B     		cmp	r3, #1
 1534 05dc 32D0     		beq	.L107
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 1535              		.loc 1 653 0
 1536 05de 0C4B     		ldr	r3, .L113
 1537 05e0 5B68     		ldr	r3, [r3, #4]
 1538              	.LVL164:
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL))
 1539              		.loc 1 660 0
 1540 05e2 03F48031 		and	r1, r3, #65536
 1541 05e6 226A     		ldr	r2, [r4, #32]
 1542 05e8 9142     		cmp	r1, r2
 1543 05ea 2DD1     		bne	.L108
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 1544              		.loc 1 661 0 discriminator 1
 1545 05ec 03F47013 		and	r3, r3, #3932160
 1546              	.LVL165:
 1547 05f0 626A     		ldr	r2, [r4, #36]
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            (READ_BIT(pll_config, RCC_CFGR_PLLMUL)   != RCC_OscInitStruct->PLL.PLLMUL))
 1548              		.loc 1 660 0 discriminator 1
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 58


 1549 05f2 9342     		cmp	r3, r2
 1550 05f4 2AD0     		beq	.L109
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1551              		.loc 1 664 0
 1552 05f6 0120     		movs	r0, #1
 1553 05f8 29E0     		b	.L17
 1554              	.LVL166:
 1555              	.L90:
 1556              	.LCFI3:
 1557              		.cfi_def_cfa_offset 0
 1558              		.cfi_restore 4
 1559              		.cfi_restore 5
 1560              		.cfi_restore 6
 1561              		.cfi_restore 14
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1562              		.loc 1 327 0
 1563 05fa 0120     		movs	r0, #1
 1564              	.LVL167:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1565              		.loc 1 671 0
 1566 05fc 7047     		bx	lr
 1567              	.LVL168:
 1568              	.L91:
 1569              	.LCFI4:
 1570              		.cfi_def_cfa_offset 24
 1571              		.cfi_offset 4, -16
 1572              		.cfi_offset 5, -12
 1573              		.cfi_offset 6, -8
 1574              		.cfi_offset 14, -4
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1575              		.loc 1 345 0
 1576 05fe 0120     		movs	r0, #1
 1577              	.LVL169:
 1578 0600 25E0     		b	.L17
 1579              	.LVL170:
 1580              	.L92:
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1581              		.loc 1 369 0
 1582 0602 0320     		movs	r0, #3
 1583 0604 23E0     		b	.L17
 1584              	.L93:
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1585              		.loc 1 383 0
 1586 0606 0320     		movs	r0, #3
 1587 0608 21E0     		b	.L17
 1588              	.LVL171:
 1589              	.L94:
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1590              		.loc 1 403 0
 1591 060a 0120     		movs	r0, #1
 1592 060c 1FE0     		b	.L17
 1593              	.L114:
 1594 060e 00BF     		.align	2
 1595              	.L113:
 1596 0610 00100240 		.word	1073876992
 1597 0614 00700040 		.word	1073770496
 1598              	.LVL172:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 59


 1599              	.L95:
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1600              		.loc 1 428 0
 1601 0618 0320     		movs	r0, #3
 1602 061a 18E0     		b	.L17
 1603              	.L96:
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1604              		.loc 1 448 0
 1605 061c 0320     		movs	r0, #3
 1606 061e 16E0     		b	.L17
 1607              	.L97:
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1608              		.loc 1 474 0
 1609 0620 0320     		movs	r0, #3
 1610 0622 14E0     		b	.L17
 1611              	.L98:
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1612              		.loc 1 491 0
 1613 0624 0320     		movs	r0, #3
 1614 0626 12E0     		b	.L17
 1615              	.LVL173:
 1616              	.L100:
 1617              	.LBB258:
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1618              		.loc 1 524 0
 1619 0628 0320     		movs	r0, #3
 1620 062a 10E0     		b	.L17
 1621              	.L101:
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1622              		.loc 1 542 0
 1623 062c 0320     		movs	r0, #3
 1624 062e 0EE0     		b	.L17
 1625              	.L102:
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1626              		.loc 1 556 0
 1627 0630 0320     		movs	r0, #3
 1628 0632 0CE0     		b	.L17
 1629              	.LVL174:
 1630              	.L103:
 1631              	.LBE258:
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1632              		.loc 1 670 0
 1633 0634 0020     		movs	r0, #0
 1634 0636 0AE0     		b	.L17
 1635              	.LVL175:
 1636              	.L104:
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1637              		.loc 1 596 0
 1638 0638 0320     		movs	r0, #3
 1639 063a 08E0     		b	.L17
 1640              	.LVL176:
 1641              	.L105:
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1642              		.loc 1 621 0
 1643 063c 0320     		movs	r0, #3
 1644 063e 06E0     		b	.L17
 1645              	.L106:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 60


 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 1646              		.loc 1 638 0
 1647 0640 0320     		movs	r0, #3
 1648 0642 04E0     		b	.L17
 1649              	.LVL177:
 1650              	.L107:
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 1651              		.loc 1 648 0
 1652 0644 0120     		movs	r0, #1
 1653 0646 02E0     		b	.L17
 1654              	.LVL178:
 1655              	.L108:
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 1656              		.loc 1 664 0
 1657 0648 0120     		movs	r0, #1
 1658 064a 00E0     		b	.L17
 1659              	.LVL179:
 1660              	.L109:
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1661              		.loc 1 670 0
 1662 064c 0020     		movs	r0, #0
 1663              	.LVL180:
 1664              	.L17:
 1665              		.loc 1 671 0
 1666 064e 02B0     		add	sp, sp, #8
 1667              	.LCFI5:
 1668              		.cfi_def_cfa_offset 16
 1669              		@ sp needed
 1670 0650 70BD     		pop	{r4, r5, r6, pc}
 1671              		.cfi_endproc
 1672              	.LFE124:
 1674 0652 00BF     		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1675              		.align	2
 1676              		.global	HAL_RCC_MCOConfig
 1677              		.thumb
 1678              		.thumb_func
 1680              	HAL_RCC_MCOConfig:
 1681              	.LFB126:
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 61


 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check Null pointer */
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(RCC_ClkInitStruct == NULL)
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     return HAL_ERROR;
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > __HAL_FLASH_GET_LATENCY())
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 62


 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_TIMEOUT;
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < __HAL_FLASH_GET_LATENCY())
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_FLASH_GET_LATENCY() != FLatency)
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 63


 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (uwTickPrio);
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 64


 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1682              		.loc 1 889 0
 1683              		.cfi_startproc
 1684              		@ args = 0, pretend = 0, frame = 24
 1685              		@ frame_needed = 0, uses_anonymous_args = 0
 1686              	.LVL181:
 1687 0000 70B5     		push	{r4, r5, r6, lr}
 1688              	.LCFI6:
 1689              		.cfi_def_cfa_offset 16
 1690              		.cfi_offset 4, -16
 1691              		.cfi_offset 5, -12
 1692              		.cfi_offset 6, -8
 1693              		.cfi_offset 14, -4
 1694 0002 86B0     		sub	sp, sp, #24
 1695              	.LCFI7:
 1696              		.cfi_def_cfa_offset 40
 1697 0004 0E46     		mov	r6, r1
 1698 0006 1546     		mov	r5, r2
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio;
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1699              		.loc 1 898 0
 1700 0008 0223     		movs	r3, #2
 1701 000a 0293     		str	r3, [sp, #8]
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 65


 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1702              		.loc 1 899 0
 1703 000c 0323     		movs	r3, #3
 1704 000e 0493     		str	r3, [sp, #16]
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1705              		.loc 1 900 0
 1706 0010 0023     		movs	r3, #0
 1707 0012 0393     		str	r3, [sp, #12]
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1708              		.loc 1 901 0
 1709 0014 4FF48072 		mov	r2, #256
 1710              	.LVL182:
 1711 0018 0192     		str	r2, [sp, #4]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 1712              		.loc 1 902 0
 1713 001a 0593     		str	r3, [sp, #20]
 1714              	.LBB259:
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1715              		.loc 1 905 0
 1716 001c 0B4C     		ldr	r4, .L117
 1717 001e 6369     		ldr	r3, [r4, #20]
 1718 0020 43F40033 		orr	r3, r3, #131072
 1719 0024 6361     		str	r3, [r4, #20]
 1720 0026 6369     		ldr	r3, [r4, #20]
 1721 0028 03F40033 		and	r3, r3, #131072
 1722 002c 0093     		str	r3, [sp]
 1723 002e 009B     		ldr	r3, [sp]
 1724              	.LBE259:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1725              		.loc 1 907 0
 1726 0030 01A9     		add	r1, sp, #4
 1727              	.LVL183:
 1728 0032 4FF09040 		mov	r0, #1207959552
 1729              	.LVL184:
 1730 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1731              	.LVL185:
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1732              		.loc 1 910 0
 1733 003a 6368     		ldr	r3, [r4, #4]
 1734 003c 23F0EE43 		bic	r3, r3, #1996488704
 1735 0040 3543     		orrs	r5, r5, r6
 1736              	.LVL186:
 1737 0042 1D43     		orrs	r5, r5, r3
 1738 0044 6560     		str	r5, [r4, #4]
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1739              		.loc 1 911 0
 1740 0046 06B0     		add	sp, sp, #24
 1741              	.LCFI8:
 1742              		.cfi_def_cfa_offset 16
 1743              		@ sp needed
 1744 0048 70BD     		pop	{r4, r5, r6, pc}
 1745              	.LVL187:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 66


 1746              	.L118:
 1747 004a 00BF     		.align	2
 1748              	.L117:
 1749 004c 00100240 		.word	1073876992
 1750              		.cfi_endproc
 1751              	.LFE126:
 1753              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1754              		.align	2
 1755              		.global	HAL_RCC_EnableCSS
 1756              		.thumb
 1757              		.thumb_func
 1759              	HAL_RCC_EnableCSS:
 1760              	.LFB127:
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1761              		.loc 1 923 0
 1762              		.cfi_startproc
 1763              		@ args = 0, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 1765              		@ link register save eliminated.
 1766              	.LVL188:
 1767              	.LBB260:
 1768              	.LBB261:
 1769              		.loc 2 988 0
 1770 0000 4FF40023 		mov	r3, #524288
 1771              		.syntax unified
 1772              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1773 0004 93FAA3F3 		rbit r3, r3
 1774              	@ 0 "" 2
 1775              	.LVL189:
 1776              		.thumb
 1777              		.syntax unified
 1778              	.LBE261:
 1779              	.LBE260:
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1780              		.loc 1 924 0
 1781 0008 B3FA83F3 		clz	r3, r3
 1782 000c 03F18453 		add	r3, r3, #276824064
 1783 0010 03F58413 		add	r3, r3, #1081344
 1784 0014 9B00     		lsls	r3, r3, #2
 1785 0016 0122     		movs	r2, #1
 1786 0018 1A60     		str	r2, [r3]
 1787 001a 7047     		bx	lr
 1788              		.cfi_endproc
 1789              	.LFE127:
 1791              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1792              		.align	2
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 67


 1793              		.global	HAL_RCC_DisableCSS
 1794              		.thumb
 1795              		.thumb_func
 1797              	HAL_RCC_DisableCSS:
 1798              	.LFB128:
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1799              		.loc 1 932 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              		@ link register save eliminated.
 1804              	.LVL190:
 1805              	.LBB262:
 1806              	.LBB263:
 1807              		.loc 2 988 0
 1808 0000 4FF40023 		mov	r3, #524288
 1809              		.syntax unified
 1810              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1811 0004 93FAA3F3 		rbit r3, r3
 1812              	@ 0 "" 2
 1813              	.LVL191:
 1814              		.thumb
 1815              		.syntax unified
 1816              	.LBE263:
 1817              	.LBE262:
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1818              		.loc 1 933 0
 1819 0008 B3FA83F3 		clz	r3, r3
 1820 000c 03F18453 		add	r3, r3, #276824064
 1821 0010 03F58413 		add	r3, r3, #1081344
 1822 0014 9B00     		lsls	r3, r3, #2
 1823 0016 0022     		movs	r2, #0
 1824 0018 1A60     		str	r2, [r3]
 1825 001a 7047     		bx	lr
 1826              		.cfi_endproc
 1827              	.LFE128:
 1829              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1830              		.align	2
 1831              		.global	HAL_RCC_GetSysClockFreq
 1832              		.thumb
 1833              		.thumb_func
 1835              	HAL_RCC_GetSysClockFreq:
 1836              	.LFB129:
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 68


 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1837              		.loc 1 966 0
 1838              		.cfi_startproc
 1839              		@ args = 0, pretend = 0, frame = 0
 1840              		@ frame_needed = 0, uses_anonymous_args = 0
 1841              		@ link register save eliminated.
 1842              	.LVL192:
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1843              		.loc 1 970 0
 1844 0000 164B     		ldr	r3, .L127
 1845 0002 5B68     		ldr	r3, [r3, #4]
 1846              	.LVL193:
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1847              		.loc 1 973 0
 1848 0004 03F00C02 		and	r2, r3, #12
 1849 0008 082A     		cmp	r2, #8
 1850 000a 25D1     		bne	.L126
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 1851              		.loc 1 982 0
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 69


 1852 000c 03F47011 		and	r1, r3, #3932160
 1853              	.LVL194:
 1854              	.LBB264:
 1855              	.LBB265:
 1856              		.loc 2 988 0
 1857 0010 4FF47012 		mov	r2, #3932160
 1858              		.syntax unified
 1859              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1860 0014 92FAA2F2 		rbit r2, r2
 1861              	@ 0 "" 2
 1862              	.LVL195:
 1863              		.thumb
 1864              		.syntax unified
 1865              	.LBE265:
 1866              	.LBE264:
 1867              		.loc 1 982 0
 1868 0018 B2FA82F2 		clz	r2, r2
 1869 001c 21FA02F2 		lsr	r2, r1, r2
 1870 0020 0F49     		ldr	r1, .L127+4
 1871 0022 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1872              	.LVL196:
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1873              		.loc 1 983 0
 1874 0024 0D49     		ldr	r1, .L127
 1875 0026 C96A     		ldr	r1, [r1, #44]
 1876 0028 01F00F00 		and	r0, r1, #15
 1877              	.LVL197:
 1878              	.LBB266:
 1879              	.LBB267:
 1880              		.loc 2 988 0
 1881 002c 0F21     		movs	r1, #15
 1882              		.syntax unified
 1883              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1884 002e 91FAA1F1 		rbit r1, r1
 1885              	@ 0 "" 2
 1886              	.LVL198:
 1887              		.thumb
 1888              		.syntax unified
 1889              	.LBE267:
 1890              	.LBE266:
 1891              		.loc 1 983 0
 1892 0032 B1FA81F1 		clz	r1, r1
 1893 0036 20FA01F1 		lsr	r1, r0, r1
 1894 003a 0A48     		ldr	r0, .L127+8
 1895 003c 405C     		ldrb	r0, [r0, r1]	@ zero_extendqisi2
 1896              	.LVL199:
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 1897              		.loc 1 985 0
 1898 003e 13F4803F 		tst	r3, #65536
 1899 0042 05D0     		beq	.L124
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
 1900              		.loc 1 988 0
 1901 0044 084B     		ldr	r3, .L127+12
 1902              	.LVL200:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 70


 1903 0046 B3FBF0F0 		udiv	r0, r3, r0
 1904              	.LVL201:
 1905 004a 00FB02F0 		mul	r0, r0, r2
 1906              	.LVL202:
 1907 004e 7047     		bx	lr
 1908              	.LVL203:
 1909              	.L124:
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) (HSI_VALUE >> 1U) * ((uint64_t) pllmul));
 1910              		.loc 1 993 0
 1911 0050 0648     		ldr	r0, .L127+16
 1912              	.LVL204:
 1913 0052 00FB02F0 		mul	r0, r0, r2
 1914              	.LVL205:
 1915 0056 7047     		bx	lr
 1916              	.LVL206:
 1917              	.L126:
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1918              		.loc 1 977 0
 1919 0058 0348     		ldr	r0, .L127+12
 1920              	.LVL207:
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSE_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (uint32_t)((uint64_t) HSI_VALUE / (uint64_t) (prediv)) * ((uint64_t) pllmul);
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1921              		.loc 1 1018 0
 1922 005a 7047     		bx	lr
 1923              	.L128:
 1924              		.align	2
 1925              	.L127:
 1926 005c 00100240 		.word	1073876992
 1927 0060 00000000 		.word	.LANCHOR0
 1928 0064 00000000 		.word	.LANCHOR1
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 71


 1929 0068 00127A00 		.word	8000000
 1930 006c 00093D00 		.word	4000000
 1931              		.cfi_endproc
 1932              	.LFE129:
 1934              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1935              		.align	2
 1936              		.global	HAL_RCC_ClockConfig
 1937              		.thumb
 1938              		.thumb_func
 1940              	HAL_RCC_ClockConfig:
 1941              	.LFB125:
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1942              		.loc 1 697 0
 1943              		.cfi_startproc
 1944              		@ args = 0, pretend = 0, frame = 0
 1945              		@ frame_needed = 0, uses_anonymous_args = 0
 1946              	.LVL208:
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1947              		.loc 1 701 0
 1948 0000 0028     		cmp	r0, #0
 1949 0002 00F0BB80 		beq	.L148
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 1950              		.loc 1 697 0
 1951 0006 70B5     		push	{r4, r5, r6, lr}
 1952              	.LCFI9:
 1953              		.cfi_def_cfa_offset 16
 1954              		.cfi_offset 4, -16
 1955              		.cfi_offset 5, -12
 1956              		.cfi_offset 6, -8
 1957              		.cfi_offset 14, -4
 1958 0008 0446     		mov	r4, r0
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1959              		.loc 1 715 0
 1960 000a 634B     		ldr	r3, .L156
 1961 000c 1B68     		ldr	r3, [r3]
 1962 000e 03F00703 		and	r3, r3, #7
 1963 0012 8B42     		cmp	r3, r1
 1964 0014 0BD2     		bcs	.L131
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 1965              		.loc 1 718 0
 1966 0016 604A     		ldr	r2, .L156
 1967 0018 1368     		ldr	r3, [r2]
 1968 001a 23F00703 		bic	r3, r3, #7
 1969 001e 0B43     		orrs	r3, r3, r1
 1970 0020 1360     		str	r3, [r2]
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1971              		.loc 1 722 0
 1972 0022 1368     		ldr	r3, [r2]
 1973 0024 03F00703 		and	r3, r3, #7
 1974 0028 9942     		cmp	r1, r3
 1975 002a 40F0A980 		bne	.L149
 1976              	.L131:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 1977              		.loc 1 729 0
 1978 002e 2368     		ldr	r3, [r4]
 1979 0030 13F0020F 		tst	r3, #2
 1980 0034 06D0     		beq	.L132
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 72


 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 1981              		.loc 1 732 0
 1982 0036 5948     		ldr	r0, .L156+4
 1983              	.LVL209:
 1984 0038 4368     		ldr	r3, [r0, #4]
 1985 003a 23F0F002 		bic	r2, r3, #240
 1986 003e A368     		ldr	r3, [r4, #8]
 1987 0040 1343     		orrs	r3, r3, r2
 1988 0042 4360     		str	r3, [r0, #4]
 1989              	.L132:
 1990 0044 0D46     		mov	r5, r1
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 1991              		.loc 1 736 0
 1992 0046 2368     		ldr	r3, [r4]
 1993 0048 13F0010F 		tst	r3, #1
 1994 004c 56D0     		beq	.L133
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 1995              		.loc 1 741 0
 1996 004e 6268     		ldr	r2, [r4, #4]
 1997 0050 012A     		cmp	r2, #1
 1998 0052 13D1     		bne	.L134
 1999              	.LVL210:
 2000              	.LBB268:
 2001              	.LBB269:
 2002              		.loc 2 988 0
 2003 0054 4FF40033 		mov	r3, #131072
 2004              		.syntax unified
 2005              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2006 0058 93FAA3F3 		rbit r3, r3
 2007              	@ 0 "" 2
 2008              	.LVL211:
 2009              		.thumb
 2010              		.syntax unified
 2011              	.LBE269:
 2012              	.LBE268:
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2013              		.loc 1 744 0
 2014 005c 4F4B     		ldr	r3, .L156+4
 2015 005e 1868     		ldr	r0, [r3]
 2016              	.LVL212:
 2017              	.LBB270:
 2018              	.LBB271:
 2019              		.loc 2 988 0
 2020 0060 4FF40033 		mov	r3, #131072
 2021              		.syntax unified
 2022              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2023 0064 93FAA3F3 		rbit r3, r3
 2024              	@ 0 "" 2
 2025              	.LVL213:
 2026              		.thumb
 2027              		.syntax unified
 2028              	.LBE271:
 2029              	.LBE270:
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2030              		.loc 1 744 0
 2031 0068 B3FA83F3 		clz	r3, r3
 2032 006c 03F01F03 		and	r3, r3, #31
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 73


 2033 0070 0121     		movs	r1, #1
 2034              	.LVL214:
 2035 0072 01FA03F3 		lsl	r3, r1, r3
 2036 0076 1842     		tst	r0, r3
 2037 0078 27D1     		bne	.L137
 2038 007a 83E0     		b	.L150
 2039              	.LVL215:
 2040              	.L134:
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2041              		.loc 1 750 0
 2042 007c 022A     		cmp	r2, #2
 2043 007e 13D1     		bne	.L138
 2044              	.LVL216:
 2045              	.LBB272:
 2046              	.LBB273:
 2047              		.loc 2 988 0
 2048 0080 4FF00073 		mov	r3, #33554432
 2049              		.syntax unified
 2050              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2051 0084 93FAA3F3 		rbit r3, r3
 2052              	@ 0 "" 2
 2053              	.LVL217:
 2054              		.thumb
 2055              		.syntax unified
 2056              	.LBE273:
 2057              	.LBE272:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2058              		.loc 1 753 0
 2059 0088 444B     		ldr	r3, .L156+4
 2060 008a 1868     		ldr	r0, [r3]
 2061              	.LVL218:
 2062              	.LBB274:
 2063              	.LBB275:
 2064              		.loc 2 988 0
 2065 008c 4FF00073 		mov	r3, #33554432
 2066              		.syntax unified
 2067              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2068 0090 93FAA3F3 		rbit r3, r3
 2069              	@ 0 "" 2
 2070              	.LVL219:
 2071              		.thumb
 2072              		.syntax unified
 2073              	.LBE275:
 2074              	.LBE274:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2075              		.loc 1 753 0
 2076 0094 B3FA83F3 		clz	r3, r3
 2077 0098 03F01F03 		and	r3, r3, #31
 2078 009c 0121     		movs	r1, #1
 2079              	.LVL220:
 2080 009e 01FA03F3 		lsl	r3, r1, r3
 2081 00a2 1842     		tst	r0, r3
 2082 00a4 11D1     		bne	.L137
 2083 00a6 6FE0     		b	.L151
 2084              	.LVL221:
 2085              	.L138:
 2086              	.LBB276:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 74


 2087              	.LBB277:
 2088              		.loc 2 988 0
 2089 00a8 0223     		movs	r3, #2
 2090              		.syntax unified
 2091              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2092 00aa 93FAA3F3 		rbit r3, r3
 2093              	@ 0 "" 2
 2094              	.LVL222:
 2095              		.thumb
 2096              		.syntax unified
 2097              	.LBE277:
 2098              	.LBE276:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2099              		.loc 1 762 0
 2100 00ae 3B4B     		ldr	r3, .L156+4
 2101 00b0 1868     		ldr	r0, [r3]
 2102              	.LVL223:
 2103              	.LBB278:
 2104              	.LBB279:
 2105              		.loc 2 988 0
 2106 00b2 0223     		movs	r3, #2
 2107              		.syntax unified
 2108              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2109 00b4 93FAA3F3 		rbit r3, r3
 2110              	@ 0 "" 2
 2111              	.LVL224:
 2112              		.thumb
 2113              		.syntax unified
 2114              	.LBE279:
 2115              	.LBE278:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2116              		.loc 1 762 0
 2117 00b8 B3FA83F3 		clz	r3, r3
 2118 00bc 03F01F03 		and	r3, r3, #31
 2119 00c0 0121     		movs	r1, #1
 2120              	.LVL225:
 2121 00c2 01FA03F3 		lsl	r3, r1, r3
 2122 00c6 1842     		tst	r0, r3
 2123 00c8 60D0     		beq	.L152
 2124              	.L137:
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2125              		.loc 1 768 0
 2126 00ca 3449     		ldr	r1, .L156+4
 2127 00cc 4B68     		ldr	r3, [r1, #4]
 2128 00ce 23F00303 		bic	r3, r3, #3
 2129 00d2 1343     		orrs	r3, r3, r2
 2130 00d4 4B60     		str	r3, [r1, #4]
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2131              		.loc 1 771 0
 2132 00d6 FFF7FEFF 		bl	HAL_GetTick
 2133              	.LVL226:
 2134 00da 0646     		mov	r6, r0
 2135              	.LVL227:
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2136              		.loc 1 773 0
 2137 00dc 06E0     		b	.L143
 2138              	.LVL228:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 75


 2139              	.L144:
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 2140              		.loc 1 775 0
 2141 00de FFF7FEFF 		bl	HAL_GetTick
 2142              	.LVL229:
 2143 00e2 801B     		subs	r0, r0, r6
 2144 00e4 41F28833 		movw	r3, #5000
 2145 00e8 9842     		cmp	r0, r3
 2146 00ea 51D8     		bhi	.L153
 2147              	.L143:
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2148              		.loc 1 773 0
 2149 00ec 2B4B     		ldr	r3, .L156+4
 2150 00ee 5B68     		ldr	r3, [r3, #4]
 2151 00f0 03F00C03 		and	r3, r3, #12
 2152 00f4 6268     		ldr	r2, [r4, #4]
 2153 00f6 B3EB820F 		cmp	r3, r2, lsl #2
 2154 00fa F0D1     		bne	.L144
 2155              	.LVL230:
 2156              	.L133:
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 2157              		.loc 1 782 0
 2158 00fc 264B     		ldr	r3, .L156
 2159 00fe 1B68     		ldr	r3, [r3]
 2160 0100 03F00703 		and	r3, r3, #7
 2161 0104 9D42     		cmp	r5, r3
 2162 0106 0AD2     		bcs	.L145
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2163              		.loc 1 785 0
 2164 0108 234A     		ldr	r2, .L156
 2165 010a 1368     		ldr	r3, [r2]
 2166 010c 23F00703 		bic	r3, r3, #7
 2167 0110 2B43     		orrs	r3, r3, r5
 2168 0112 1360     		str	r3, [r2]
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 2169              		.loc 1 789 0
 2170 0114 1368     		ldr	r3, [r2]
 2171 0116 03F00703 		and	r3, r3, #7
 2172 011a 9D42     		cmp	r5, r3
 2173 011c 3AD1     		bne	.L154
 2174              	.L145:
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2175              		.loc 1 796 0
 2176 011e 2368     		ldr	r3, [r4]
 2177 0120 13F0040F 		tst	r3, #4
 2178 0124 06D0     		beq	.L146
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2179              		.loc 1 799 0
 2180 0126 1D49     		ldr	r1, .L156+4
 2181 0128 4B68     		ldr	r3, [r1, #4]
 2182 012a 23F4E062 		bic	r2, r3, #1792
 2183 012e E368     		ldr	r3, [r4, #12]
 2184 0130 1343     		orrs	r3, r3, r2
 2185 0132 4B60     		str	r3, [r1, #4]
 2186              	.L146:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2187              		.loc 1 803 0
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 76


 2188 0134 2368     		ldr	r3, [r4]
 2189 0136 13F0080F 		tst	r3, #8
 2190 013a 07D0     		beq	.L147
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2191              		.loc 1 806 0
 2192 013c 174A     		ldr	r2, .L156+4
 2193 013e 5368     		ldr	r3, [r2, #4]
 2194 0140 23F46053 		bic	r3, r3, #14336
 2195 0144 2169     		ldr	r1, [r4, #16]
 2196 0146 43EAC103 		orr	r3, r3, r1, lsl #3
 2197 014a 5360     		str	r3, [r2, #4]
 2198              	.L147:
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2199              		.loc 1 810 0
 2200 014c FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2201              	.LVL231:
 2202 0150 124B     		ldr	r3, .L156+4
 2203 0152 5B68     		ldr	r3, [r3, #4]
 2204 0154 03F0F002 		and	r2, r3, #240
 2205              	.LVL232:
 2206              	.LBB280:
 2207              	.LBB281:
 2208              		.loc 2 988 0
 2209 0158 F023     		movs	r3, #240
 2210              		.syntax unified
 2211              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2212 015a 93FAA3F3 		rbit r3, r3
 2213              	@ 0 "" 2
 2214              	.LVL233:
 2215              		.thumb
 2216              		.syntax unified
 2217              	.LBE281:
 2218              	.LBE280:
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2219              		.loc 1 810 0
 2220 015e B3FA83F3 		clz	r3, r3
 2221 0162 22FA03F3 		lsr	r3, r2, r3
 2222 0166 0E4A     		ldr	r2, .L156+8
 2223 0168 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2224 016a D840     		lsrs	r0, r0, r3
 2225 016c 0D4B     		ldr	r3, .L156+12
 2226 016e 1860     		str	r0, [r3]
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 2227              		.loc 1 813 0
 2228 0170 0D4B     		ldr	r3, .L156+16
 2229 0172 1868     		ldr	r0, [r3]
 2230 0174 FFF7FEFF 		bl	HAL_InitTick
 2231              	.LVL234:
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2232              		.loc 1 815 0
 2233 0178 0020     		movs	r0, #0
 2234 017a 70BD     		pop	{r4, r5, r6, pc}
 2235              	.LVL235:
 2236              	.L148:
 2237              	.LCFI10:
 2238              		.cfi_def_cfa_offset 0
 2239              		.cfi_restore 4
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 77


 2240              		.cfi_restore 5
 2241              		.cfi_restore 6
 2242              		.cfi_restore 14
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2243              		.loc 1 703 0
 2244 017c 0120     		movs	r0, #1
 2245              	.LVL236:
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2246              		.loc 1 816 0
 2247 017e 7047     		bx	lr
 2248              	.LVL237:
 2249              	.L149:
 2250              	.LCFI11:
 2251              		.cfi_def_cfa_offset 16
 2252              		.cfi_offset 4, -16
 2253              		.cfi_offset 5, -12
 2254              		.cfi_offset 6, -8
 2255              		.cfi_offset 14, -4
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2256              		.loc 1 724 0
 2257 0180 0120     		movs	r0, #1
 2258              	.LVL238:
 2259 0182 70BD     		pop	{r4, r5, r6, pc}
 2260              	.LVL239:
 2261              	.L150:
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2262              		.loc 1 746 0
 2263 0184 0120     		movs	r0, #1
 2264 0186 70BD     		pop	{r4, r5, r6, pc}
 2265              	.LVL240:
 2266              	.L151:
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2267              		.loc 1 755 0
 2268 0188 0120     		movs	r0, #1
 2269 018a 70BD     		pop	{r4, r5, r6, pc}
 2270              	.LVL241:
 2271              	.L152:
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2272              		.loc 1 764 0
 2273 018c 0120     		movs	r0, #1
 2274 018e 70BD     		pop	{r4, r5, r6, pc}
 2275              	.LVL242:
 2276              	.L153:
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 2277              		.loc 1 777 0
 2278 0190 0320     		movs	r0, #3
 2279 0192 70BD     		pop	{r4, r5, r6, pc}
 2280              	.LVL243:
 2281              	.L154:
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 2282              		.loc 1 791 0
 2283 0194 0120     		movs	r0, #1
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 2284              		.loc 1 816 0
 2285 0196 70BD     		pop	{r4, r5, r6, pc}
 2286              	.LVL244:
 2287              	.L157:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 78


 2288              		.align	2
 2289              	.L156:
 2290 0198 00200240 		.word	1073881088
 2291 019c 00100240 		.word	1073876992
 2292 01a0 00000000 		.word	AHBPrescTable
 2293 01a4 00000000 		.word	SystemCoreClock
 2294 01a8 00000000 		.word	uwTickPrio
 2295              		.cfi_endproc
 2296              	.LFE125:
 2298              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2299              		.align	2
 2300              		.global	HAL_RCC_GetHCLKFreq
 2301              		.thumb
 2302              		.thumb_func
 2304              	HAL_RCC_GetHCLKFreq:
 2305              	.LFB130:
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2306              		.loc 1 1030 0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 0
 2309              		@ frame_needed = 0, uses_anonymous_args = 0
 2310              		@ link register save eliminated.
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2311              		.loc 1 1032 0
 2312 0000 014B     		ldr	r3, .L159
 2313 0002 1868     		ldr	r0, [r3]
 2314 0004 7047     		bx	lr
 2315              	.L160:
 2316 0006 00BF     		.align	2
 2317              	.L159:
 2318 0008 00000000 		.word	SystemCoreClock
 2319              		.cfi_endproc
 2320              	.LFE130:
 2322              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2323              		.align	2
 2324              		.global	HAL_RCC_GetPCLK1Freq
 2325              		.thumb
 2326              		.thumb_func
 2328              	HAL_RCC_GetPCLK1Freq:
 2329              	.LFB131:
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 79


1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2330              		.loc 1 1041 0
 2331              		.cfi_startproc
 2332              		@ args = 0, pretend = 0, frame = 0
 2333              		@ frame_needed = 0, uses_anonymous_args = 0
 2334 0000 08B5     		push	{r3, lr}
 2335              	.LCFI12:
 2336              		.cfi_def_cfa_offset 8
 2337              		.cfi_offset 3, -8
 2338              		.cfi_offset 14, -4
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2339              		.loc 1 1043 0
 2340 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2341              	.LVL245:
 2342 0006 084B     		ldr	r3, .L163
 2343 0008 5B68     		ldr	r3, [r3, #4]
 2344 000a 03F4E062 		and	r2, r3, #1792
 2345              	.LVL246:
 2346              	.LBB282:
 2347              	.LBB283:
 2348              		.loc 2 988 0
 2349 000e 4FF4E063 		mov	r3, #1792
 2350              		.syntax unified
 2351              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2352 0012 93FAA3F3 		rbit r3, r3
 2353              	@ 0 "" 2
 2354              	.LVL247:
 2355              		.thumb
 2356              		.syntax unified
 2357              	.LBE283:
 2358              	.LBE282:
 2359              		.loc 1 1043 0
 2360 0016 B3FA83F3 		clz	r3, r3
 2361 001a 22FA03F3 		lsr	r3, r2, r3
 2362 001e 034A     		ldr	r2, .L163+4
 2363 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2364              		.loc 1 1044 0
 2365 0022 D840     		lsrs	r0, r0, r3
 2366 0024 08BD     		pop	{r3, pc}
 2367              	.L164:
 2368 0026 00BF     		.align	2
 2369              	.L163:
 2370 0028 00100240 		.word	1073876992
 2371 002c 00000000 		.word	APBPrescTable
 2372              		.cfi_endproc
 2373              	.LFE131:
 2375              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2376              		.align	2
 2377              		.global	HAL_RCC_GetPCLK2Freq
 2378              		.thumb
 2379              		.thumb_func
 2381              	HAL_RCC_GetPCLK2Freq:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 80


 2382              	.LFB132:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2383              		.loc 1 1053 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 0
 2386              		@ frame_needed = 0, uses_anonymous_args = 0
 2387 0000 08B5     		push	{r3, lr}
 2388              	.LCFI13:
 2389              		.cfi_def_cfa_offset 8
 2390              		.cfi_offset 3, -8
 2391              		.cfi_offset 14, -4
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2392              		.loc 1 1055 0
 2393 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2394              	.LVL248:
 2395 0006 084B     		ldr	r3, .L167
 2396 0008 5B68     		ldr	r3, [r3, #4]
 2397 000a 03F46052 		and	r2, r3, #14336
 2398              	.LVL249:
 2399              	.LBB284:
 2400              	.LBB285:
 2401              		.loc 2 988 0
 2402 000e 4FF46053 		mov	r3, #14336
 2403              		.syntax unified
 2404              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2405 0012 93FAA3F3 		rbit r3, r3
 2406              	@ 0 "" 2
 2407              	.LVL250:
 2408              		.thumb
 2409              		.syntax unified
 2410              	.LBE285:
 2411              	.LBE284:
 2412              		.loc 1 1055 0
 2413 0016 B3FA83F3 		clz	r3, r3
 2414 001a 22FA03F3 		lsr	r3, r2, r3
 2415 001e 034A     		ldr	r2, .L167+4
 2416 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2417              		.loc 1 1056 0
 2418 0022 D840     		lsrs	r0, r0, r3
 2419 0024 08BD     		pop	{r3, pc}
 2420              	.L168:
 2421 0026 00BF     		.align	2
 2422              	.L167:
 2423 0028 00100240 		.word	1073876992
 2424 002c 00000000 		.word	APBPrescTable
 2425              		.cfi_endproc
 2426              	.LFE132:
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 81


 2428              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2429              		.align	2
 2430              		.global	HAL_RCC_GetOscConfig
 2431              		.thumb
 2432              		.thumb_func
 2434              	HAL_RCC_GetOscConfig:
 2435              	.LFB133:
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2436              		.loc 1 1066 0
 2437              		.cfi_startproc
 2438              		@ args = 0, pretend = 0, frame = 0
 2439              		@ frame_needed = 0, uses_anonymous_args = 0
 2440              		@ link register save eliminated.
 2441              	.LVL251:
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2442              		.loc 1 1071 0
 2443 0000 0F23     		movs	r3, #15
 2444 0002 0360     		str	r3, [r0]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2445              		.loc 1 1076 0
 2446 0004 2E4B     		ldr	r3, .L182
 2447 0006 1B68     		ldr	r3, [r3]
 2448 0008 13F4802F 		tst	r3, #262144
 2449 000c 03D0     		beq	.L170
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2450              		.loc 1 1078 0
 2451 000e 4FF4A023 		mov	r3, #327680
 2452 0012 4360     		str	r3, [r0, #4]
 2453 0014 0AE0     		b	.L171
 2454              	.L170:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2455              		.loc 1 1080 0
 2456 0016 2A4B     		ldr	r3, .L182
 2457 0018 1B68     		ldr	r3, [r3]
 2458 001a 13F4803F 		tst	r3, #65536
 2459 001e 03D0     		beq	.L172
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 82


 2460              		.loc 1 1082 0
 2461 0020 4FF48033 		mov	r3, #65536
 2462 0024 4360     		str	r3, [r0, #4]
 2463 0026 01E0     		b	.L171
 2464              	.L172:
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2465              		.loc 1 1086 0
 2466 0028 0023     		movs	r3, #0
 2467 002a 4360     		str	r3, [r0, #4]
 2468              	.L171:
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 2469              		.loc 1 1089 0
 2470 002c 244A     		ldr	r2, .L182
 2471 002e D36A     		ldr	r3, [r2, #44]
 2472 0030 03F00F03 		and	r3, r3, #15
 2473 0034 8360     		str	r3, [r0, #8]
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2474              		.loc 1 1093 0
 2475 0036 1368     		ldr	r3, [r2]
 2476 0038 13F0010F 		tst	r3, #1
 2477 003c 02D0     		beq	.L173
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2478              		.loc 1 1095 0
 2479 003e 0123     		movs	r3, #1
 2480 0040 0361     		str	r3, [r0, #16]
 2481 0042 01E0     		b	.L174
 2482              	.L173:
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2483              		.loc 1 1099 0
 2484 0044 0023     		movs	r3, #0
 2485 0046 0361     		str	r3, [r0, #16]
 2486              	.L174:
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2487              		.loc 1 1102 0
 2488 0048 1D49     		ldr	r1, .L182
 2489 004a 0B68     		ldr	r3, [r1]
 2490 004c 03F0F802 		and	r2, r3, #248
 2491              	.LVL252:
 2492              	.LBB286:
 2493              	.LBB287:
 2494              		.loc 2 988 0
 2495 0050 F823     		movs	r3, #248
 2496              		.syntax unified
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 83


 2497              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2498 0052 93FAA3F3 		rbit r3, r3
 2499              	@ 0 "" 2
 2500              	.LVL253:
 2501              		.thumb
 2502              		.syntax unified
 2503              	.LBE287:
 2504              	.LBE286:
 2505              		.loc 1 1102 0
 2506 0056 B3FA83F3 		clz	r3, r3
 2507 005a 22FA03F3 		lsr	r3, r2, r3
 2508 005e 4361     		str	r3, [r0, #20]
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2509              		.loc 1 1105 0
 2510 0060 0B6A     		ldr	r3, [r1, #32]
 2511 0062 13F0040F 		tst	r3, #4
 2512 0066 02D0     		beq	.L175
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2513              		.loc 1 1107 0
 2514 0068 0523     		movs	r3, #5
 2515 006a C360     		str	r3, [r0, #12]
 2516 006c 09E0     		b	.L176
 2517              	.L175:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2518              		.loc 1 1109 0
 2519 006e 144B     		ldr	r3, .L182
 2520 0070 1B6A     		ldr	r3, [r3, #32]
 2521 0072 13F0010F 		tst	r3, #1
 2522 0076 02D0     		beq	.L177
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2523              		.loc 1 1111 0
 2524 0078 0123     		movs	r3, #1
 2525 007a C360     		str	r3, [r0, #12]
 2526 007c 01E0     		b	.L176
 2527              	.L177:
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2528              		.loc 1 1115 0
 2529 007e 0023     		movs	r3, #0
 2530 0080 C360     		str	r3, [r0, #12]
 2531              	.L176:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2532              		.loc 1 1119 0
 2533 0082 0F4B     		ldr	r3, .L182
 2534 0084 5B6A     		ldr	r3, [r3, #36]
 2535 0086 13F0010F 		tst	r3, #1
 2536 008a 02D0     		beq	.L178
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 84


1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2537              		.loc 1 1121 0
 2538 008c 0123     		movs	r3, #1
 2539 008e 8361     		str	r3, [r0, #24]
 2540 0090 01E0     		b	.L179
 2541              	.L178:
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2542              		.loc 1 1125 0
 2543 0092 0023     		movs	r3, #0
 2544 0094 8361     		str	r3, [r0, #24]
 2545              	.L179:
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2546              		.loc 1 1130 0
 2547 0096 0A4B     		ldr	r3, .L182
 2548 0098 1B68     		ldr	r3, [r3]
 2549 009a 13F0807F 		tst	r3, #16777216
 2550 009e 02D0     		beq	.L180
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2551              		.loc 1 1132 0
 2552 00a0 0223     		movs	r3, #2
 2553 00a2 C361     		str	r3, [r0, #28]
 2554 00a4 01E0     		b	.L181
 2555              	.L180:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2556              		.loc 1 1136 0
 2557 00a6 0123     		movs	r3, #1
 2558 00a8 C361     		str	r3, [r0, #28]
 2559              	.L181:
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2560              		.loc 1 1138 0
 2561 00aa 054A     		ldr	r2, .L182
 2562 00ac 5368     		ldr	r3, [r2, #4]
 2563 00ae 03F48033 		and	r3, r3, #65536
 2564 00b2 0362     		str	r3, [r0, #32]
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2565              		.loc 1 1139 0
 2566 00b4 5368     		ldr	r3, [r2, #4]
 2567 00b6 03F47013 		and	r3, r3, #3932160
 2568 00ba 4362     		str	r3, [r0, #36]
 2569 00bc 7047     		bx	lr
 2570              	.L183:
 2571 00be 00BF     		.align	2
 2572              	.L182:
 2573 00c0 00100240 		.word	1073876992
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 85


 2574              		.cfi_endproc
 2575              	.LFE133:
 2577              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2578              		.align	2
 2579              		.global	HAL_RCC_GetClockConfig
 2580              		.thumb
 2581              		.thumb_func
 2583              	HAL_RCC_GetClockConfig:
 2584              	.LFB134:
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2585              		.loc 1 1154 0
 2586              		.cfi_startproc
 2587              		@ args = 0, pretend = 0, frame = 0
 2588              		@ frame_needed = 0, uses_anonymous_args = 0
 2589              		@ link register save eliminated.
 2590              	.LVL254:
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2591              		.loc 1 1160 0
 2592 0000 0F23     		movs	r3, #15
 2593 0002 0360     		str	r3, [r0]
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2594              		.loc 1 1163 0
 2595 0004 0B4B     		ldr	r3, .L185
 2596 0006 5A68     		ldr	r2, [r3, #4]
 2597 0008 02F00302 		and	r2, r2, #3
 2598 000c 4260     		str	r2, [r0, #4]
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2599              		.loc 1 1166 0
 2600 000e 5A68     		ldr	r2, [r3, #4]
 2601 0010 02F0F002 		and	r2, r2, #240
 2602 0014 8260     		str	r2, [r0, #8]
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 86


 2603              		.loc 1 1169 0
 2604 0016 5A68     		ldr	r2, [r3, #4]
 2605 0018 02F4E062 		and	r2, r2, #1792
 2606 001c C260     		str	r2, [r0, #12]
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2607              		.loc 1 1172 0
 2608 001e 5B68     		ldr	r3, [r3, #4]
 2609 0020 DB08     		lsrs	r3, r3, #3
 2610 0022 03F4E063 		and	r3, r3, #1792
 2611 0026 0361     		str	r3, [r0, #16]
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2612              		.loc 1 1175 0
 2613 0028 034B     		ldr	r3, .L185+4
 2614 002a 1B68     		ldr	r3, [r3]
 2615 002c 03F00703 		and	r3, r3, #7
 2616 0030 0B60     		str	r3, [r1]
 2617 0032 7047     		bx	lr
 2618              	.L186:
 2619              		.align	2
 2620              	.L185:
 2621 0034 00100240 		.word	1073876992
 2622 0038 00200240 		.word	1073881088
 2623              		.cfi_endproc
 2624              	.LFE134:
 2626              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2627              		.align	2
 2628              		.weak	HAL_RCC_CSSCallback
 2629              		.thumb
 2630              		.thumb_func
 2632              	HAL_RCC_CSSCallback:
 2633              	.LFB136:
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 87


1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2634              		.loc 1 1201 0
 2635              		.cfi_startproc
 2636              		@ args = 0, pretend = 0, frame = 0
 2637              		@ frame_needed = 0, uses_anonymous_args = 0
 2638              		@ link register save eliminated.
 2639 0000 7047     		bx	lr
 2640              		.cfi_endproc
 2641              	.LFE136:
 2643 0002 00BF     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2644              		.align	2
 2645              		.global	HAL_RCC_NMI_IRQHandler
 2646              		.thumb
 2647              		.thumb_func
 2649              	HAL_RCC_NMI_IRQHandler:
 2650              	.LFB135:
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2651              		.loc 1 1184 0
 2652              		.cfi_startproc
 2653              		@ args = 0, pretend = 0, frame = 0
 2654              		@ frame_needed = 0, uses_anonymous_args = 0
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2655              		.loc 1 1184 0
 2656 0000 08B5     		push	{r3, lr}
 2657              	.LCFI14:
 2658              		.cfi_def_cfa_offset 8
 2659              		.cfi_offset 3, -8
 2660              		.cfi_offset 14, -4
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 2661              		.loc 1 1186 0
 2662 0002 054B     		ldr	r3, .L191
 2663 0004 9B68     		ldr	r3, [r3, #8]
 2664 0006 13F0800F 		tst	r3, #128
 2665 000a 04D0     		beq	.L188
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 2666              		.loc 1 1189 0
 2667 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2668              	.LVL255:
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 2669              		.loc 1 1192 0
 2670 0010 8022     		movs	r2, #128
 2671 0012 024B     		ldr	r3, .L191+4
 2672 0014 1A70     		strb	r2, [r3]
 2673              	.L188:
 2674 0016 08BD     		pop	{r3, pc}
 2675              	.L192:
 2676              		.align	2
 2677              	.L191:
 2678 0018 00100240 		.word	1073876992
 2679 001c 0A100240 		.word	1073877002
 2680              		.cfi_endproc
 2681              	.LFE135:
 2683              		.global	aPredivFactorTable
 2684              		.global	aPLLMULFactorTable
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 88


 2685              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2686              		.align	2
 2687              		.set	.LANCHOR1,. + 0
 2690              	aPredivFactorTable:
 2691 0000 01       		.byte	1
 2692 0001 02       		.byte	2
 2693 0002 03       		.byte	3
 2694 0003 04       		.byte	4
 2695 0004 05       		.byte	5
 2696 0005 06       		.byte	6
 2697 0006 07       		.byte	7
 2698 0007 08       		.byte	8
 2699 0008 09       		.byte	9
 2700 0009 0A       		.byte	10
 2701 000a 0B       		.byte	11
 2702 000b 0C       		.byte	12
 2703 000c 0D       		.byte	13
 2704 000d 0E       		.byte	14
 2705 000e 0F       		.byte	15
 2706 000f 10       		.byte	16
 2707              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2708              		.align	2
 2709              		.set	.LANCHOR0,. + 0
 2712              	aPLLMULFactorTable:
 2713 0000 02       		.byte	2
 2714 0001 03       		.byte	3
 2715 0002 04       		.byte	4
 2716 0003 05       		.byte	5
 2717 0004 06       		.byte	6
 2718 0005 07       		.byte	7
 2719 0006 08       		.byte	8
 2720 0007 09       		.byte	9
 2721 0008 0A       		.byte	10
 2722 0009 0B       		.byte	11
 2723 000a 0C       		.byte	12
 2724 000b 0D       		.byte	13
 2725 000c 0E       		.byte	14
 2726 000d 0F       		.byte	15
 2727 000e 10       		.byte	16
 2728 000f 10       		.byte	16
 2729              		.text
 2730              	.Letext0:
 2731              		.file 3 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_
 2732              		.file 4 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 2733              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f302x8.h"
 2734              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2735              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2736              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2737              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2738              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 2739              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2740              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 89


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_rcc.c
D:\Programme\Cygwin\tmp\ccBwtXNK.s:22     .text.HAL_RCC_DeInit:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:27     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
D:\Programme\Cygwin\tmp\ccBwtXNK.s:211    .text.HAL_RCC_DeInit:000000e4 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:221    .text.HAL_RCC_OscConfig:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:226    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
D:\Programme\Cygwin\tmp\ccBwtXNK.s:890    .text.HAL_RCC_OscConfig:000002f4 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:895    .text.HAL_RCC_OscConfig:000002fc $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1596   .text.HAL_RCC_OscConfig:00000610 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1601   .text.HAL_RCC_OscConfig:00000618 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1675   .text.HAL_RCC_MCOConfig:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1680   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1749   .text.HAL_RCC_MCOConfig:0000004c $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1754   .text.HAL_RCC_EnableCSS:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1759   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1792   .text.HAL_RCC_DisableCSS:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1797   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1830   .text.HAL_RCC_GetSysClockFreq:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1835   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1926   .text.HAL_RCC_GetSysClockFreq:0000005c $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1935   .text.HAL_RCC_ClockConfig:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:1940   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2290   .text.HAL_RCC_ClockConfig:00000198 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2299   .text.HAL_RCC_GetHCLKFreq:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2304   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2318   .text.HAL_RCC_GetHCLKFreq:00000008 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2323   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2328   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2370   .text.HAL_RCC_GetPCLK1Freq:00000028 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2376   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2381   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2423   .text.HAL_RCC_GetPCLK2Freq:00000028 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2429   .text.HAL_RCC_GetOscConfig:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2434   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2573   .text.HAL_RCC_GetOscConfig:000000c0 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2578   .text.HAL_RCC_GetClockConfig:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2583   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2621   .text.HAL_RCC_GetClockConfig:00000034 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2627   .text.HAL_RCC_CSSCallback:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2632   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2644   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2649   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2678   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2690   .rodata.aPredivFactorTable:00000000 aPredivFactorTable
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2712   .rodata.aPLLMULFactorTable:00000000 aPLLMULFactorTable
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2686   .rodata.aPredivFactorTable:00000000 $d
D:\Programme\Cygwin\tmp\ccBwtXNK.s:2708   .rodata.aPLLMULFactorTable:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
HAL_GPIO_Init
AHBPrescTable
ARM GAS  D:\Programme\Cygwin\tmp\ccBwtXNK.s 			page 90


APBPrescTable
