ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.syntax unified
  17              		.file	"timers.c"
  18              		.text
  19              	.Ltext0:
  20              		.cfi_sections	.debug_frame
  21              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  22              		.align	2
  23              		.thumb
  24              		.thumb_func
  26              	prvGetNextExpireTime:
  27              	.LFB16:
  28              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 2


  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** header files above, but not in this file, in order to generate the correct
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t				uxAutoReload;		/*<< Set to pdTRUE if the timer should be automatically restarted on
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		uint8_t 			ucStaticallyAllocated; /*<< Set to pdTRUE if the timer was created statically so no at
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 3


  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists. */
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1 = {0};
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2 = {0};
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList = NULL;
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList = NULL;
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 4


 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters ) PRIVILEGED_FUNCTION;
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto reload timer, then call its callback.
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 5


 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 6


 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) );
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically, so note this
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created dynamically in case the timer is later
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				deleted. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdFALSE;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 7


 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Timers can be created statically or dynamically so note this
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				timer was created statically in case it is later deleted. */
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxNewTimer->ucStaticallyAllocated = pdTRUE;
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 8


 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 9


 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto reload timer then calculate the next
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 10


 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvTimerTask( void *pvParameters )
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 11


 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  29              		.loc 1 599 0
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 12


  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  35              		.loc 1 609 0
  36 0000 064B     		ldr	r3, .L4
  37 0002 1A68     		ldr	r2, [r3]
  38 0004 1368     		ldr	r3, [r2]
  39 0006 B3FA83F3 		clz	r3, r3
  40 000a 5B09     		lsrs	r3, r3, #5
  41 000c 0360     		str	r3, [r0]
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  42              		.loc 1 610 0
  43 000e 13B9     		cbnz	r3, .L3
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  44              		.loc 1 612 0
  45 0010 D368     		ldr	r3, [r2, #12]
  46 0012 1868     		ldr	r0, [r3]
  47              	.LVL1:
  48 0014 7047     		bx	lr
  49              	.LVL2:
  50              	.L3:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  51              		.loc 1 617 0
  52 0016 0020     		movs	r0, #0
  53              	.LVL3:
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  54              		.loc 1 621 0
  55 0018 7047     		bx	lr
  56              	.L5:
  57 001a 00BF     		.align	2
  58              	.L4:
  59 001c 00000000 		.word	.LANCHOR0
  60              		.cfi_endproc
  61              	.LFE16:
  63              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  64              		.align	2
  65              		.thumb
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 13


  66              		.thumb_func
  68              	prvInsertTimerInActiveList:
  69              	.LFB18:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  70              		.loc 1 648 0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              	.LVL4:
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  80              	.LVL5:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  81              		.loc 1 651 0
  82 0002 4160     		str	r1, [r0, #4]
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  83              		.loc 1 652 0
  84 0004 0061     		str	r0, [r0, #16]
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  85              		.loc 1 654 0
  86 0006 9142     		cmp	r1, r2
  87 0008 0AD8     		bhi	.L7
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 14


 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  88              		.loc 1 658 0
  89 000a D21A     		subs	r2, r2, r3
  90              	.LVL6:
  91 000c 8369     		ldr	r3, [r0, #24]
  92              	.LVL7:
  93 000e 9A42     		cmp	r2, r3
  94 0010 11D2     		bcs	.L10
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
  95              		.loc 1 666 0
  96 0012 011D     		adds	r1, r0, #4
  97              	.LVL8:
  98 0014 0A4B     		ldr	r3, .L13
  99 0016 1868     		ldr	r0, [r3]
 100              	.LVL9:
 101 0018 FFF7FEFF 		bl	vListInsert
 102              	.LVL10:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 103              		.loc 1 649 0
 104 001c 0020     		movs	r0, #0
 105 001e 08BD     		pop	{r3, pc}
 106              	.LVL11:
 107              	.L7:
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 108              		.loc 1 671 0
 109 0020 9A42     		cmp	r2, r3
 110 0022 01D2     		bcs	.L9
 111              		.loc 1 671 0 is_stmt 0 discriminator 1
 112 0024 9942     		cmp	r1, r3
 113 0026 08D2     		bcs	.L11
 114              	.L9:
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 115              		.loc 1 680 0 is_stmt 1
 116 0028 011D     		adds	r1, r0, #4
 117              	.LVL12:
 118 002a 064B     		ldr	r3, .L13+4
 119              	.LVL13:
 120 002c 1868     		ldr	r0, [r3]
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 15


 121              	.LVL14:
 122 002e FFF7FEFF 		bl	vListInsert
 123              	.LVL15:
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 124              		.loc 1 649 0
 125 0032 0020     		movs	r0, #0
 126 0034 08BD     		pop	{r3, pc}
 127              	.LVL16:
 128              	.L10:
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 129              		.loc 1 662 0
 130 0036 0120     		movs	r0, #1
 131              	.LVL17:
 132 0038 08BD     		pop	{r3, pc}
 133              	.LVL18:
 134              	.L11:
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 135              		.loc 1 676 0
 136 003a 0120     		movs	r0, #1
 137              	.LVL19:
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 138              		.loc 1 685 0
 139 003c 08BD     		pop	{r3, pc}
 140              	.LVL20:
 141              	.L14:
 142 003e 00BF     		.align	2
 143              	.L13:
 144 0040 00000000 		.word	.LANCHOR1
 145 0044 00000000 		.word	.LANCHOR0
 146              		.cfi_endproc
 147              	.LFE18:
 149              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 150              		.align	2
 151              		.thumb
 152              		.thumb_func
 154              	prvCheckForValidListAndQueue:
 155              	.LFB21:
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 16


 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_START_FROM_ISR :
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET :
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			    case tmrCOMMAND_RESET_FROM_ISR :
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 17


 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list.
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					There is nothing to do here. */
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list,
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					just free up the memory if the memory was dynamically
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					allocated. */
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer can only have been allocated dynamically -
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						free it again. */
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						vPortFree( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer could have been allocated statically or
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						dynamically, so check before attempting to free the
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						memory. */
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( pxTimer->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 18


 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxTimer->uxAutoReload == ( UBaseType_t ) pdTRUE )
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 19


 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 156              		.loc 1 895 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160 0000 30B5     		push	{r4, r5, lr}
 161              	.LCFI1:
 162              		.cfi_def_cfa_offset 12
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 166 0002 83B0     		sub	sp, sp, #12
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 24
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 169              		.loc 1 899 0
 170 0004 FFF7FEFF 		bl	vPortEnterCritical
 171              	.LVL21:
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 172              		.loc 1 901 0
 173 0008 104B     		ldr	r3, .L18
 174 000a 1B68     		ldr	r3, [r3]
 175 000c CBB9     		cbnz	r3, .L16
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 176              		.loc 1 903 0
 177 000e 104D     		ldr	r5, .L18+4
 178 0010 2846     		mov	r0, r5
 179 0012 FFF7FEFF 		bl	vListInitialise
 180              	.LVL22:
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 20


 181              		.loc 1 904 0
 182 0016 0F4C     		ldr	r4, .L18+8
 183 0018 2046     		mov	r0, r4
 184 001a FFF7FEFF 		bl	vListInitialise
 185              	.LVL23:
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 186              		.loc 1 905 0
 187 001e 0E4B     		ldr	r3, .L18+12
 188 0020 1D60     		str	r5, [r3]
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 189              		.loc 1 906 0
 190 0022 0E4B     		ldr	r3, .L18+16
 191 0024 1C60     		str	r4, [r3]
 192              	.LBB41:
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 193              		.loc 1 915 0
 194 0026 0023     		movs	r3, #0
 195 0028 0093     		str	r3, [sp]
 196 002a 0D4B     		ldr	r3, .L18+20
 197 002c 0D4A     		ldr	r2, .L18+24
 198 002e 1021     		movs	r1, #16
 199 0030 0A20     		movs	r0, #10
 200 0032 FFF7FEFF 		bl	xQueueGenericCreateStatic
 201              	.LVL24:
 202 0036 054B     		ldr	r3, .L18
 203 0038 1860     		str	r0, [r3]
 204              	.LBE41:
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 205              		.loc 1 925 0
 206 003a 10B1     		cbz	r0, .L16
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 207              		.loc 1 927 0
 208 003c 0A49     		ldr	r1, .L18+28
 209 003e FFF7FEFF 		bl	vQueueAddToRegistry
 210              	.LVL25:
 211              	.L16:
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 21


 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 212              		.loc 1 941 0
 213 0042 FFF7FEFF 		bl	vPortExitCritical
 214              	.LVL26:
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 215              		.loc 1 942 0
 216 0046 03B0     		add	sp, sp, #12
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 12
 219              		@ sp needed
 220 0048 30BD     		pop	{r4, r5, pc}
 221              	.L19:
 222 004a 00BF     		.align	2
 223              	.L18:
 224 004c 00000000 		.word	.LANCHOR2
 225 0050 00000000 		.word	.LANCHOR3
 226 0054 00000000 		.word	.LANCHOR4
 227 0058 00000000 		.word	.LANCHOR0
 228 005c 00000000 		.word	.LANCHOR1
 229 0060 00000000 		.word	.LANCHOR5
 230 0064 00000000 		.word	.LANCHOR6
 231 0068 00000000 		.word	.LC0
 232              		.cfi_endproc
 233              	.LFE21:
 235              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 236              		.align	2
 237              		.thumb
 238              		.thumb_func
 240              	prvInitialiseNewTimer:
 241              	.LFB7:
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 242              		.loc 1 358 0
 243              		.cfi_startproc
 244              		@ args = 8, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246              	.LVL27:
 247 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 248              	.LCFI4:
 249              		.cfi_def_cfa_offset 24
 250              		.cfi_offset 4, -24
 251              		.cfi_offset 5, -20
 252              		.cfi_offset 6, -16
 253              		.cfi_offset 7, -12
 254              		.cfi_offset 8, -8
 255              		.cfi_offset 14, -4
 256 0004 079C     		ldr	r4, [sp, #28]
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 22


 257              		.loc 1 360 0
 258 0006 41B9     		cbnz	r1, .L21
 259              	.LBB42:
 260              	.LBB43:
 261              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 23


  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 24


 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 25


 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 262              		.loc 2 195 0
 263              		.syntax unified
 264              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 265 0008 4FF05003 			mov r3, #80												
 266 000c 83F31188 		msr basepri, r3											
 267 0010 BFF36F8F 		isb														
 268 0014 BFF34F8F 		dsb														
 269              	
 270              	@ 0 "" 2
 271              	.LVL28:
 272              		.thumb
 273              		.syntax unified
 274              	.L22:
 275 0018 FEE7     		b	.L22
 276              	.LVL29:
 277              	.L21:
 278 001a 0F46     		mov	r7, r1
 279              	.LBE43:
 280              	.LBE42:
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 281              		.loc 1 362 0
 282 001c 74B1     		cbz	r4, .L20
 283 001e 1D46     		mov	r5, r3
 284 0020 1646     		mov	r6, r2
 285 0022 8046     		mov	r8, r0
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 286              		.loc 1 366 0
 287 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 26


 288              	.LVL30:
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 289              		.loc 1 370 0
 290 0028 C4F80080 		str	r8, [r4]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->uxAutoReload = uxAutoReload;
 291              		.loc 1 371 0
 292 002c A761     		str	r7, [r4, #24]
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 293              		.loc 1 372 0
 294 002e E661     		str	r6, [r4, #28]
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 295              		.loc 1 373 0
 296 0030 2562     		str	r5, [r4, #32]
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 297              		.loc 1 374 0
 298 0032 069B     		ldr	r3, [sp, #24]
 299 0034 6362     		str	r3, [r4, #36]
 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 300              		.loc 1 375 0
 301 0036 201D     		adds	r0, r4, #4
 302 0038 FFF7FEFF 		bl	vListInitialiseItem
 303              	.LVL31:
 304              	.L20:
 305 003c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 306              		.cfi_endproc
 307              	.LFE7:
 309              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 310              		.align	2
 311              		.global	xTimerCreateTimerTask
 312              		.thumb
 313              		.thumb_func
 315              	xTimerCreateTimerTask:
 316              	.LFB4:
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 317              		.loc 1 224 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 16
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 10B5     		push	{r4, lr}
 322              	.LCFI5:
 323              		.cfi_def_cfa_offset 8
 324              		.cfi_offset 4, -8
 325              		.cfi_offset 14, -4
 326 0002 88B0     		sub	sp, sp, #32
 327              	.LCFI6:
 328              		.cfi_def_cfa_offset 40
 329              	.LVL32:
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 330              		.loc 1 231 0
 331 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 332              	.LVL33:
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 333              		.loc 1 233 0
 334 0008 154B     		ldr	r3, .L33
 335 000a 1B68     		ldr	r3, [r3]
 336 000c D3B1     		cbz	r3, .L30
 337              	.LBB44:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 27


 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 338              		.loc 1 237 0
 339 000e 0024     		movs	r4, #0
 340 0010 0594     		str	r4, [sp, #20]
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 341              		.loc 1 238 0
 342 0012 0694     		str	r4, [sp, #24]
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 343              		.loc 1 241 0
 344 0014 07AA     		add	r2, sp, #28
 345 0016 06A9     		add	r1, sp, #24
 346 0018 05A8     		add	r0, sp, #20
 347 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 348              	.LVL34:
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 349              		.loc 1 242 0
 350 001e 059B     		ldr	r3, [sp, #20]
 351 0020 0293     		str	r3, [sp, #8]
 352 0022 069B     		ldr	r3, [sp, #24]
 353 0024 0193     		str	r3, [sp, #4]
 354 0026 0223     		movs	r3, #2
 355 0028 0093     		str	r3, [sp]
 356 002a 2346     		mov	r3, r4
 357 002c 079A     		ldr	r2, [sp, #28]
 358 002e 0D49     		ldr	r1, .L33+4
 359 0030 0D48     		ldr	r0, .L33+8
 360 0032 FFF7FEFF 		bl	xTaskCreateStatic
 361              	.LVL35:
 362 0036 0D4B     		ldr	r3, .L33+12
 363 0038 1860     		str	r0, [r3]
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 364              		.loc 1 250 0
 365 003a 08B9     		cbnz	r0, .L31
 366              	.LBE44:
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 367              		.loc 1 225 0
 368 003c 2046     		mov	r0, r4
 369 003e 02E0     		b	.L26
 370              	.L31:
 371              	.LBB45:
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 372              		.loc 1 252 0
 373 0040 0120     		movs	r0, #1
 374              	.LVL36:
 375 0042 00E0     		b	.L26
 376              	.LVL37:
 377              	.L30:
 378              	.LBE45:
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 379              		.loc 1 225 0
 380 0044 0020     		movs	r0, #0
 381              	.LVL38:
 382              	.L26:
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 383              		.loc 1 271 0
 384 0046 40B9     		cbnz	r0, .L28
 385              	.LBB46:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 28


 386              	.LBB47:
 387              		.loc 2 195 0
 388              		.syntax unified
 389              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 390 0048 4FF05003 			mov r3, #80												
 391 004c 83F31188 		msr basepri, r3											
 392 0050 BFF36F8F 		isb														
 393 0054 BFF34F8F 		dsb														
 394              	
 395              	@ 0 "" 2
 396              	.LVL39:
 397              		.thumb
 398              		.syntax unified
 399              	.L29:
 400 0058 FEE7     		b	.L29
 401              	.L28:
 402              	.LBE47:
 403              	.LBE46:
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 404              		.loc 1 273 0
 405 005a 08B0     		add	sp, sp, #32
 406              	.LCFI7:
 407              		.cfi_def_cfa_offset 8
 408              		@ sp needed
 409 005c 10BD     		pop	{r4, pc}
 410              	.L34:
 411 005e 00BF     		.align	2
 412              	.L33:
 413 0060 00000000 		.word	.LANCHOR2
 414 0064 08000000 		.word	.LC1
 415 0068 00000000 		.word	prvTimerTask
 416 006c 00000000 		.word	.LANCHOR7
 417              		.cfi_endproc
 418              	.LFE4:
 420              		.section	.text.xTimerCreate,"ax",%progbits
 421              		.align	2
 422              		.global	xTimerCreate
 423              		.thumb
 424              		.thumb_func
 426              	xTimerCreate:
 427              	.LFB5:
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 428              		.loc 1 283 0
 429              		.cfi_startproc
 430              		@ args = 4, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432              	.LVL40:
 433 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 434              	.LCFI8:
 435              		.cfi_def_cfa_offset 24
 436              		.cfi_offset 4, -24
 437              		.cfi_offset 5, -20
 438              		.cfi_offset 6, -16
 439              		.cfi_offset 7, -12
 440              		.cfi_offset 8, -8
 441              		.cfi_offset 14, -4
 442 0004 82B0     		sub	sp, sp, #8
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 29


 443              	.LCFI9:
 444              		.cfi_def_cfa_offset 32
 445 0006 0546     		mov	r5, r0
 446 0008 0E46     		mov	r6, r1
 447 000a 1746     		mov	r7, r2
 448 000c 9846     		mov	r8, r3
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 449              		.loc 1 286 0
 450 000e 3020     		movs	r0, #48
 451              	.LVL41:
 452 0010 FFF7FEFF 		bl	pvPortMalloc
 453              	.LVL42:
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 454              		.loc 1 288 0
 455 0014 0446     		mov	r4, r0
 456 0016 58B1     		cbz	r0, .L36
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 457              		.loc 1 290 0
 458 0018 0190     		str	r0, [sp, #4]
 459 001a 089B     		ldr	r3, [sp, #32]
 460 001c 0093     		str	r3, [sp]
 461 001e 4346     		mov	r3, r8
 462 0020 3A46     		mov	r2, r7
 463 0022 3146     		mov	r1, r6
 464 0024 2846     		mov	r0, r5
 465              	.LVL43:
 466 0026 FFF7FEFF 		bl	prvInitialiseNewTimer
 467              	.LVL44:
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 468              		.loc 1 297 0
 469 002a 0023     		movs	r3, #0
 470 002c 84F82C30 		strb	r3, [r4, #44]
 471              	.L36:
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 472              		.loc 1 303 0
 473 0030 2046     		mov	r0, r4
 474 0032 02B0     		add	sp, sp, #8
 475              	.LCFI10:
 476              		.cfi_def_cfa_offset 24
 477              		@ sp needed
 478 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 479              		.cfi_endproc
 480              	.LFE5:
 482              		.section	.text.xTimerCreateStatic,"ax",%progbits
 483              		.align	2
 484              		.global	xTimerCreateStatic
 485              		.thumb
 486              		.thumb_func
 488              	xTimerCreateStatic:
 489              	.LFB6:
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 490              		.loc 1 316 0
 491              		.cfi_startproc
 492              		@ args = 8, pretend = 0, frame = 8
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              	.LVL45:
 495 0000 30B5     		push	{r4, r5, lr}
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 30


 496              	.LCFI11:
 497              		.cfi_def_cfa_offset 12
 498              		.cfi_offset 4, -12
 499              		.cfi_offset 5, -8
 500              		.cfi_offset 14, -4
 501 0002 85B0     		sub	sp, sp, #20
 502              	.LCFI12:
 503              		.cfi_def_cfa_offset 32
 504 0004 099C     		ldr	r4, [sp, #36]
 505              	.LBB48:
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 506              		.loc 1 324 0
 507 0006 3025     		movs	r5, #48
 508 0008 0395     		str	r5, [sp, #12]
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 509              		.loc 1 325 0
 510 000a 039D     		ldr	r5, [sp, #12]
 511 000c 302D     		cmp	r5, #48
 512 000e 08D0     		beq	.L39
 513              	.LBB49:
 514              	.LBB50:
 515              		.loc 2 195 0
 516              		.syntax unified
 517              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 518 0010 4FF05003 			mov r3, #80												
 519 0014 83F31188 		msr basepri, r3											
 520 0018 BFF36F8F 		isb														
 521 001c BFF34F8F 		dsb														
 522              	
 523              	@ 0 "" 2
 524              	.LVL46:
 525              		.thumb
 526              		.syntax unified
 527              	.L40:
 528 0020 FEE7     		b	.L40
 529              	.LVL47:
 530              	.L39:
 531              	.LBE50:
 532              	.LBE49:
 533              	.LBE48:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 Unusual cast is ok as the structures are d
 534              		.loc 1 330 0
 535 0022 44B9     		cbnz	r4, .L41
 536              	.LBB51:
 537              	.LBB52:
 538              		.loc 2 195 0
 539              		.syntax unified
 540              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 541 0024 4FF05003 			mov r3, #80												
 542 0028 83F31188 		msr basepri, r3											
 543 002c BFF36F8F 		isb														
 544 0030 BFF34F8F 		dsb														
 545              	
 546              	@ 0 "" 2
 547              	.LVL48:
 548              		.thumb
 549              		.syntax unified
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 31


 550              	.L42:
 551 0034 FEE7     		b	.L42
 552              	.LVL49:
 553              	.L41:
 554              	.LBE52:
 555              	.LBE51:
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 556              		.loc 1 333 0
 557 0036 3CB1     		cbz	r4, .L43
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 558              		.loc 1 335 0
 559 0038 0194     		str	r4, [sp, #4]
 560 003a 089D     		ldr	r5, [sp, #32]
 561 003c 0095     		str	r5, [sp]
 562 003e FFF7FEFF 		bl	prvInitialiseNewTimer
 563              	.LVL50:
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 564              		.loc 1 341 0
 565 0042 0123     		movs	r3, #1
 566 0044 84F82C30 		strb	r3, [r4, #44]
 567              	.L43:
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568              		.loc 1 347 0
 569 0048 2046     		mov	r0, r4
 570 004a 05B0     		add	sp, sp, #20
 571              	.LCFI13:
 572              		.cfi_def_cfa_offset 12
 573              		@ sp needed
 574 004c 30BD     		pop	{r4, r5, pc}
 575              		.cfi_endproc
 576              	.LFE6:
 578 004e 00BF     		.section	.text.xTimerGenericCommand,"ax",%progbits
 579              		.align	2
 580              		.global	xTimerGenericCommand
 581              		.thumb
 582              		.thumb_func
 584              	xTimerGenericCommand:
 585              	.LFB8:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 586              		.loc 1 382 0
 587              		.cfi_startproc
 588              		@ args = 4, pretend = 0, frame = 16
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL51:
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 591              		.loc 1 386 0
 592 0000 40B9     		cbnz	r0, .L46
 593              	.LBB53:
 594              	.LBB54:
 595              		.loc 2 195 0
 596              		.syntax unified
 597              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 598 0002 4FF05003 			mov r3, #80												
 599 0006 83F31188 		msr basepri, r3											
 600 000a BFF36F8F 		isb														
 601 000e BFF34F8F 		dsb														
 602              	
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 32


 603              	@ 0 "" 2
 604              	.LVL52:
 605              		.thumb
 606              		.syntax unified
 607              	.L47:
 608 0012 FEE7     		b	.L47
 609              	.LVL53:
 610              	.L46:
 611              	.LBE54:
 612              	.LBE53:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 613              		.loc 1 382 0
 614 0014 30B5     		push	{r4, r5, lr}
 615              	.LCFI14:
 616              		.cfi_def_cfa_offset 12
 617              		.cfi_offset 4, -12
 618              		.cfi_offset 5, -8
 619              		.cfi_offset 14, -4
 620 0016 85B0     		sub	sp, sp, #20
 621              	.LCFI15:
 622              		.cfi_def_cfa_offset 32
 623 0018 1546     		mov	r5, r2
 624 001a 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 625              		.loc 1 390 0
 626 001c 124A     		ldr	r2, .L53
 627              	.LVL54:
 628 001e 1068     		ldr	r0, [r2]
 629              	.LVL55:
 630 0020 F0B1     		cbz	r0, .L51
 631 0022 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 632              		.loc 1 393 0
 633 0024 0091     		str	r1, [sp]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = ( Timer_t * ) xTimer;
 634              		.loc 1 394 0
 635 0026 0195     		str	r5, [sp, #4]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 636              		.loc 1 395 0
 637 0028 0294     		str	r4, [sp, #8]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 638              		.loc 1 397 0
 639 002a 0529     		cmp	r1, #5
 640 002c 13DC     		bgt	.L49
 641              	.LVL56:
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 642              		.loc 1 399 0
 643 002e FFF7FEFF 		bl	xTaskGetSchedulerState
 644              	.LVL57:
 645 0032 0228     		cmp	r0, #2
 646 0034 07D1     		bne	.L50
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 647              		.loc 1 401 0
 648 0036 0023     		movs	r3, #0
 649 0038 089A     		ldr	r2, [sp, #32]
 650 003a 6946     		mov	r1, sp
 651 003c 0A48     		ldr	r0, .L53
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 33


 652 003e 0068     		ldr	r0, [r0]
 653 0040 FFF7FEFF 		bl	xQueueGenericSend
 654              	.LVL58:
 655 0044 0DE0     		b	.L48
 656              	.LVL59:
 657              	.L50:
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 658              		.loc 1 405 0
 659 0046 0023     		movs	r3, #0
 660 0048 1A46     		mov	r2, r3
 661 004a 6946     		mov	r1, sp
 662 004c 0648     		ldr	r0, .L53
 663 004e 0068     		ldr	r0, [r0]
 664 0050 FFF7FEFF 		bl	xQueueGenericSend
 665              	.LVL60:
 666 0054 05E0     		b	.L48
 667              	.LVL61:
 668              	.L49:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 669              		.loc 1 410 0
 670 0056 0023     		movs	r3, #0
 671 0058 6946     		mov	r1, sp
 672              	.LVL62:
 673 005a FFF7FEFF 		bl	xQueueGenericSendFromISR
 674              	.LVL63:
 675 005e 00E0     		b	.L48
 676              	.LVL64:
 677              	.L51:
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 678              		.loc 1 383 0
 679 0060 0020     		movs	r0, #0
 680              	.LVL65:
 681              	.L48:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 682              		.loc 1 421 0
 683 0062 05B0     		add	sp, sp, #20
 684              	.LCFI16:
 685              		.cfi_def_cfa_offset 12
 686              		@ sp needed
 687 0064 30BD     		pop	{r4, r5, pc}
 688              	.LVL66:
 689              	.L54:
 690 0066 00BF     		.align	2
 691              	.L53:
 692 0068 00000000 		.word	.LANCHOR2
 693              		.cfi_endproc
 694              	.LFE8:
 696              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 697              		.align	2
 698              		.thumb
 699              		.thumb_func
 701              	prvSwitchTimerLists:
 702              	.LFB20:
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 703              		.loc 1 836 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 0
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 34


 706              		@ frame_needed = 0, uses_anonymous_args = 0
 707 0000 70B5     		push	{r4, r5, r6, lr}
 708              	.LCFI17:
 709              		.cfi_def_cfa_offset 16
 710              		.cfi_offset 4, -16
 711              		.cfi_offset 5, -12
 712              		.cfi_offset 6, -8
 713              		.cfi_offset 14, -4
 714 0002 82B0     		sub	sp, sp, #8
 715              	.LCFI18:
 716              		.cfi_def_cfa_offset 24
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 717              		.loc 1 846 0
 718 0004 29E0     		b	.L57
 719              	.L61:
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 720              		.loc 1 848 0
 721 0006 DB68     		ldr	r3, [r3, #12]
 722 0008 1E68     		ldr	r6, [r3]
 723              	.LVL67:
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 724              		.loc 1 851 0
 725 000a DC68     		ldr	r4, [r3, #12]
 726              	.LVL68:
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 727              		.loc 1 852 0
 728 000c 251D     		adds	r5, r4, #4
 729 000e 2846     		mov	r0, r5
 730 0010 FFF7FEFF 		bl	uxListRemove
 731              	.LVL69:
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 732              		.loc 1 858 0
 733 0014 636A     		ldr	r3, [r4, #36]
 734 0016 2046     		mov	r0, r4
 735 0018 9847     		blx	r3
 736              	.LVL70:
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 737              		.loc 1 860 0
 738 001a E369     		ldr	r3, [r4, #28]
 739 001c 012B     		cmp	r3, #1
 740 001e 1CD1     		bne	.L57
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 741              		.loc 1 868 0
 742 0020 A369     		ldr	r3, [r4, #24]
 743 0022 3344     		add	r3, r3, r6
 744              	.LVL71:
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 745              		.loc 1 869 0
 746 0024 9E42     		cmp	r6, r3
 747 0026 07D2     		bcs	.L58
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 748              		.loc 1 871 0
 749 0028 6360     		str	r3, [r4, #4]
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 750              		.loc 1 872 0
 751 002a 2461     		str	r4, [r4, #16]
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 35


 752              		.loc 1 873 0
 753 002c 2946     		mov	r1, r5
 754 002e 114B     		ldr	r3, .L63
 755              	.LVL72:
 756 0030 1868     		ldr	r0, [r3]
 757 0032 FFF7FEFF 		bl	vListInsert
 758              	.LVL73:
 759 0036 10E0     		b	.L57
 760              	.LVL74:
 761              	.L58:
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 762              		.loc 1 877 0
 763 0038 0021     		movs	r1, #0
 764 003a 0091     		str	r1, [sp]
 765 003c 0B46     		mov	r3, r1
 766              	.LVL75:
 767 003e 3246     		mov	r2, r6
 768 0040 2046     		mov	r0, r4
 769 0042 FFF7FEFF 		bl	xTimerGenericCommand
 770              	.LVL76:
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 771              		.loc 1 878 0
 772 0046 40B9     		cbnz	r0, .L57
 773              	.LBB55:
 774              	.LBB56:
 775              		.loc 2 195 0
 776              		.syntax unified
 777              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 778 0048 4FF05003 			mov r3, #80												
 779 004c 83F31188 		msr basepri, r3											
 780 0050 BFF36F8F 		isb														
 781 0054 BFF34F8F 		dsb														
 782              	
 783              	@ 0 "" 2
 784              	.LVL77:
 785              		.thumb
 786              		.syntax unified
 787              	.L60:
 788 0058 FEE7     		b	.L60
 789              	.LVL78:
 790              	.L57:
 791              	.LBE56:
 792              	.LBE55:
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 793              		.loc 1 846 0
 794 005a 064B     		ldr	r3, .L63
 795 005c 1B68     		ldr	r3, [r3]
 796 005e 1A68     		ldr	r2, [r3]
 797 0060 002A     		cmp	r2, #0
 798 0062 D0D1     		bne	.L61
 799              	.LVL79:
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 800              		.loc 1 889 0
 801 0064 044A     		ldr	r2, .L63+4
 802 0066 1068     		ldr	r0, [r2]
 803 0068 0249     		ldr	r1, .L63
 804 006a 0860     		str	r0, [r1]
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 36


 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 805              		.loc 1 890 0
 806 006c 1360     		str	r3, [r2]
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 807              		.loc 1 891 0
 808 006e 02B0     		add	sp, sp, #8
 809              	.LCFI19:
 810              		.cfi_def_cfa_offset 16
 811              		@ sp needed
 812 0070 70BD     		pop	{r4, r5, r6, pc}
 813              	.L64:
 814 0072 00BF     		.align	2
 815              	.L63:
 816 0074 00000000 		.word	.LANCHOR0
 817 0078 00000000 		.word	.LANCHOR1
 818              		.cfi_endproc
 819              	.LFE20:
 821              		.section	.text.prvSampleTimeNow,"ax",%progbits
 822              		.align	2
 823              		.thumb
 824              		.thumb_func
 826              	prvSampleTimeNow:
 827              	.LFB17:
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 828              		.loc 1 625 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              	.LVL80:
 833 0000 38B5     		push	{r3, r4, r5, lr}
 834              	.LCFI20:
 835              		.cfi_def_cfa_offset 16
 836              		.cfi_offset 3, -16
 837              		.cfi_offset 4, -12
 838              		.cfi_offset 5, -8
 839              		.cfi_offset 14, -4
 840 0002 0546     		mov	r5, r0
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 841              		.loc 1 629 0
 842 0004 FFF7FEFF 		bl	xTaskGetTickCount
 843              	.LVL81:
 844 0008 0446     		mov	r4, r0
 845              	.LVL82:
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 846              		.loc 1 631 0
 847 000a 074B     		ldr	r3, .L69
 848 000c 1B68     		ldr	r3, [r3]
 849 000e 9842     		cmp	r0, r3
 850 0010 04D2     		bcs	.L66
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 851              		.loc 1 633 0
 852 0012 FFF7FEFF 		bl	prvSwitchTimerLists
 853              	.LVL83:
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 854              		.loc 1 634 0
 855 0016 0123     		movs	r3, #1
 856 0018 2B60     		str	r3, [r5]
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 37


 857 001a 01E0     		b	.L67
 858              	.LVL84:
 859              	.L66:
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 860              		.loc 1 638 0
 861 001c 0023     		movs	r3, #0
 862 001e 2B60     		str	r3, [r5]
 863              	.LVL85:
 864              	.L67:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 865              		.loc 1 641 0
 866 0020 014B     		ldr	r3, .L69
 867 0022 1C60     		str	r4, [r3]
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 868              		.loc 1 644 0
 869 0024 2046     		mov	r0, r4
 870 0026 38BD     		pop	{r3, r4, r5, pc}
 871              	.LVL86:
 872              	.L70:
 873              		.align	2
 874              	.L69:
 875 0028 00000000 		.word	.LANCHOR8
 876              		.cfi_endproc
 877              	.LFE17:
 879              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 880              		.align	2
 881              		.thumb
 882              		.thumb_func
 884              	prvProcessExpiredTimer:
 885              	.LFB13:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 886              		.loc 1 463 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              	.LVL87:
 891 0000 70B5     		push	{r4, r5, r6, lr}
 892              	.LCFI21:
 893              		.cfi_def_cfa_offset 16
 894              		.cfi_offset 4, -16
 895              		.cfi_offset 5, -12
 896              		.cfi_offset 6, -8
 897              		.cfi_offset 14, -4
 898 0002 82B0     		sub	sp, sp, #8
 899              	.LCFI22:
 900              		.cfi_def_cfa_offset 24
 901 0004 0546     		mov	r5, r0
 902 0006 0E46     		mov	r6, r1
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 903              		.loc 1 465 0
 904 0008 134B     		ldr	r3, .L75
 905 000a 1B68     		ldr	r3, [r3]
 906 000c DB68     		ldr	r3, [r3, #12]
 907 000e DC68     		ldr	r4, [r3, #12]
 908              	.LVL88:
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 909              		.loc 1 469 0
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 38


 910 0010 201D     		adds	r0, r4, #4
 911              	.LVL89:
 912 0012 FFF7FEFF 		bl	uxListRemove
 913              	.LVL90:
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 914              		.loc 1 474 0
 915 0016 E369     		ldr	r3, [r4, #28]
 916 0018 012B     		cmp	r3, #1
 917 001a 18D1     		bne	.L72
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 918              		.loc 1 479 0
 919 001c A169     		ldr	r1, [r4, #24]
 920 001e 2B46     		mov	r3, r5
 921 0020 3246     		mov	r2, r6
 922 0022 2944     		add	r1, r1, r5
 923 0024 2046     		mov	r0, r4
 924 0026 FFF7FEFF 		bl	prvInsertTimerInActiveList
 925              	.LVL91:
 926 002a 80B1     		cbz	r0, .L72
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 927              		.loc 1 483 0
 928 002c 0021     		movs	r1, #0
 929 002e 0091     		str	r1, [sp]
 930 0030 0B46     		mov	r3, r1
 931 0032 2A46     		mov	r2, r5
 932 0034 2046     		mov	r0, r4
 933 0036 FFF7FEFF 		bl	xTimerGenericCommand
 934              	.LVL92:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 935              		.loc 1 484 0
 936 003a 40B9     		cbnz	r0, .L72
 937              	.LBB57:
 938              	.LBB58:
 939              		.loc 2 195 0
 940              		.syntax unified
 941              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 942 003c 4FF05003 			mov r3, #80												
 943 0040 83F31188 		msr basepri, r3											
 944 0044 BFF36F8F 		isb														
 945 0048 BFF34F8F 		dsb														
 946              	
 947              	@ 0 "" 2
 948              	.LVL93:
 949              		.thumb
 950              		.syntax unified
 951              	.L73:
 952 004c FEE7     		b	.L73
 953              	.LVL94:
 954              	.L72:
 955              	.LBE58:
 956              	.LBE57:
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 957              		.loc 1 498 0
 958 004e 636A     		ldr	r3, [r4, #36]
 959 0050 2046     		mov	r0, r4
 960 0052 9847     		blx	r3
 961              	.LVL95:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 39


 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 962              		.loc 1 499 0
 963 0054 02B0     		add	sp, sp, #8
 964              	.LCFI23:
 965              		.cfi_def_cfa_offset 16
 966              		@ sp needed
 967 0056 70BD     		pop	{r4, r5, r6, pc}
 968              	.LVL96:
 969              	.L76:
 970              		.align	2
 971              	.L75:
 972 0058 00000000 		.word	.LANCHOR0
 973              		.cfi_endproc
 974              	.LFE13:
 976              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 977              		.align	2
 978              		.thumb
 979              		.thumb_func
 981              	prvProcessTimerOrBlockTask:
 982              	.LFB15:
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 983              		.loc 1 539 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987              	.LVL97:
 988 0000 70B5     		push	{r4, r5, r6, lr}
 989              	.LCFI24:
 990              		.cfi_def_cfa_offset 16
 991              		.cfi_offset 4, -16
 992              		.cfi_offset 5, -12
 993              		.cfi_offset 6, -8
 994              		.cfi_offset 14, -4
 995 0002 82B0     		sub	sp, sp, #8
 996              	.LCFI25:
 997              		.cfi_def_cfa_offset 24
 998 0004 0646     		mov	r6, r0
 999 0006 0C46     		mov	r4, r1
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1000              		.loc 1 543 0
 1001 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1002              	.LVL98:
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1003              		.loc 1 550 0
 1004 000c 01A8     		add	r0, sp, #4
 1005 000e FFF7FEFF 		bl	prvSampleTimeNow
 1006              	.LVL99:
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1007              		.loc 1 551 0
 1008 0012 019B     		ldr	r3, [sp, #4]
 1009 0014 1BBB     		cbnz	r3, .L78
 1010 0016 0546     		mov	r5, r0
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1011              		.loc 1 554 0
 1012 0018 44B9     		cbnz	r4, .L79
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1013              		.loc 1 554 0 is_stmt 0 discriminator 1
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 40


 1014 001a B042     		cmp	r0, r6
 1015 001c 06D3     		bcc	.L79
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1016              		.loc 1 556 0 is_stmt 1
 1017 001e FFF7FEFF 		bl	xTaskResumeAll
 1018              	.LVL100:
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1019              		.loc 1 557 0
 1020 0022 2946     		mov	r1, r5
 1021 0024 3046     		mov	r0, r6
 1022 0026 FFF7FEFF 		bl	prvProcessExpiredTimer
 1023              	.LVL101:
 1024 002a 1AE0     		b	.L77
 1025              	.LVL102:
 1026              	.L79:
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1027              		.loc 1 567 0
 1028 002c 2CB1     		cbz	r4, .L81
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1029              		.loc 1 571 0
 1030 002e 0E4B     		ldr	r3, .L83
 1031 0030 1B68     		ldr	r3, [r3]
 1032 0032 1C68     		ldr	r4, [r3]
 1033              	.LVL103:
 1034 0034 B4FA84F4 		clz	r4, r4
 1035 0038 6409     		lsrs	r4, r4, #5
 1036              	.LVL104:
 1037              	.L81:
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1038              		.loc 1 574 0
 1039 003a 2246     		mov	r2, r4
 1040 003c 711B     		subs	r1, r6, r5
 1041 003e 0B4B     		ldr	r3, .L83+4
 1042 0040 1868     		ldr	r0, [r3]
 1043              	.LVL105:
 1044 0042 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
 1045              	.LVL106:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1046              		.loc 1 576 0
 1047 0046 FFF7FEFF 		bl	xTaskResumeAll
 1048              	.LVL107:
 1049 004a 50B9     		cbnz	r0, .L77
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1050              		.loc 1 582 0
 1051 004c 4FF08052 		mov	r2, #268435456
 1052 0050 074B     		ldr	r3, .L83+8
 1053 0052 1A60     		str	r2, [r3]
 1054              		.syntax unified
 1055              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1056 0054 BFF34F8F 		dsb
 1057              	@ 0 "" 2
 1058              	@ 582 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1059 0058 BFF36F8F 		isb
 1060              	@ 0 "" 2
 1061              		.thumb
 1062              		.syntax unified
 1063 005c 01E0     		b	.L77
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 41


 1064              	.LVL108:
 1065              	.L78:
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1066              		.loc 1 592 0
 1067 005e FFF7FEFF 		bl	xTaskResumeAll
 1068              	.LVL109:
 1069              	.L77:
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1070              		.loc 1 595 0
 1071 0062 02B0     		add	sp, sp, #8
 1072              	.LCFI26:
 1073              		.cfi_def_cfa_offset 16
 1074              		@ sp needed
 1075 0064 70BD     		pop	{r4, r5, r6, pc}
 1076              	.LVL110:
 1077              	.L84:
 1078 0066 00BF     		.align	2
 1079              	.L83:
 1080 0068 00000000 		.word	.LANCHOR1
 1081 006c 00000000 		.word	.LANCHOR2
 1082 0070 04ED00E0 		.word	-536810236
 1083              		.cfi_endproc
 1084              	.LFE15:
 1086              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1087              		.align	2
 1088              		.thumb
 1089              		.thumb_func
 1091              	prvProcessReceivedCommands:
 1092              	.LFB19:
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1093              		.loc 1 689 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 24
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097 0000 30B5     		push	{r4, r5, lr}
 1098              	.LCFI27:
 1099              		.cfi_def_cfa_offset 12
 1100              		.cfi_offset 4, -12
 1101              		.cfi_offset 5, -8
 1102              		.cfi_offset 14, -4
 1103 0002 89B0     		sub	sp, sp, #36
 1104              	.LCFI28:
 1105              		.cfi_def_cfa_offset 48
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1106              		.loc 1 695 0
 1107 0004 57E0     		b	.L88
 1108              	.L98:
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1109              		.loc 1 701 0
 1110 0006 049B     		ldr	r3, [sp, #16]
 1111 0008 002B     		cmp	r3, #0
 1112 000a 03DA     		bge	.L87
 1113              	.LVL111:
 1114              	.LBB59:
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1115              		.loc 1 710 0
 1116 000c 0799     		ldr	r1, [sp, #28]
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 42


 1117 000e 0698     		ldr	r0, [sp, #24]
 1118 0010 059B     		ldr	r3, [sp, #20]
 1119 0012 9847     		blx	r3
 1120              	.LVL112:
 1121              	.L87:
 1122              	.LBE59:
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1123              		.loc 1 721 0
 1124 0014 049B     		ldr	r3, [sp, #16]
 1125 0016 002B     		cmp	r3, #0
 1126 0018 4DDB     		blt	.L88
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1127              		.loc 1 725 0
 1128 001a 069C     		ldr	r4, [sp, #24]
 1129              	.LVL113:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1130              		.loc 1 727 0
 1131 001c 6369     		ldr	r3, [r4, #20]
 1132 001e 13B1     		cbz	r3, .L89
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1133              		.loc 1 730 0
 1134 0020 201D     		adds	r0, r4, #4
 1135 0022 FFF7FEFF 		bl	uxListRemove
 1136              	.LVL114:
 1137              	.L89:
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1138              		.loc 1 745 0
 1139 0026 03A8     		add	r0, sp, #12
 1140 0028 FFF7FEFF 		bl	prvSampleTimeNow
 1141              	.LVL115:
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1142              		.loc 1 747 0
 1143 002c 049B     		ldr	r3, [sp, #16]
 1144 002e 092B     		cmp	r3, #9
 1145 0030 41D8     		bhi	.L88
 1146 0032 DFE803F0 		tbb	[pc, r3]
 1147              	.L92:
 1148 0036 05       		.byte	(.L91-.L92)/2
 1149 0037 05       		.byte	(.L91-.L92)/2
 1150 0038 05       		.byte	(.L91-.L92)/2
 1151 0039 40       		.byte	(.L88-.L92)/2
 1152 003a 27       		.byte	(.L93-.L92)/2
 1153 003b 3A       		.byte	(.L94-.L92)/2
 1154 003c 05       		.byte	(.L91-.L92)/2
 1155 003d 05       		.byte	(.L91-.L92)/2
 1156 003e 40       		.byte	(.L88-.L92)/2
 1157 003f 27       		.byte	(.L93-.L92)/2
 1158              		.p2align 1
 1159              	.L91:
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1160              		.loc 1 755 0
 1161 0040 0599     		ldr	r1, [sp, #20]
 1162 0042 A569     		ldr	r5, [r4, #24]
 1163 0044 0B46     		mov	r3, r1
 1164 0046 0246     		mov	r2, r0
 1165 0048 2944     		add	r1, r1, r5
 1166 004a 2046     		mov	r0, r4
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 43


 1167              	.LVL116:
 1168 004c FFF7FEFF 		bl	prvInsertTimerInActiveList
 1169              	.LVL117:
 1170 0050 88B3     		cbz	r0, .L88
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1171              		.loc 1 759 0
 1172 0052 636A     		ldr	r3, [r4, #36]
 1173 0054 2046     		mov	r0, r4
 1174 0056 9847     		blx	r3
 1175              	.LVL118:
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1176              		.loc 1 762 0
 1177 0058 E369     		ldr	r3, [r4, #28]
 1178 005a 012B     		cmp	r3, #1
 1179 005c 2BD1     		bne	.L88
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1180              		.loc 1 764 0
 1181 005e A269     		ldr	r2, [r4, #24]
 1182 0060 0021     		movs	r1, #0
 1183 0062 0091     		str	r1, [sp]
 1184 0064 0B46     		mov	r3, r1
 1185 0066 0598     		ldr	r0, [sp, #20]
 1186 0068 0244     		add	r2, r2, r0
 1187 006a 2046     		mov	r0, r4
 1188 006c FFF7FEFF 		bl	xTimerGenericCommand
 1189              	.LVL119:
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1190              		.loc 1 765 0
 1191 0070 08BB     		cbnz	r0, .L88
 1192              	.LBB60:
 1193              	.LBB61:
 1194              		.loc 2 195 0
 1195              		.syntax unified
 1196              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1197 0072 4FF05003 			mov r3, #80												
 1198 0076 83F31188 		msr basepri, r3											
 1199 007a BFF36F8F 		isb														
 1200 007e BFF34F8F 		dsb														
 1201              	
 1202              	@ 0 "" 2
 1203              	.LVL120:
 1204              		.thumb
 1205              		.syntax unified
 1206              	.L95:
 1207 0082 FEE7     		b	.L95
 1208              	.LVL121:
 1209              	.L93:
 1210              	.LBE61:
 1211              	.LBE60:
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1212              		.loc 1 787 0
 1213 0084 0599     		ldr	r1, [sp, #20]
 1214 0086 A161     		str	r1, [r4, #24]
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1215              		.loc 1 788 0
 1216 0088 41B9     		cbnz	r1, .L96
 1217              	.LBB62:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 44


 1218              	.LBB63:
 1219              		.loc 2 195 0
 1220              		.syntax unified
 1221              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1222 008a 4FF05003 			mov r3, #80												
 1223 008e 83F31188 		msr basepri, r3											
 1224 0092 BFF36F8F 		isb														
 1225 0096 BFF34F8F 		dsb														
 1226              	
 1227              	@ 0 "" 2
 1228              	.LVL122:
 1229              		.thumb
 1230              		.syntax unified
 1231              	.L97:
 1232 009a FEE7     		b	.L97
 1233              	.L96:
 1234              	.LBE63:
 1235              	.LBE62:
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1236              		.loc 1 796 0
 1237 009c 0346     		mov	r3, r0
 1238 009e 0246     		mov	r2, r0
 1239 00a0 0144     		add	r1, r1, r0
 1240 00a2 2046     		mov	r0, r4
 1241              	.LVL123:
 1242 00a4 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1243              	.LVL124:
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1244              		.loc 1 797 0
 1245 00a8 05E0     		b	.L88
 1246              	.LVL125:
 1247              	.L94:
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1248              		.loc 1 814 0
 1249 00aa 94F82C30 		ldrb	r3, [r4, #44]	@ zero_extendqisi2
 1250 00ae 13B9     		cbnz	r3, .L88
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1251              		.loc 1 816 0
 1252 00b0 2046     		mov	r0, r4
 1253              	.LVL126:
 1254 00b2 FFF7FEFF 		bl	vPortFree
 1255              	.LVL127:
 1256              	.L88:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1257              		.loc 1 695 0
 1258 00b6 0022     		movs	r2, #0
 1259 00b8 04A9     		add	r1, sp, #16
 1260 00ba 044B     		ldr	r3, .L100
 1261 00bc 1868     		ldr	r0, [r3]
 1262 00be FFF7FEFF 		bl	xQueueReceive
 1263              	.LVL128:
 1264 00c2 0028     		cmp	r0, #0
 1265 00c4 9FD1     		bne	.L98
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1266              		.loc 1 832 0
 1267 00c6 09B0     		add	sp, sp, #36
 1268              	.LCFI29:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 45


 1269              		.cfi_def_cfa_offset 12
 1270              		@ sp needed
 1271 00c8 30BD     		pop	{r4, r5, pc}
 1272              	.L101:
 1273 00ca 00BF     		.align	2
 1274              	.L100:
 1275 00cc 00000000 		.word	.LANCHOR2
 1276              		.cfi_endproc
 1277              	.LFE19:
 1279              		.section	.text.prvTimerTask,"ax",%progbits
 1280              		.align	2
 1281              		.thumb
 1282              		.thumb_func
 1284              	prvTimerTask:
 1285              	.LFB14:
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1286              		.loc 1 503 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 8
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              	.LVL129:
 1291 0000 00B5     		push	{lr}
 1292              	.LCFI30:
 1293              		.cfi_def_cfa_offset 4
 1294              		.cfi_offset 14, -4
 1295 0002 83B0     		sub	sp, sp, #12
 1296              	.LCFI31:
 1297              		.cfi_def_cfa_offset 16
 1298              	.LVL130:
 1299              	.L103:
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1300              		.loc 1 526 0 discriminator 1
 1301 0004 01A8     		add	r0, sp, #4
 1302 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1303              	.LVL131:
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1304              		.loc 1 530 0 discriminator 1
 1305 000a 0199     		ldr	r1, [sp, #4]
 1306 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1307              	.LVL132:
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1308              		.loc 1 533 0 discriminator 1
 1309 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1310              	.LVL133:
 1311 0014 F6E7     		b	.L103
 1312              		.cfi_endproc
 1313              	.LFE14:
 1315 0016 00BF     		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1316              		.align	2
 1317              		.global	xTimerGetTimerDaemonTaskHandle
 1318              		.thumb
 1319              		.thumb_func
 1321              	xTimerGetTimerDaemonTaskHandle:
 1322              	.LFB9:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1323              		.loc 1 425 0
 1324              		.cfi_startproc
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 46


 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
 1327              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1328              		.loc 1 428 0
 1329 0000 064B     		ldr	r3, .L108
 1330 0002 1868     		ldr	r0, [r3]
 1331 0004 40B9     		cbnz	r0, .L106
 1332              	.LBB64:
 1333              	.LBB65:
 1334              		.loc 2 195 0
 1335              		.syntax unified
 1336              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1337 0006 4FF05003 			mov r3, #80												
 1338 000a 83F31188 		msr basepri, r3											
 1339 000e BFF36F8F 		isb														
 1340 0012 BFF34F8F 		dsb														
 1341              	
 1342              	@ 0 "" 2
 1343              	.LVL134:
 1344              		.thumb
 1345              		.syntax unified
 1346              	.L107:
 1347 0016 FEE7     		b	.L107
 1348              	.L106:
 1349              	.LBE65:
 1350              	.LBE64:
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1351              		.loc 1 430 0
 1352 0018 7047     		bx	lr
 1353              	.L109:
 1354 001a 00BF     		.align	2
 1355              	.L108:
 1356 001c 00000000 		.word	.LANCHOR7
 1357              		.cfi_endproc
 1358              	.LFE9:
 1360              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1361              		.align	2
 1362              		.global	xTimerGetPeriod
 1363              		.thumb
 1364              		.thumb_func
 1366              	xTimerGetPeriod:
 1367              	.LFB10:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1368              		.loc 1 434 0
 1369              		.cfi_startproc
 1370              		@ args = 0, pretend = 0, frame = 0
 1371              		@ frame_needed = 0, uses_anonymous_args = 0
 1372              		@ link register save eliminated.
 1373              	.LVL135:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1374              		.loc 1 437 0
 1375 0000 40B9     		cbnz	r0, .L111
 1376              	.LBB66:
 1377              	.LBB67:
 1378              		.loc 2 195 0
 1379              		.syntax unified
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 47


 1380              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1381 0002 4FF05003 			mov r3, #80												
 1382 0006 83F31188 		msr basepri, r3											
 1383 000a BFF36F8F 		isb														
 1384 000e BFF34F8F 		dsb														
 1385              	
 1386              	@ 0 "" 2
 1387              	.LVL136:
 1388              		.thumb
 1389              		.syntax unified
 1390              	.L112:
 1391 0012 FEE7     		b	.L112
 1392              	.L111:
 1393              	.LBE67:
 1394              	.LBE66:
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1395              		.loc 1 439 0
 1396 0014 8069     		ldr	r0, [r0, #24]
 1397              	.LVL137:
 1398 0016 7047     		bx	lr
 1399              		.cfi_endproc
 1400              	.LFE10:
 1402              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1403              		.align	2
 1404              		.global	xTimerGetExpiryTime
 1405              		.thumb
 1406              		.thumb_func
 1408              	xTimerGetExpiryTime:
 1409              	.LFB11:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer = ( Timer_t * ) xTimer;
 1410              		.loc 1 443 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 0, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
 1415              	.LVL138:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1416              		.loc 1 447 0
 1417 0000 40B9     		cbnz	r0, .L114
 1418              	.LBB68:
 1419              	.LBB69:
 1420              		.loc 2 195 0
 1421              		.syntax unified
 1422              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1423 0002 4FF05003 			mov r3, #80												
 1424 0006 83F31188 		msr basepri, r3											
 1425 000a BFF36F8F 		isb														
 1426 000e BFF34F8F 		dsb														
 1427              	
 1428              	@ 0 "" 2
 1429              	.LVL139:
 1430              		.thumb
 1431              		.syntax unified
 1432              	.L115:
 1433 0012 FEE7     		b	.L115
 1434              	.L114:
 1435              	.LVL140:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 48


 1436              	.LBE69:
 1437              	.LBE68:
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1438              		.loc 1 450 0
 1439 0014 4068     		ldr	r0, [r0, #4]
 1440              	.LVL141:
 1441 0016 7047     		bx	lr
 1442              		.cfi_endproc
 1443              	.LFE11:
 1445              		.section	.text.pcTimerGetName,"ax",%progbits
 1446              		.align	2
 1447              		.global	pcTimerGetName
 1448              		.thumb
 1449              		.thumb_func
 1451              	pcTimerGetName:
 1452              	.LFB12:
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 1453              		.loc 1 454 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 0
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458              	.LVL142:
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1459              		.loc 1 457 0
 1460 0000 40B9     		cbnz	r0, .L117
 1461              	.LBB70:
 1462              	.LBB71:
 1463              		.loc 2 195 0
 1464              		.syntax unified
 1465              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1466 0002 4FF05003 			mov r3, #80												
 1467 0006 83F31188 		msr basepri, r3											
 1468 000a BFF36F8F 		isb														
 1469 000e BFF34F8F 		dsb														
 1470              	
 1471              	@ 0 "" 2
 1472              	.LVL143:
 1473              		.thumb
 1474              		.syntax unified
 1475              	.L118:
 1476 0012 FEE7     		b	.L118
 1477              	.L117:
 1478              	.LBE71:
 1479              	.LBE70:
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1480              		.loc 1 459 0
 1481 0014 0068     		ldr	r0, [r0]
 1482              	.LVL144:
 1483 0016 7047     		bx	lr
 1484              		.cfi_endproc
 1485              	.LFE12:
 1487              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1488              		.align	2
 1489              		.global	xTimerIsTimerActive
 1490              		.thumb
 1491              		.thumb_func
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 49


 1493              	xTimerIsTimerActive:
 1494              	.LFB22:
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1495              		.loc 1 946 0
 1496              		.cfi_startproc
 1497              		@ args = 0, pretend = 0, frame = 0
 1498              		@ frame_needed = 0, uses_anonymous_args = 0
 1499              	.LVL145:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = ( Timer_t * ) xTimer;
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1500              		.loc 1 950 0
 1501 0000 40B9     		cbnz	r0, .L120
 1502              	.LBB72:
 1503              	.LBB73:
 1504              		.loc 2 195 0
 1505              		.syntax unified
 1506              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1507 0002 4FF05003 			mov r3, #80												
 1508 0006 83F31188 		msr basepri, r3											
 1509 000a BFF36F8F 		isb														
 1510 000e BFF34F8F 		dsb														
 1511              	
 1512              	@ 0 "" 2
 1513              	.LVL146:
 1514              		.thumb
 1515              		.syntax unified
 1516              	.L121:
 1517 0012 FEE7     		b	.L121
 1518              	.L120:
 1519              	.LBE73:
 1520              	.LBE72:
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsInActiveList;
 1521              		.loc 1 946 0
 1522 0014 10B5     		push	{r4, lr}
 1523              	.LCFI32:
 1524              		.cfi_def_cfa_offset 8
 1525              		.cfi_offset 4, -8
 1526              		.cfi_offset 14, -4
 1527 0016 0446     		mov	r4, r0
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1528              		.loc 1 953 0
 1529 0018 FFF7FEFF 		bl	vPortEnterCritical
 1530              	.LVL147:
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Checking to see if it is in the NULL list in effect checks to see if
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is referenced from either the current or the overflow timer lists in
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		one go, but the logic has to be reversed, hence the '!'. */
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimerIsInActiveList = ( BaseType_t ) !( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListIte
 1531              		.loc 1 958 0
 1532 001c 6469     		ldr	r4, [r4, #20]
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 50


 1533              	.LVL148:
 1534 001e 0034     		adds	r4, r4, #0
 1535 0020 18BF     		it	ne
 1536 0022 0124     		movne	r4, #1
 1537              	.LVL149:
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1538              		.loc 1 960 0
 1539 0024 FFF7FEFF 		bl	vPortExitCritical
 1540              	.LVL150:
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerIsInActiveList;
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1541              		.loc 1 963 0
 1542 0028 2046     		mov	r0, r4
 1543 002a 10BD     		pop	{r4, pc}
 1544              		.cfi_endproc
 1545              	.LFE22:
 1547              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1548              		.align	2
 1549              		.global	pvTimerGetTimerID
 1550              		.thumb
 1551              		.thumb_func
 1553              	pvTimerGetTimerID:
 1554              	.LFB23:
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1555              		.loc 1 967 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 0
 1558              		@ frame_needed = 0, uses_anonymous_args = 0
 1559              	.LVL151:
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1560              		.loc 1 971 0
 1561 0000 40B9     		cbnz	r0, .L124
 1562              	.LBB74:
 1563              	.LBB75:
 1564              		.loc 2 195 0
 1565              		.syntax unified
 1566              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1567 0002 4FF05003 			mov r3, #80												
 1568 0006 83F31188 		msr basepri, r3											
 1569 000a BFF36F8F 		isb														
 1570 000e BFF34F8F 		dsb														
 1571              	
 1572              	@ 0 "" 2
 1573              	.LVL152:
 1574              		.thumb
 1575              		.syntax unified
 1576              	.L125:
 1577 0012 FEE7     		b	.L125
 1578              	.L124:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 51


 1579              	.LBE75:
 1580              	.LBE74:
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 1581              		.loc 1 967 0
 1582 0014 10B5     		push	{r4, lr}
 1583              	.LCFI33:
 1584              		.cfi_def_cfa_offset 8
 1585              		.cfi_offset 4, -8
 1586              		.cfi_offset 14, -4
 1587 0016 0446     		mov	r4, r0
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1588              		.loc 1 973 0
 1589 0018 FFF7FEFF 		bl	vPortEnterCritical
 1590              	.LVL153:
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1591              		.loc 1 975 0
 1592 001c 246A     		ldr	r4, [r4, #32]
 1593              	.LVL154:
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1594              		.loc 1 977 0
 1595 001e FFF7FEFF 		bl	vPortExitCritical
 1596              	.LVL155:
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1597              		.loc 1 980 0
 1598 0022 2046     		mov	r0, r4
 1599 0024 10BD     		pop	{r4, pc}
 1600              		.cfi_endproc
 1601              	.LFE23:
 1603 0026 00BF     		.section	.text.vTimerSetTimerID,"ax",%progbits
 1604              		.align	2
 1605              		.global	vTimerSetTimerID
 1606              		.thumb
 1607              		.thumb_func
 1609              	vTimerSetTimerID:
 1610              	.LFB24:
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1611              		.loc 1 984 0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 0
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615              	.LVL156:
 1616 0000 38B5     		push	{r3, r4, r5, lr}
 1617              	.LCFI34:
 1618              		.cfi_def_cfa_offset 16
 1619              		.cfi_offset 3, -16
 1620              		.cfi_offset 4, -12
 1621              		.cfi_offset 5, -8
 1622              		.cfi_offset 14, -4
 1623              	.LVL157:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 52


 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) xTimer;
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1624              		.loc 1 987 0
 1625 0002 40B9     		cbnz	r0, .L128
 1626              	.LBB76:
 1627              	.LBB77:
 1628              		.loc 2 195 0
 1629              		.syntax unified
 1630              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1631 0004 4FF05003 			mov r3, #80												
 1632 0008 83F31188 		msr basepri, r3											
 1633 000c BFF36F8F 		isb														
 1634 0010 BFF34F8F 		dsb														
 1635              	
 1636              	@ 0 "" 2
 1637              	.LVL158:
 1638              		.thumb
 1639              		.syntax unified
 1640              	.L129:
 1641 0014 FEE7     		b	.L129
 1642              	.L128:
 1643 0016 0446     		mov	r4, r0
 1644 0018 0D46     		mov	r5, r1
 1645              	.LBE77:
 1646              	.LBE76:
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1647              		.loc 1 989 0
 1648 001a FFF7FEFF 		bl	vPortEnterCritical
 1649              	.LVL159:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1650              		.loc 1 991 0
 1651 001e 2562     		str	r5, [r4, #32]
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1652              		.loc 1 993 0
 1653 0020 FFF7FEFF 		bl	vPortExitCritical
 1654              	.LVL160:
 1655 0024 38BD     		pop	{r3, r4, r5, pc}
 1656              		.cfi_endproc
 1657              	.LFE24:
 1659 0026 00BF     		.section	.text.xTimerPendFunctionCallFromISR,"ax",%progbits
 1660              		.align	2
 1661              		.global	xTimerPendFunctionCallFromISR
 1662              		.thumb
 1663              		.thumb_func
 1665              	xTimerPendFunctionCallFromISR:
 1666              	.LFB25:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 53


 1667              		.loc 1 1000 0
 1668              		.cfi_startproc
 1669              		@ args = 0, pretend = 0, frame = 16
 1670              		@ frame_needed = 0, uses_anonymous_args = 0
 1671              	.LVL161:
 1672 0000 10B5     		push	{r4, lr}
 1673              	.LCFI35:
 1674              		.cfi_def_cfa_offset 8
 1675              		.cfi_offset 4, -8
 1676              		.cfi_offset 14, -4
 1677 0002 84B0     		sub	sp, sp, #16
 1678              	.LCFI36:
 1679              		.cfi_def_cfa_offset 24
 1680 0004 1C46     		mov	r4, r3
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
 1681              		.loc 1 1006 0
 1682 0006 6FF00103 		mvn	r3, #1
 1683              	.LVL162:
 1684 000a 0093     		str	r3, [sp]
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1685              		.loc 1 1007 0
 1686 000c 0190     		str	r0, [sp, #4]
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1687              		.loc 1 1008 0
 1688 000e 0291     		str	r1, [sp, #8]
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1689              		.loc 1 1009 0
 1690 0010 0392     		str	r2, [sp, #12]
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 1691              		.loc 1 1011 0
 1692 0012 0023     		movs	r3, #0
 1693 0014 2246     		mov	r2, r4
 1694              	.LVL163:
 1695 0016 6946     		mov	r1, sp
 1696              	.LVL164:
 1697 0018 0248     		ldr	r0, .L133
 1698              	.LVL165:
 1699 001a 0068     		ldr	r0, [r0]
 1700 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 1701              	.LVL166:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1702              		.loc 1 1016 0
 1703 0020 04B0     		add	sp, sp, #16
 1704              	.LCFI37:
 1705              		.cfi_def_cfa_offset 8
 1706              		@ sp needed
 1707 0022 10BD     		pop	{r4, pc}
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 54


 1708              	.LVL167:
 1709              	.L134:
 1710              		.align	2
 1711              	.L133:
 1712 0024 00000000 		.word	.LANCHOR2
 1713              		.cfi_endproc
 1714              	.LFE25:
 1716              		.section	.text.xTimerPendFunctionCall,"ax",%progbits
 1717              		.align	2
 1718              		.global	xTimerPendFunctionCall
 1719              		.thumb
 1720              		.thumb_func
 1722              	xTimerPendFunctionCall:
 1723              	.LFB26:
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1724              		.loc 1 1024 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 16
 1727              		@ frame_needed = 0, uses_anonymous_args = 0
 1728              	.LVL168:
 1729 0000 30B5     		push	{r4, r5, lr}
 1730              	.LCFI38:
 1731              		.cfi_def_cfa_offset 12
 1732              		.cfi_offset 4, -12
 1733              		.cfi_offset 5, -8
 1734              		.cfi_offset 14, -4
 1735 0002 85B0     		sub	sp, sp, #20
 1736              	.LCFI39:
 1737              		.cfi_def_cfa_offset 32
 1738 0004 1446     		mov	r4, r2
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
 1739              		.loc 1 1031 0
 1740 0006 0D4A     		ldr	r2, .L139
 1741              	.LVL169:
 1742 0008 1568     		ldr	r5, [r2]
 1743 000a 45B9     		cbnz	r5, .L136
 1744              	.LBB78:
 1745              	.LBB79:
 1746              		.loc 2 195 0
 1747              		.syntax unified
 1748              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1749 000c 4FF05003 			mov r3, #80												
 1750 0010 83F31188 		msr basepri, r3											
 1751 0014 BFF36F8F 		isb														
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 55


 1752 0018 BFF34F8F 		dsb														
 1753              	
 1754              	@ 0 "" 2
 1755              	.LVL170:
 1756              		.thumb
 1757              		.syntax unified
 1758              	.L137:
 1759 001c FEE7     		b	.L137
 1760              	.LVL171:
 1761              	.L136:
 1762 001e 1A46     		mov	r2, r3
 1763 0020 0346     		mov	r3, r0
 1764              	.LVL172:
 1765              	.LBE79:
 1766              	.LBE78:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
 1767              		.loc 1 1035 0
 1768 0022 4FF0FF30 		mov	r0, #-1
 1769              	.LVL173:
 1770 0026 0090     		str	r0, [sp]
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
 1771              		.loc 1 1036 0
 1772 0028 0193     		str	r3, [sp, #4]
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
 1773              		.loc 1 1037 0
 1774 002a 0291     		str	r1, [sp, #8]
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
 1775              		.loc 1 1038 0
 1776 002c 0394     		str	r4, [sp, #12]
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 1777              		.loc 1 1040 0
 1778 002e 0023     		movs	r3, #0
 1779              	.LVL174:
 1780 0030 6946     		mov	r1, sp
 1781              	.LVL175:
 1782 0032 2846     		mov	r0, r5
 1783 0034 FFF7FEFF 		bl	xQueueGenericSend
 1784              	.LVL176:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1785              		.loc 1 1045 0
 1786 0038 05B0     		add	sp, sp, #20
 1787              	.LCFI40:
 1788              		.cfi_def_cfa_offset 12
 1789              		@ sp needed
 1790 003a 30BD     		pop	{r4, r5, pc}
 1791              	.LVL177:
 1792              	.L140:
 1793              		.align	2
 1794              	.L139:
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 56


 1795 003c 00000000 		.word	.LANCHOR2
 1796              		.cfi_endproc
 1797              	.LFE26:
 1799              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1800              		.align	2
 1801              		.global	uxTimerGetTimerNumber
 1802              		.thumb
 1803              		.thumb_func
 1805              	uxTimerGetTimerNumber:
 1806              	.LFB27:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1807              		.loc 1 1053 0
 1808              		.cfi_startproc
 1809              		@ args = 0, pretend = 0, frame = 0
 1810              		@ frame_needed = 0, uses_anonymous_args = 0
 1811              		@ link register save eliminated.
 1812              	.LVL178:
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1813              		.loc 1 1055 0
 1814 0000 806A     		ldr	r0, [r0, #40]
 1815              	.LVL179:
 1816 0002 7047     		bx	lr
 1817              		.cfi_endproc
 1818              	.LFE27:
 1820              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1821              		.align	2
 1822              		.global	vTimerSetTimerNumber
 1823              		.thumb
 1824              		.thumb_func
 1826              	vTimerSetTimerNumber:
 1827              	.LFB28:
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1828              		.loc 1 1063 0
 1829              		.cfi_startproc
 1830              		@ args = 0, pretend = 0, frame = 0
 1831              		@ frame_needed = 0, uses_anonymous_args = 0
 1832              		@ link register save eliminated.
 1833              	.LVL180:
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1834              		.loc 1 1064 0
 1835 0000 8162     		str	r1, [r0, #40]
 1836 0002 7047     		bx	lr
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 57


 1837              		.cfi_endproc
 1838              	.LFE28:
 1840              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1841              		.align	2
 1842              		.set	.LANCHOR0,. + 0
 1845              	pxCurrentTimerList:
 1846 0000 00000000 		.space	4
 1847              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1848              		.align	2
 1849              		.set	.LANCHOR3,. + 0
 1852              	xActiveTimerList1:
 1853 0000 00000000 		.space	20
 1853      00000000 
 1853      00000000 
 1853      00000000 
 1853      00000000 
 1854              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1855              		.align	2
 1856              		.set	.LANCHOR4,. + 0
 1859              	xActiveTimerList2:
 1860 0000 00000000 		.space	20
 1860      00000000 
 1860      00000000 
 1860      00000000 
 1860      00000000 
 1861              		.section	.bss.xLastTime.5506,"aw",%nobits
 1862              		.align	2
 1863              		.set	.LANCHOR8,. + 0
 1866              	xLastTime.5506:
 1867 0000 00000000 		.space	4
 1868              		.section	.bss.ucStaticTimerQueueStorage.5557,"aw",%nobits
 1869              		.align	2
 1870              		.set	.LANCHOR6,. + 0
 1873              	ucStaticTimerQueueStorage.5557:
 1874 0000 00000000 		.space	160
 1874      00000000 
 1874      00000000 
 1874      00000000 
 1874      00000000 
 1875              		.section	.rodata.str1.4,"aMS",%progbits,1
 1876              		.align	2
 1877              	.LC0:
 1878 0000 546D7251 		.ascii	"TmrQ\000"
 1878      00
 1879 0005 000000   		.space	3
 1880              	.LC1:
 1881 0008 546D7220 		.ascii	"Tmr Svc\000"
 1881      53766300 
 1882              		.section	.bss.xStaticTimerQueue.5556,"aw",%nobits
 1883              		.align	2
 1884              		.set	.LANCHOR5,. + 0
 1887              	xStaticTimerQueue.5556:
 1888 0000 00000000 		.space	80
 1888      00000000 
 1888      00000000 
 1888      00000000 
 1888      00000000 
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 58


 1889              		.section	.bss.xTimerQueue,"aw",%nobits
 1890              		.align	2
 1891              		.set	.LANCHOR2,. + 0
 1894              	xTimerQueue:
 1895 0000 00000000 		.space	4
 1896              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1897              		.align	2
 1898              		.set	.LANCHOR1,. + 0
 1901              	pxOverflowTimerList:
 1902 0000 00000000 		.space	4
 1903              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1904              		.align	2
 1905              		.set	.LANCHOR7,. + 0
 1908              	xTimerTaskHandle:
 1909 0000 00000000 		.space	4
 1910              		.text
 1911              	.Letext0:
 1912              		.file 3 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\lib\\gcc\\arm-none-eabi\\5.4.1\\include\\s
 1913              		.file 4 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\machine\\_default_
 1914              		.file 5 "d:\\tool_chain\\gcc-arm-none-eabi\\5.4 2016q3\\arm-none-eabi\\include\\sys\\_stdint.h"
 1915              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1916              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 1917              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1918              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1919              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 1920              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 59


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
D:\Programme\Cygwin\tmp\cc7AMs1f.s:22     .text.prvGetNextExpireTime:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:26     .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
D:\Programme\Cygwin\tmp\cc7AMs1f.s:59     .text.prvGetNextExpireTime:0000001c $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:64     .text.prvInsertTimerInActiveList:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:68     .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
D:\Programme\Cygwin\tmp\cc7AMs1f.s:144    .text.prvInsertTimerInActiveList:00000040 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:150    .text.prvCheckForValidListAndQueue:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:154    .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
D:\Programme\Cygwin\tmp\cc7AMs1f.s:224    .text.prvCheckForValidListAndQueue:0000004c $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:236    .text.prvInitialiseNewTimer:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:240    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
D:\Programme\Cygwin\tmp\cc7AMs1f.s:310    .text.xTimerCreateTimerTask:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:315    .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
D:\Programme\Cygwin\tmp\cc7AMs1f.s:413    .text.xTimerCreateTimerTask:00000060 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1284   .text.prvTimerTask:00000000 prvTimerTask
D:\Programme\Cygwin\tmp\cc7AMs1f.s:421    .text.xTimerCreate:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:426    .text.xTimerCreate:00000000 xTimerCreate
D:\Programme\Cygwin\tmp\cc7AMs1f.s:483    .text.xTimerCreateStatic:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:488    .text.xTimerCreateStatic:00000000 xTimerCreateStatic
D:\Programme\Cygwin\tmp\cc7AMs1f.s:579    .text.xTimerGenericCommand:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:584    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
D:\Programme\Cygwin\tmp\cc7AMs1f.s:692    .text.xTimerGenericCommand:00000068 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:697    .text.prvSwitchTimerLists:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:701    .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
D:\Programme\Cygwin\tmp\cc7AMs1f.s:816    .text.prvSwitchTimerLists:00000074 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:822    .text.prvSampleTimeNow:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:826    .text.prvSampleTimeNow:00000000 prvSampleTimeNow
D:\Programme\Cygwin\tmp\cc7AMs1f.s:875    .text.prvSampleTimeNow:00000028 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:880    .text.prvProcessExpiredTimer:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:884    .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
D:\Programme\Cygwin\tmp\cc7AMs1f.s:972    .text.prvProcessExpiredTimer:00000058 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:977    .text.prvProcessTimerOrBlockTask:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:981    .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1080   .text.prvProcessTimerOrBlockTask:00000068 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1087   .text.prvProcessReceivedCommands:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1091   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1148   .text.prvProcessReceivedCommands:00000036 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1158   .text.prvProcessReceivedCommands:00000040 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1275   .text.prvProcessReceivedCommands:000000cc $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1280   .text.prvTimerTask:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1316   .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1321   .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1356   .text.xTimerGetTimerDaemonTaskHandle:0000001c $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1361   .text.xTimerGetPeriod:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1366   .text.xTimerGetPeriod:00000000 xTimerGetPeriod
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1403   .text.xTimerGetExpiryTime:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1408   .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1446   .text.pcTimerGetName:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1451   .text.pcTimerGetName:00000000 pcTimerGetName
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1488   .text.xTimerIsTimerActive:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1493   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1548   .text.pvTimerGetTimerID:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1553   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1604   .text.vTimerSetTimerID:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1609   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
ARM GAS  D:\Programme\Cygwin\tmp\cc7AMs1f.s 			page 60


D:\Programme\Cygwin\tmp\cc7AMs1f.s:1660   .text.xTimerPendFunctionCallFromISR:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1665   .text.xTimerPendFunctionCallFromISR:00000000 xTimerPendFunctionCallFromISR
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1712   .text.xTimerPendFunctionCallFromISR:00000024 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1717   .text.xTimerPendFunctionCall:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1722   .text.xTimerPendFunctionCall:00000000 xTimerPendFunctionCall
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1795   .text.xTimerPendFunctionCall:0000003c $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1800   .text.uxTimerGetTimerNumber:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1805   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1821   .text.vTimerSetTimerNumber:00000000 $t
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1826   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1841   .bss.pxCurrentTimerList:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1845   .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1848   .bss.xActiveTimerList1:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1852   .bss.xActiveTimerList1:00000000 xActiveTimerList1
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1855   .bss.xActiveTimerList2:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1859   .bss.xActiveTimerList2:00000000 xActiveTimerList2
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1862   .bss.xLastTime.5506:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1866   .bss.xLastTime.5506:00000000 xLastTime.5506
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1869   .bss.ucStaticTimerQueueStorage.5557:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1873   .bss.ucStaticTimerQueueStorage.5557:00000000 ucStaticTimerQueueStorage.5557
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1876   .rodata.str1.4:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1883   .bss.xStaticTimerQueue.5556:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1887   .bss.xStaticTimerQueue.5556:00000000 xStaticTimerQueue.5556
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1890   .bss.xTimerQueue:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1894   .bss.xTimerQueue:00000000 xTimerQueue
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1897   .bss.pxOverflowTimerList:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1901   .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1904   .bss.xTimerTaskHandle:00000000 $d
D:\Programme\Cygwin\tmp\cc7AMs1f.s:1908   .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vPortExitCritical
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
xTaskResumeAll
vQueueWaitForMessageRestricted
vPortFree
xQueueReceive
