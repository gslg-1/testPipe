node
{
    String wdir = "w_pipe";
    String cmd = "";
    stage('Start')
    {
        Process rsp; 
        echo 'Start'
        
        rsp = execute("ls");
        println(rsp.text());
        
        cmd = "";
        cmd+"mkdir "+w_pipe;
        rsp = execute(cmd);
        println(rsp.text());
        
        cmd = "";
        cmd+"cd "+w_pipe;
        rsp = execute(cmd);
        println(cmd);
        
        rsp = execute("ls");
        println(rsp.text());
        
    }
    stage('List')
    {
        echo 'List'
        //print(listModules("code/*/modules/src/"));
        print(listModules("*"));
    }
    stage('Build')
    {
        echo 'Build'
    }
    stage('Test')
    {
        parallel StaticCodeAnalysis:
        {
            echo 'Static Code Analysis'
        }, 
        UnitTest:
        {
            echo 'Unit Test'
        }
    }
    stage('Deploy')
    {
        echo 'Deploy'
        deleteDir("*");
        'ls'.execute();
    }
    
}

/**
* @description: This function is used to delete all files at a especial location
* @param:
*       -path: Add a String with the 
*/
int deleteDir(path)
{
    if (path?.trim())
    {
        respond = 'rm -fr $path'.execute();
        println(respond);
        return 0;
    }
    return 1;
}

/**
* @description: This function is used to delete all files at a especial location
* @param:
*       -path: Add a String with the 
*/
String listModules(path)
{
    //if (path?.trim())
    //{
        return 'ls $path | grep "*.h" | sed s/.h//h'.execute().text;
    //}
    //return ""
}

/**
* @description: This function is used to delete all files at a especial location
* @param:
*       -path: Add a String with the 
*/
void printSh(cmd)
{
   def sout = new StringBuilder();
   def proc = cmd.execute();
   println(proc.text);
}